CREATE TABLE t1(
f0 int auto_increment PRIMARY KEY,
f1 int,
f2 varchar(200)
) charset latin1;
INSERT INTO t1(f1, f2) VALUES 
(0,"0"),(1,"1"),(2,"2"),(3,"3"),(4,"4"),(5,"5"),
(6,"6"),(7,"7"),(8,"8"),(9,"9"),(10,"10"),
(11,"11"),(12,"12"),(13,"13"),(14,"14"),(15,"15"),
(16,"16"),(17,"17"),(18,"18"),(19,"19"),(20,"20"),
(21,"21"),(22,"22"),(23,"23"),(24,"24"),(25,"25"),
(26,"26"),(27,"27"),(28,"28"),(29,"29"),(30,"30"),
(31,"31"),(32,"32"),(33,"33"),(34,"34"),(35,"35"),
(36,"36"),(37,"37"),(38,"38"),(39,"39"),(40,"40"),
(41,"41"),(42,"42"),(43,"43"),(44,"44"),(45,"45"),
(46,"46"),(47,"47"),(48,"48"),(49,"49"),(50,"50"),
(51,"51"),(52,"52"),(53,"53"),(54,"54"),(55,"55"),
(56,"56"),(57,"57"),(58,"58"),(59,"59"),(60,"60"),
(61,"61"),(62,"62"),(63,"63"),(64,"64"),(65,"65"),
(66,"66"),(67,"67"),(68,"68"),(69,"69"),(70,"70"),
(71,"71"),(72,"72"),(73,"73"),(74,"74"),(75,"75"),
(76,"76"),(77,"77"),(78,"78"),(79,"79"),(80,"80"),
(81,"81"),(82,"82"),(83,"83"),(84,"84"),(85,"85"),
(86,"86"),(87,"87"),(88,"88"),(89,"89"),(90,"90"),
(91,"91"),(92,"92"),(93,"93"),(94,"94"),(95,"95"),
(96,"96"),(97,"97"),(98,"98"),(99,"99");
CREATE TEMPORARY TABLE tmp (f1 int, f2 varchar(20)) charset latin1;
INSERT INTO tmp SELECT f1,f2 FROM t1;
INSERT INTO t1(f1,f2) SELECT * FROM tmp;
INSERT INTO tmp SELECT f1,f2 FROM t1;
INSERT INTO t1(f1,f2) SELECT * FROM tmp;
INSERT INTO t1(f1,f2) SELECT * FROM tmp;
INSERT INTO tmp SELECT f1,f2 FROM t1;
INSERT INTO t1(f1,f2) SELECT * FROM tmp;
INSERT INTO tmp SELECT f1,f2 FROM t1;
INSERT INTO t1(f1,f2) SELECT * FROM tmp;
INSERT INTO tmp SELECT f1,f2 FROM t1;
INSERT INTO t1(f1,f2) SELECT * FROM tmp;
INSERT INTO tmp SELECT f1,f2 FROM t1;
INSERT INTO t1(f1,f2) SELECT * FROM tmp;
INSERT INTO tmp SELECT f1,f2 FROM t1;
INSERT INTO t1(f1,f2) SELECT * FROM tmp;
set sort_buffer_size= 32768;
FLUSH STATUS;
SHOW SESSION STATUS LIKE 'Sort%';
Variable_name	Value
Sort_merge_passes	0
Sort_range	0
Sort_rows	0
Sort_scan	0
SELECT * FROM t1 ORDER BY f2,f0 LIMIT 101;
f0	f1	f2
1	0	0
101	0	0
228	0	0
328	0	0
428	0	0
739	0	0
839	0	0
939	0	0
1250	0	0
1350	0	0
1450	0	0
1550	0	0
1650	0	0
1750	0	0
1850	0	0
1950	0	0
2050	0	0
2150	0	0
2250	0	0
3297	0	0
3397	0	0
3497	0	0
3597	0	0
3697	0	0
3797	0	0
3897	0	0
3997	0	0
4097	0	0
4197	0	0
4297	0	0
4397	0	0
4497	0	0
4597	0	0
4697	0	0
4797	0	0
4897	0	0
4997	0	0
5097	0	0
5197	0	0
5297	0	0
5397	0	0
5497	0	0
5597	0	0
5697	0	0
5797	0	0
5897	0	0
5997	0	0
6097	0	0
6197	0	0
7392	0	0
7492	0	0
7592	0	0
7692	0	0
7792	0	0
7892	0	0
7992	0	0
8092	0	0
8192	0	0
8292	0	0
8392	0	0
8492	0	0
8592	0	0
8692	0	0
8792	0	0
8892	0	0
8992	0	0
9092	0	0
9192	0	0
9292	0	0
9392	0	0
9492	0	0
9592	0	0
9692	0	0
9792	0	0
9892	0	0
9992	0	0
10092	0	0
10192	0	0
10292	0	0
10392	0	0
10492	0	0
10592	0	0
10692	0	0
10792	0	0
10892	0	0
10992	0	0
11092	0	0
11192	0	0
11292	0	0
11392	0	0
11492	0	0
11592	0	0
11692	0	0
11792	0	0
11892	0	0
11992	0	0
12092	0	0
12192	0	0
12292	0	0
12392	0	0
12492	0	0
SHOW SESSION STATUS LIKE 'Sort%';
Variable_name	Value
Sort_merge_passes	102
Sort_range	0
Sort_rows	101
Sort_scan	1
FLUSH STATUS;
CREATE TABLE t2 (f1 int);
INSERT INTO t2 VALUES (0), (0);
SELECT * FROM t2 where f1 =
(SELECT f2 from t1 where t1.f1 = t2.f1 ORDER BY f1 LIMIT 1);
f1
0
0
SHOW SESSION STATUS LIKE 'Sort%';
Variable_name	Value
Sort_merge_passes	0
Sort_range	0
Sort_rows	2
Sort_scan	2
DROP TABLE t1, t2, tmp;
Bug#32038406: Filesort used for ORDER BY .. DESC even when
descending index available and used
CREATE TABLE t (
col1 INTEGER NOT NULL,
col2 BINARY(16) NOT NULL,
col3 VARCHAR(191) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
col4 INTEGER NOT NULL,
col5 TIMESTAMP(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
col6 BLOB,
PRIMARY KEY (col1),
UNIQUE KEY uc_key (col2, col3, col4)
);
INSERT INTO t VALUES(1, x'4142434445464748494a414243444546', 'WRITEBACK',
0, TIMESTAMP'2020-01-01 00:00:00.000000', NULL);
SELECT t.col1, t.col2, t.col3, t.col4, t.col5, t.col6
FROM t
WHERE t.col2 IN (x'4142434445464748494a414243444546') AND
t.col3 IN ('WRITEBACK')
ORDER BY t.col2 DESC, t.col3 DESC, t.col4 DESC
LIMIT 1;
col1	col2	col3	col4	col5	col6
1	ABCDEFGHIJABCDEF	WRITEBACK	0	2020-01-01 00:00:00.000000	NULL
explain SELECT t.col1, t.col2, t.col3, t.col4, t.col5, t.col6
FROM t
WHERE t.col2 IN (x'4142434445464748494a414243444546') AND
t.col3 IN ('WRITEBACK')
ORDER BY t.col2 DESC, t.col3 DESC, t.col4 DESC
LIMIT 1;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t	NULL	ref	uc_key	uc_key	782	const,const	1	100.00	Using where; Backward index scan
Warnings:
Note	1003	/* select#1 */ select `test`.`t`.`col1` AS `col1`,`test`.`t`.`col2` AS `col2`,`test`.`t`.`col3` AS `col3`,`test`.`t`.`col4` AS `col4`,`test`.`t`.`col5` AS `col5`,`test`.`t`.`col6` AS `col6` from `test`.`t` where ((`test`.`t`.`col2` = 0x4142434445464748494a414243444546) and (`test`.`t`.`col3` = 'WRITEBACK')) order by `test`.`t`.`col2` desc,`test`.`t`.`col3` desc,`test`.`t`.`col4` desc limit 1
DROP TABLE t;
Here, latin1 is used because it matches collation of temporal const
CREATE TABLE t1(vc VARCHAR(20) CHARACTER SET latin1);
INSERT INTO t1 VALUES('2021-02-08'), ('21-02-08');
Verify that a string const value removes ORDER BY clause
SELECT * FROM t1 WHERE vc = '2021-02-08' ORDER BY vc ASC;
vc
2021-02-08
explain SELECT * FROM t1 WHERE vc = '2021-02-08' ORDER BY vc ASC;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	ALL	NULL	NULL	NULL	NULL	2	50.00	Using where
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`vc` AS `vc` from `test`.`t1` where (`test`.`t1`.`vc` = '2021-02-08') order by `test`.`t1`.`vc`
SELECT * FROM t1 WHERE vc = '2021-02-08' ORDER BY vc DESC;
vc
2021-02-08
explain SELECT * FROM t1 WHERE vc = '2021-02-08' ORDER BY vc DESC;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	ALL	NULL	NULL	NULL	NULL	2	50.00	Using where
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`vc` AS `vc` from `test`.`t1` where (`test`.`t1`.`vc` = '2021-02-08') order by `test`.`t1`.`vc` desc
Verify the same with a variable (which is const for execution)
set @strvar = _latin1'2021-02-08';
SELECT * FROM t1 WHERE vc = @strvar ORDER BY vc ASC;
vc
2021-02-08
explain SELECT * FROM t1 WHERE vc = @strvar ORDER BY vc ASC;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	ALL	NULL	NULL	NULL	NULL	2	50.00	Using where
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`vc` AS `vc` from `test`.`t1` where (`test`.`t1`.`vc` = <cache>((@`strvar`))) order by `test`.`t1`.`vc`
SELECT * FROM t1 WHERE vc = @strvar ORDER BY vc DESC;
vc
2021-02-08
explain SELECT * FROM t1 WHERE vc = @strvar ORDER BY vc DESC;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	ALL	NULL	NULL	NULL	NULL	2	50.00	Using where
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`vc` AS `vc` from `test`.`t1` where (`test`.`t1`.`vc` = <cache>((@`strvar`))) order by `test`.`t1`.`vc` desc
Verify that a date const value does not remove ORDER BY clause
SELECT * FROM t1 WHERE vc = DATE'2021-02-08' ORDER BY vc ASC;
vc
2021-02-08
21-02-08
explain SELECT * FROM t1 WHERE vc = DATE'2021-02-08' ORDER BY vc ASC;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	ALL	NULL	NULL	NULL	NULL	2	50.00	Using where; Using filesort
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`vc` AS `vc` from `test`.`t1` where (`test`.`t1`.`vc` = DATE'2021-02-08') order by `test`.`t1`.`vc`
SELECT * FROM t1 WHERE vc = DATE'2021-02-08' ORDER BY vc DESC;
vc
21-02-08
2021-02-08
explain SELECT * FROM t1 WHERE vc = DATE'2021-02-08' ORDER BY vc DESC;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	ALL	NULL	NULL	NULL	NULL	2	50.00	Using where; Using filesort
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`vc` AS `vc` from `test`.`t1` where (`test`.`t1`.`vc` = DATE'2021-02-08') order by `test`.`t1`.`vc` desc
DROP TABLE t1;
#
# BUG: PS-7221 - crash on select Sys_var_tz::session_value_ptr
#
CREATE TABLE t1 (
id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
dt DATETIME NOT NULL
);
INSERT INTO t1 SET dt=NOW();
INSERT INTO t1 (dt) SELECT NOW() FROM t1;
SELECT id FROM t1 ORDER BY convert_tz(dt,'UTC',@@session.time_zone);
id
1
2
DROP TABLE t1;
