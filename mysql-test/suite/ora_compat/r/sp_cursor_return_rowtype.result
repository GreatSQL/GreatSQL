set sql_mode="oracle";
set @@udt_format_result='DBA';
CREATE TABLE t1 (a INT, b VARCHAR(3));
insert into t1 values(1,'aa'),(2,'bb'),(3,'cc'),(4,'dd'),(5,'ee') ;
create or replace type t_air as object(id int,type varchar(20));
create table tt_air(id int,name1 t_air);
create or replace type t_air_table as table of t_air;
#
# test of cursor return record%type is select_stmt
#
CREATE or replace PROCEDURE p1() as
type record is record(
id int := 1,
name_d  varchar(200));
CURSOR c return record%type IS SELECT a FROM t1 WHERE a>3;
a1 int;
b1 varchar(20);
begin
open c;
end;
$$
ERROR HY000: The variable: record is not record type.
#
# test of cursor return record%type is select_stmt
#
CREATE or replace PROCEDURE p1() as
CURSOR c return t1.id%type IS SELECT a FROM t1 WHERE a>3;
a1 int;
b1 varchar(20);
begin
open c;
end;
$$
ERROR HY000: The variable: id is not record type.
#
# test of cursor return record%type is select_stmt
#
CREATE or replace PROCEDURE p1() as
type record1 is record(
id int := 1,
name_d  varchar(200));
record2 record1;
CURSOR c return record2%type IS SELECT a FROM t1 WHERE a>3;
a1 int;
b1 varchar(20);
begin
open c;
end;
$$
call p1;
ERROR 21000: The used SELECT statements have a different number of columns
#
# test of cursor return record is select_stmt
#
CREATE or replace PROCEDURE p1() as
type record is record(
id int := 1,
name_d  varchar(200));
CURSOR c return record IS SELECT a FROM t1 WHERE a>3;
a1 int;
b1 varchar(20);
begin
open c;
end;
$$
call p1;
ERROR 21000: The used SELECT statements have a different number of columns
#
# test of cursor return record is select_stmt with different type
#
CREATE or replace PROCEDURE p1() as
type record is record(
id int := 1,
name_d int);
CURSOR c return record IS SELECT * FROM t1 WHERE a>3;
a1 int;
b1 varchar(20);
begin
open c;
fetch c into a1,b1;
end;
$$
call p1;
ERROR HY000: Incorrect integer value: 'dd' for column 'b' at row 1
#
# test of cursor return table%rowtype is select_stmt with different type
#
CREATE or replace PROCEDURE p1() as
CURSOR c return t1%rowtype IS SELECT a FROM t1 WHERE a>3;
a1 int;
b1 varchar(20);
begin
open c;
end;
$$
call p1;
ERROR 21000: The used SELECT statements have a different number of columns
#
# test of cursor return table%rowtype is select_stmt with different type
#
CREATE or replace PROCEDURE p1() as
CURSOR c return t1%rowtype IS SELECT b,a FROM t1 WHERE a>3;
a1 int;
b1 varchar(20);
begin
open c;
fetch c into a1,b1;
end;
$$
call p1;
ERROR HY000: Incorrect integer value: 'dd' for column 'b' at row 1
#
# test of cursor return cursor%rowtype is select_stmt with different type
#
CREATE or replace PROCEDURE p1() as
CURSOR c IS SELECT a FROM t1 WHERE a>3;
CURSOR c1 return c%rowtype IS SELECT * FROM t1 WHERE a>3;
a1 int;
b1 varchar(20);
begin
open c1;
end;
$$
call p1;
ERROR 21000: The used SELECT statements have a different number of columns
#
# test of cursor return cursor%rowtype is select_stmt with different type
#
CREATE or replace PROCEDURE p1() as
CURSOR c IS SELECT * FROM t1 WHERE a>3;
CURSOR c1 return c%rowtype IS SELECT b,a FROM t1 WHERE a>3;
a1 int;
b1 varchar(20);
begin
open c1;
fetch c1 into a1,b1;
end;
$$
call p1;
ERROR HY000: Incorrect integer value: 'dd' for column 'b' at row 1
#
# test of type is ref cursor return record%type
#
CREATE or replace PROCEDURE p1() as
type record is record(
id int := 1,
name_d  varchar(200));
TYPE ref_rs1 IS REF CURSOR RETURN record%type;
c ref_rs1;
begin
open c for select a from t1;
end;
$$
ERROR HY000: The variable: record is not record type.
#
# test of type is ref cursor return record%type
#
CREATE or replace PROCEDURE p1() as
type record2 is record(
id int := 1,
name_d  varchar(200));
record1 record2;
TYPE ref_rs1 IS REF CURSOR RETURN record1%type;
c ref_rs1;
begin
open c for select a from t1;
end;
$$
call p1;
ERROR 21000: The used SELECT statements have a different number of columns
#
# test of type is ref cursor return record%type
#
CREATE or replace PROCEDURE p1() as
TYPE ref_rs1 IS REF CURSOR RETURN t1.id%type;
c ref_rs1;
begin
end;
$$
ERROR HY000: The variable: id is not record type.
#
# test of cursor return ref cursor%rowtype is select_stmt with different type
#
CREATE or replace PROCEDURE p1() as
TYPE ref_rs1 IS REF CURSOR RETURN t1%rowtype;
CURSOR c1 return ref_rs1%rowtype IS SELECT a FROM t1 WHERE a>3;
a1 int;
b1 varchar(20);
begin
open c1;
end;
$$
ERROR 42000: This version of MySQL doesn't yet support 'non table, cursor or cursor-variable used in cursor return %rowtype'
#
# test of cursor return ref cursor%rowtype is select_stmt with different type
#
CREATE or replace PROCEDURE p1() as
TYPE ref_rs1 IS REF CURSOR RETURN t1%rowtype;
c2 ref_rs1;
CURSOR c1 return c2%rowtype IS SELECT a FROM t1 WHERE a>3;
a1 int;
b1 varchar(20);
begin
open c1;
end;
$$
call p1;
ERROR 21000: The used SELECT statements have a different number of columns
#
# test of cursor return ref cursor%rowtype is select_stmt with different type
#
CREATE or replace PROCEDURE p1() as
TYPE ref_rs1 IS REF CURSOR RETURN t1%rowtype;
c2 ref_rs1;
CURSOR c1 return c2%rowtype IS SELECT b,a FROM t1 WHERE a>3;
a1 int;
b1 varchar(20);
begin
open c1;
fetch c1 into a1,b1;
end;
$$
call p1;
ERROR HY000: Incorrect integer value: 'dd' for column 'a' at row 1
#
# test of type IS REF CURSOR return record%rowtype
#
CREATE or replace PROCEDURE p1() as
CURSOR c1 IS SELECT b,a FROM t1 WHERE a>3;
TYPE ref_rs1 IS REF CURSOR RETURN c1%rowtype;
c2 ref_rs1;
a1 int;
b1 varchar(20);
begin
open c2 for select a from t1;
end;
$$
call p1;
ERROR 21000: The used SELECT statements have a different number of columns
#
# test of type IS REF CURSOR return record%rowtype
#
CREATE or replace PROCEDURE p1() as
type record1 is record(
id int := 1,
name_d int);
record2 record1;
TYPE ref_rs1 IS REF CURSOR RETURN record2%type;
c1 ref_rs1;
a1 int;
b1 varchar(20);
begin
open c1 for select a from t1;
end;
$$
call p1;
ERROR 21000: The used SELECT statements have a different number of columns
#
# test of cursor return ref cursor%rowtype is select_stmt with different type
#
CREATE or replace PROCEDURE p1() as
TYPE ref_rs1 IS REF CURSOR RETURN t1%rowtype;
c2 ref_rs1;
CURSOR c1 return c2%rowtype IS SELECT b,a FROM t1 WHERE a>3;
a1 int;
b1 varchar(20);
begin
open c1;
fetch c1 into a1,b1;
end;
$$
call p1;
ERROR HY000: Incorrect integer value: 'dd' for column 'a' at row 1
#
# test of cursor return ref cursor%rowtype
#
CREATE or replace PROCEDURE p1() as
CURSOR c IS SELECT b,a FROM t1 WHERE a>3;
TYPE ref_rs1 IS REF CURSOR RETURN c%rowtype;
c2 ref_rs1;
CURSOR c1 return c2%rowtype IS SELECT a FROM t1 WHERE a>3;
a1 int;
b1 varchar(20);
begin
open c1;
end;
$$
call p1;
ERROR 21000: The used SELECT statements have a different number of columns
#
# test of return static cursor twice
#
CREATE or replace PROCEDURE p1() as
CURSOR c IS SELECT * FROM t1 WHERE a>3;
TYPE ref_rs1 IS REF CURSOR RETURN c%rowtype;
CURSOR c1 return c%rowtype IS SELECT * FROM t1 WHERE a<3;
c2 ref_rs1;
a1 int;
b1 varchar(20);
begin
open c1;
loop
fetch c1 into a1,b1;
exit when c1%notfound;
select a1,b1;
end loop;
open c2 for select * from t1 where a=4;
loop
fetch c2 into a1,b1;
exit when c2%notfound;
select a1,b1;
end loop;
end;
$$
call p1;
a1	b1
1	aa
a1	b1
2	bb
a1	b1
4	dd
#
# test of cursor return udt%rowtype
#
CREATE or replace PROCEDURE p1() as
CURSOR c1 return t_air%rowtype IS SELECT a FROM t1 WHERE a>3;
a1 int;
b1 varchar(20);
begin
open c1;
end;
$$
call p1;
ERROR 42S02: Table 'test.t_air' doesn't exist
#
# test of cursor return db2.udt%rowtype and change udt
#
CREATE or replace PROCEDURE p1() as
CURSOR c1 return t_air_table%rowtype IS SELECT a FROM t1 WHERE a>3;
a1 int;
b1 varchar(20);
begin
open c1;
end;
$$
#
# test of static cursor return is select_stmt
#
CREATE or replace PROCEDURE p1() as
type t_test1 is record(
id int := 1,
type1  varchar(200));
t_test t_test1;
CURSOR c return t_test%type IS SELECT * FROM t1 WHERE a>3;
CURSOR sc1 RETURN c%rowtype IS SELECT * FROM t1 WHERE a<3;
CURSOR sc2 RETURN sc1%rowtype IS SELECT * FROM t1 WHERE a=4;
CURSOR sc3 RETURN sc2%rowtype IS SELECT * FROM t1 WHERE a=5;
a1 int;
b1 varchar(20);
begin
open sc2;
loop
fetch sc2 into a1,b1;
exit when sc2%notfound;
select a1,b1;
end loop;
for i in sc3 loop
select i.a,i.b;
end loop;
end;
$$
call p1;
a1	b1
4	dd
i.a	i.b
5	ee
#
# test of strong cursor set to strong cursor
#
CREATE or replace PROCEDURE p1() as
CURSOR c IS SELECT * FROM t1 WHERE a>3;
CURSOR sc1 RETURN c%rowtype IS SELECT * FROM t1 WHERE a<3;
CURSOR sc2 RETURN sc1%rowtype IS SELECT * FROM t1 WHERE a<3;
TYPE ref_rs1 IS REF CURSOR RETURN sc2%rowtype;
TYPE ref_rs2 IS REF CURSOR RETURN t1%rowtype;
c1 ref_rs1;
c2 ref_rs2;
a int;
b varchar(20);
begin
c1 := c2;
end;
$$
call p1;
ERROR HY000: inconsistent datatypes: expected ''.'ref_rs1' got ''.'ref_rs2'
#
# test of strong cursor set to strong cursor
#
CREATE or replace PROCEDURE p1() as
CURSOR c IS SELECT * FROM t1 WHERE a>3;
CURSOR sc1 RETURN c%rowtype IS SELECT * FROM t1 WHERE a<3;
CURSOR sc2 RETURN sc1%rowtype IS SELECT * FROM t1 WHERE a<3;
TYPE ref_rs1 IS REF CURSOR RETURN sc2%rowtype;
c1 ref_rs1;
TYPE ref_rs2 IS REF CURSOR RETURN c1%rowtype;
c2 ref_rs2;
a int;
b varchar(20);
begin
c1 := c2;
end;
$$
call p1;
ERROR HY000: inconsistent datatypes: expected ''.'ref_rs1' got ''.'ref_rs2'
#
# test of procedure in sys_refcursor
#
create or replace function returnacursor() return sys_refcursor 
as
TYPE ref_rs2 IS REF CURSOR RETURN t1%rowtype;
v_csr ref_rs2;
a1 char(20);
begin
open v_csr for select * from t1 WHERE a=3;
return v_csr;
END;
$$
CREATE or replace PROCEDURE p1() as
c sys_refcursor;
c1 sys_refcursor;
a int;
b varchar(20);
begin
c := returnacursor();
end;
$$
call p1;
ERROR 42000: This version of MySQL doesn't yet support 'funtion return strong ref cursor'
drop function returnacursor;
#
# test of procedure in out sys_refcursor
#
create or replace procedure pro_return(ref_rs in out sys_refcursor) is
str varchar(30);
a1 int;
b varchar(30);
TYPE ref_rs2 IS REF CURSOR RETURN t1%rowtype;
v_csr ref_rs2;
begin
open v_csr for select * from t1;
ref_rs := v_csr;
end;
$$
CREATE or replace PROCEDURE p1() as
CURSOR cc IS SELECT a FROM t1 WHERE a>3;
TYPE ref_rs2 IS REF CURSOR RETURN cc%rowtype;
c ref_rs2;
c1 sys_refcursor;
a1 int;
b1 varchar(20);
begin
call pro_return(c);
loop
fetch c into a1,b1;
exit when c%notfound;
select a1,b1;
end loop;
close c;
end;
$$
call p1;
ERROR 21000: The used SELECT statements have a different number of columns
#
# test of ref cursor%rowtype
#
CREATE or replace PROCEDURE p1() as
TYPE ref_rs2 IS REF CURSOR RETURN t1%rowtype;
c ref_rs2;
a1 c%rowtype;
begin
a1.a := 10;
a1.b := 'bb';
select a1;
end;
$$
call p1;
a1
a:10 | b:bb
#
# test of ref cursor%rowtype
#
CREATE or replace PROCEDURE p1() as
CURSOR cc IS SELECT a FROM t1 WHERE a>3;
TYPE ref_rs2 IS REF CURSOR RETURN cc%rowtype;
c ref_rs2;
a1 c%rowtype;
begin
a1.a := 10;
select a1;
end;
$$
call p1;
a1
a:10
#
# test of ref cursor%rowtype
#
CREATE or replace PROCEDURE p1() as
c sys_refcursor;
a1 c%rowtype;
begin
a1.a := 10;
select a1;
end;
$$
call p1;
ERROR 42000: This version of MySQL doesn't yet support 'non structure variable used in %rowtype'
# test of ref cursor%rowtype and %type
#
CREATE or replace PROCEDURE p1() as
CURSOR cc RETURN t1%rowtype IS SELECT * FROM t1 WHERE a>3;
TYPE ref_rs2 IS REF CURSOR RETURN cc%rowtype;
c ref_rs2;
a1 c%rowtype;
b a1%type;
begin
a1.a := 10;
a1.b := 'bb';
b.a := 100;
b.b := 'bbb';
select a1,b;
end;
$$
call p1;
a1	b
a:10 | b:bb	a:100 | b:bbb
#
# test of procedure in sys_refcursor
#
create or replace function f1() return int 
as
TYPE ref_rs2 IS REF CURSOR RETURN t1%rowtype;
v_csr ref_rs2;
a1 varchar(200);
begin
a1:='select * from t1 WHERE a=3';
open v_csr for a1;
return 1;
END;
$$
insert into t1 values(f1(),'cc');
select * from t1;
a	b
1	aa
2	bb
3	cc
4	dd
5	ee
1	cc
drop function f1;
#
# test of bug9462
#
create or replace function f1()
return  int
as
begin
insert into t1 values(1,'aa');
return 1;
end;
$$
CREATE or replace PROCEDURE p1() as
a int;
cursor c2 is select f1()  from dual ;
begin
open c2;
end ;
$$
select count(*) from t1;
count(*)
6
call p1;
select count(*) from t1;
count(*)
7
call p1;
select count(*) from t1;
count(*)
8
drop function f1;
# test of table of ref cursor%rowtype
#
CREATE or replace PROCEDURE p1() as
CURSOR cc RETURN t1%rowtype IS SELECT * FROM t1 WHERE a>3;
TYPE ref_rs2 IS REF CURSOR RETURN cc%rowtype;
c ref_rs2;
type tklist is table of c%rowtype index by binary_integer;
tt tklist;
begin
tt(0).a := 10;
tt(0).b := 'aa';
select tt(0);
end;
$$
call p1;
tt(0)
a:10 | b:aa
call p1;
tt(0)
a:10 | b:aa
drop procedure pro_return;
drop procedure p1;
drop table t1;
drop table tt_air;
drop type t_air_table;
drop type t_air;
#
# test of bug10097 about table
#
create table yy as select 1 as a,2 as b;
CREATE or replace PROCEDURE p1() as
CURSOR CUR IS SELECT * FROM yy;
aa cur%rowtype;
type tklist is table of cur%rowtype index by binary_integer;
tt tklist;
TYPE ref_rs1 IS REF CURSOR RETURN CUR%rowtype;
cc ref_rs1;
cc1 ref_rs1;
str varchar(200) := 'SELECT * FROM yy';
m int;
n int;
g int;
BEGIN
drop table yy;
create table yy as select 1 as a,2 as b,3 as c;
for i in cur loop
select i;
end loop;
open cc for SELECT * FROM yy;
fetch cc into m,n,g;
select m,n,g;
open cc1 for str;
fetch cc1 into m,n,g;
select m,n,g;
tt(0).a := 1;
select tt(0);
aa.a := 11;
select aa;
drop table yy;
create table yy as select 1 as a,2 as b;
END;
$$
call p1;
i
a:1 | b:2 | c:3
m	n	g
1	2	3
m	n	g
1	2	3
tt(0)
a:1 | b:NULL
aa
a:11 | b:NULL
call p1;
i
a:1 | b:2 | c:3
m	n	g
1	2	3
m	n	g
1	2	3
tt(0)
a:1 | b:NULL
aa
a:11 | b:NULL
drop PROCEDURE p1;
drop table yy;
#
# test of bug10097 about temp table
#
create temporary table yy as select 1 as a,2 as b;
CREATE or replace PROCEDURE p1() as
CURSOR CUR IS SELECT * FROM yy;
aa cur%rowtype;
TYPE ref_rs1 IS REF CURSOR RETURN CUR%rowtype;
cc ref_rs1;
cc1 ref_rs1;
str varchar(200) := 'SELECT * FROM yy';
m int;
n int;
g int;
BEGIN
drop table yy;
create temporary table yy as select 1 as a,2 as b,3 as c;
for i in cur loop
select i;
end loop;
open cc for SELECT * FROM yy;
fetch cc into m,n,g;
select m,n,g;
open cc1 for str;
fetch cc1 into m,n,g;
select m,n,g;
drop table yy;
create temporary table yy as select 1 as a,2 as b;
END;
$$
call p1;
i
a:1 | b:2 | c:3
m	n	g
1	2	3
m	n	g
1	2	3
call p1;
i
a:1 | b:2 | c:3
m	n	g
1	2	3
m	n	g
1	2	3
drop PROCEDURE p1;
drop table yy;
