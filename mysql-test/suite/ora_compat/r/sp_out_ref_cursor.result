set sql_mode="oracle";
set @@udt_format_result='DBA';
create or replace type t_air as object(id int,type varchar(20));
CREATE TABLE t1 (a INT, b VARCHAR(3));
insert into t1 values(1,'aa'),(2,'bb'),(3,'cc'),(4,'dd'),(5,'ee') ;
#
# test of procedure in sys_refcursor
#
create or replace procedure pro_return(ref_rs in sys_refcursor) is
str varchar(30);
a1 int;
b varchar(30);
begin
fetch ref_rs into a1,b;
select a1,b;
end;
$$
CREATE or replace PROCEDURE p1() as
c sys_refcursor;
c1 sys_refcursor;
a int;
b varchar(20);
begin
open c for select * from t1;
call pro_return(c);
select 'after call';
loop
fetch c into a,b;
exit when c%notfound;
select a,b;
end loop;
close c;
end;
$$
call p1;
a1	b
1	aa
after call
after call
a	b
2	bb
a	b
3	cc
a	b
4	dd
a	b
5	ee
#
# test of procedure in out sys_refcursor
#
create or replace procedure pro_return(ref_rs in out sys_refcursor) is
str varchar(30);
a1 int;
b varchar(30);
begin
open ref_rs for select * from t1;
fetch ref_rs into a1,b;
select a1,b;
end;
$$
CREATE or replace PROCEDURE p1() as
c sys_refcursor;
c1 sys_refcursor;
a int;
b varchar(20);
begin
call pro_return(c);
select 'after call';
loop
fetch c into a,b;
exit when c%notfound;
select a,b;
end loop;
close c;
end;
$$
call p1;
a1	b
1	aa
after call
after call
a	b
2	bb
a	b
3	cc
a	b
4	dd
a	b
5	ee
#
# test of reopen cursor in procedure out sys_refcursor
#
create or replace procedure pro_return(ref_rs out sys_refcursor) is
str varchar(30);
a1 int;
b varchar(30);
begin
open ref_rs for select * from t1 where a=1;
open ref_rs for select * from t1 where a=2;
end;
$$
call p1;
after call
after call
a	b
2	bb
#
# test of change procedure out sys_refcursor
#
create or replace procedure pro_return(ref_rs out sys_refcursor) is
str varchar(30);
a1 int;
b varchar(30);
c1 sys_refcursor;
begin
open ref_rs for select * from t1 where a=1;
open c1 for select * from t1 where a=2;
ref_rs:=c1;
end;
$$
call p1;
after call
after call
a	b
2	bb
#
# test of change procedure out sys_refcursor
#
create or replace procedure pro_return(ref_rs out sys_refcursor) is
str varchar(30);
a1 int;
b varchar(30);
c1 sys_refcursor;
c2 sys_refcursor;
begin
open c1 for select * from t1 where a=1;
ref_rs:=c1;
close c1;
open c2 for select * from t1 where a=2;
select c2 into ref_rs;
end;
$$
call p1;
after call
after call
a	b
2	bb
#
# test of change procedure in sys_refcursor
#
create or replace procedure pro_return(ref_rs in sys_refcursor) is
str varchar(30);
a1 int;
b varchar(30);
c1 sys_refcursor;
c2 sys_refcursor;
begin
open ref_rs for select * from t1 where a=1;
end;
$$
call p1;
ERROR 42000: This version of MySQL doesn't yet support 'change ref cursor of in mode'
#
# test of change procedure in sys_refcursor
#
create or replace procedure pro_return(ref_rs in sys_refcursor) is
str varchar(30);
a1 int;
b varchar(30);
c1 sys_refcursor;
c2 sys_refcursor;
begin
open c1 for select * from t1 where a=1;
ref_rs := c1;
end;
$$
call p1;
ERROR 42000: This version of MySQL doesn't yet support 'change ref cursor of in mode'
#
# test of procedure in sys_refcursor
#
create or replace procedure pro_return(ref_rs out sys_refcursor) is
str varchar(30);
a1 int;
b varchar(30);
begin
open ref_rs for select * from t1 where a=1;
end;
$$
CREATE or replace PROCEDURE p1() as
c sys_refcursor;
c1 sys_refcursor;
a1 int;
b varchar(20);
begin
open c for select * from t1 where a=2;
call pro_return(c);
select 'after call';
loop
fetch c into a1,b;
exit when c%notfound;
select a1,b;
end loop;
close c;
end;
$$
call p1;
after call
after call
a1	b
1	aa
#
# test of execute immediate 'call sp' using cursor
#
CREATE or replace PROCEDURE p1() as
c sys_refcursor;
c1 sys_refcursor;
a int;
b varchar(20);
begin
execute immediate 'call pro_return(?)' using c1;
loop
fetch c1 into a,b;
exit when c1%notfound;
select a,b;
end loop;
close c1;
end;
$$
call p1;
ERROR HY000: Incorrect arguments to EXECUTE ROW RESULT
drop PROCEDURE p1;
#
# test of execute immediate 'select function()' into
#
create or replace function returnacursor return sys_refcursor
as
v_csr sys_refcursor;
begin
open v_csr for select * from t1 where a<3;
return v_csr;
END;
$$
CREATE or replace PROCEDURE p1() as
c sys_refcursor;
c1 sys_refcursor;
a int;
b varchar(20);
begin
execute immediate 'select returnacursor()' into c1;
loop
fetch c1 into a,b;
exit when c1%notfound;
select a,b;
end loop;
close c1;
end;
$$
call p1;
ERROR 42000: This version of MySQL doesn't yet support 'ref cursor used in table'
drop PROCEDURE p1;
#
# test of open cursor for select 1
#
create or replace function returnacursor1 return sys_refcursor
as
v_csr sys_refcursor;
begin
open v_csr for select 1,'aa';
return v_csr;
END;
$$
CREATE or replace PROCEDURE p1() as
c sys_refcursor;
c1 sys_refcursor;
a int;
b varchar(20);
begin
c1:=returnacursor1();
loop
fetch c1 into a,b;
exit when c1%notfound;
select a,b;
end loop;
close c1;
end;
$$
call p1;
a	b
1	aa
drop PROCEDURE p1;
drop function returnacursor1;
#
# test of open c1 for select returnacursor()
#
CREATE or replace PROCEDURE p1() as
c sys_refcursor;
c1 sys_refcursor;
a int;
b varchar(20);
begin
open c1 for select returnacursor();
end;
$$
call p1;
ERROR 42000: This version of MySQL doesn't yet support 'ref cursor used in table'
drop PROCEDURE p1;
#
# test of select returnacursor() into from table
#
CREATE or replace PROCEDURE p1() as
c sys_refcursor;
c1 sys_refcursor;
a int;
b varchar(20);
begin
select returnacursor() into c from t1;
end;
$$
call p1;
ERROR 42000: Result consisted of more than one row
drop PROCEDURE p1;
prepare stmt1 from 'select returnacursor()';
ERROR 42000: This version of MySQL doesn't yet support 'ref cursor used in table'
select returnacursor() from t1;
ERROR 42000: This version of MySQL doesn't yet support 'ref cursor used in table'
create table tt as select returnacursor();
ERROR 42000: This version of MySQL doesn't yet support 'ref cursor used in table'
select * from t1 where returnacursor() is null;
ERROR 42000: This version of MySQL doesn't yet support 'udt columns used in function'
select sum(returnacursor()) from t1;
ERROR HY000: Incorrect arguments to sum
#
# test of procedure in sys_refcursor
#
create or replace procedure pro_return(ref_rs in sys_refcursor) is
str varchar(30);
a1 int;
b varchar(30);
begin
select * from t1 where a=5;
end;
$$
call pro_return(returnacursor());
a	b
5	ee
drop function returnacursor;
drop procedure pro_return;
#
# test of for loop
#
create or replace procedure p1()
as
CURSOR c return t1%rowtype IS SELECT * FROM t1 WHERE a>2;
a1 char(20);
begin  
for i in c loop
select i.a,i.b;
end loop;
END;
$$
call p1;
i.a	i.b
3	cc
i.a	i.b
4	dd
i.a	i.b
5	ee
call p1;
i.a	i.b
3	cc
i.a	i.b
4	dd
i.a	i.b
5	ee
drop procedure p1;
drop table t1;
#
# test of open for select stmt
#
create or replace function f1 return sys_refcursor
as
v_csr sys_refcursor;
begin
open v_csr for select 1,'aa';
return v_csr;
END;
$$
CREATE or replace PROCEDURE p1() as
c1 sys_refcursor;
c2 sys_refcursor;
a int;
b varchar(20);
begin
c1:=f1();
c2:=f1();
loop
fetch c1 into a,b;
exit when c1%notfound;
select a,b;
end loop;
close c1;
end;
$$
call p1;
a	b
1	aa
call p1;
a	b
1	aa
drop procedure p1;
drop function f1;
#
# test of open for select function
#
create or replace function f1() return t_air
as
var2 t_air:=t_air(1,'aa');
begin
return var2;
END;
$$
CREATE or replace PROCEDURE p1() as
c1 sys_refcursor;
c2 sys_refcursor;
a int;
b varchar(20);
begin
open c1 for select f1();
end;
$$
CREATE or replace PROCEDURE p2() as
begin
for i in f1() .. f1() loop
select i;
end loop;
end;
$$
call p1;
call p1;
call p2;
ERROR 42000: This version of MySQL doesn't yet support 'udt columns used in function'
call p2;
ERROR 42000: This version of MySQL doesn't yet support 'udt columns used in function'
drop procedure p2;
drop procedure p1;
drop function f1;
drop type t_air;
