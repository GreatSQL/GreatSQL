SET sql_mode=ORACLE;
show variables like '%udt_format_result%';
Variable_name	Value
udt_format_result	BINARY
set @@udt_format_result='DBA';
CREATE SEQUENCE id_seq START WITH 1 INCREMENT BY 2 CACHE 1;
select id_seq.NEXTVAL;
NEXTVAL
1
#
# test of udt type table index is SEQUENCE
#
CREATE or replace PROCEDURE p1() as
type stu_record is record(
id int := 1,
name_d  varchar(20) := 'a',
score float := 0
);
type tklist is table of stu_record INDEX BY pls_integer;
stu_record_val tklist;
begin
stu_record_val(id_seq.NEXTVAL+1).id := id_seq.NEXTVAL;
select stu_record_val(id_seq.NEXTVAL-1);
end;
$$
call p1();
ERROR 42000: This version of MySQL doesn't yet support 'SEQUENCE or ROWNUM as record table's index'
call p1();
ERROR 42000: This version of MySQL doesn't yet support 'SEQUENCE or ROWNUM as record table's index'
drop PROCEDURE p1;
#
# test of udt type table index is SEQUENCE
#
CREATE or replace PROCEDURE p1() as
type stu_record is record(
id int := 1,
name_d  varchar(20) := 'a',
score float := 0
);
type tklist is table of stu_record INDEX BY pls_integer;
stu_record_val tklist;
begin
stu_record_val(1+1).id := id_seq.NEXTVAL;
select stu_record_val(id_seq.NEXTVAL-1);
end;
$$
call p1();
ERROR 42000: This version of MySQL doesn't yet support 'SEQUENCE or ROWNUM as record table's index'
call p1();
ERROR 42000: This version of MySQL doesn't yet support 'SEQUENCE or ROWNUM as record table's index'
drop PROCEDURE p1;
#
# test of udt type table index is ROWNUM
#
CREATE or replace PROCEDURE p1() as
type stu_record is record(
id int := 1,
name_d  varchar(20) := 'a',
score float := 0
);
type tklist is table of stu_record INDEX BY pls_integer;
stu_record_val tklist;
begin
stu_record_val(rownum+1).id := id_seq.NEXTVAL;
select stu_record_val(rownum+1);
end;
$$
call p1();
ERROR 42000: This version of MySQL doesn't yet support 'SEQUENCE or ROWNUM as record table's index'
call p1();
ERROR 42000: This version of MySQL doesn't yet support 'SEQUENCE or ROWNUM as record table's index'
drop PROCEDURE p1;
#
# test of udt type table index is SEQUENCE
#
CREATE or replace PROCEDURE p1() as
type stu_record is record(
id int := 1,
name_d  varchar(20) := 'a',
score float := 0
);
type tklist is table of stu_record INDEX BY pls_integer;
stu_record_val tklist;
begin
stu_record_val(id_seq.NEXTVAL+1) := tklist(1=>stu_record(id_seq.NEXTVAL,2,3));
select stu_record_val(id_seq.currval+1);
end;
$$
call p1();
ERROR 42000: This version of MySQL doesn't yet support 'SEQUENCE or ROWNUM as record table's index'
call p1();
ERROR 42000: This version of MySQL doesn't yet support 'SEQUENCE or ROWNUM as record table's index'
drop PROCEDURE p1;
#
# test of udt type table index is rownum
#
create or replace procedure p1 as
type stu_record is record(
id int := 1,
name1  varchar(20) ,
score float := 0
);
type tklist is table of stu_record index by binary_integer;
type stu_record1 is record(
ii int := 1,
stu_record_val1 tklist
);
stu_record_val stu_record1;
begin
stu_record_val.stu_record_val1(9).id :=9;
stu_record_val.stu_record_val1(rownum+1).id := 2;
select stu_record_val.stu_record_val1(rownum+1).id;
END;
$$
call p1();
ERROR 42000: This version of MySQL doesn't yet support 'SEQUENCE or ROWNUM as record table's index'
call p1();
ERROR 42000: This version of MySQL doesn't yet support 'SEQUENCE or ROWNUM as record table's index'
drop PROCEDURE p1;
#
# test of udt type table index is rownum
#
create or replace procedure p1 as
type stu_record is record(
id int := 1,
name1  varchar(20) ,
score float := 0
);
type tklist is table of stu_record index by binary_integer;
type stu_record1 is record(
ii int := 1,
stu_record_val1 tklist
);
stu_record_val stu_record1;
begin
stu_record_val.stu_record_val1(9).id :=9;
select stu_record_val.stu_record_val1(rownum+1).id;
END;
$$
call p1();
ERROR 42000: This version of MySQL doesn't yet support 'SEQUENCE or ROWNUM as record table's index'
call p1();
ERROR 42000: This version of MySQL doesn't yet support 'SEQUENCE or ROWNUM as record table's index'
drop PROCEDURE p1;
#
# test of udt type table index is SEQUENCE
#
create or replace procedure p1 as
type stu_record is record(
id int := 1,
name1  varchar(20) ,
score float := 0
);
type tklist is table of stu_record index by binary_integer;
type stu_record1 is record(
ii int := 1,
stu_record_val1 tklist
);
stu_record_val stu_record1;
begin
stu_record_val.stu_record_val1(9).id :=9;
stu_record_val.stu_record_val1(id_seq.NEXTVAL*id_seq.NEXTVAL).id := id_seq.NEXTVAL;
select stu_record_val.stu_record_val1(id_seq.NEXTVAL/id_seq.NEXTVAL).id;
END;
$$
call p1();
ERROR 42000: This version of MySQL doesn't yet support 'SEQUENCE or ROWNUM as record table's index'
call p1();
ERROR 42000: This version of MySQL doesn't yet support 'SEQUENCE or ROWNUM as record table's index'
drop PROCEDURE p1;
#
# test of udt type table index is SEQUENCE
#
create or replace procedure p1 as
type stu_record is record(
id int := 1,
name1  varchar(20) ,
score float := 0
);
type tklist is table of stu_record index by binary_integer;
type stu_record1 is record(
ii int := 1,
stu_record_val1 tklist
);
stu_record_val stu_record1;
begin
stu_record_val.stu_record_val1(9).id :=9;
select stu_record_val.stu_record_val1(id_seq.NEXTVAL/id_seq.NEXTVAL).id;
END;
$$
call p1();
ERROR 42000: This version of MySQL doesn't yet support 'SEQUENCE or ROWNUM as record table's index'
call p1();
ERROR 42000: This version of MySQL doesn't yet support 'SEQUENCE or ROWNUM as record table's index'
drop PROCEDURE p1;
#
# test of udt type table index is SEQUENCE
#
CREATE or replace PROCEDURE p1() as
type stu_record is record(
id int := 1,
name_d  varchar(20) := 'a',
score float := 0
);
type tklist is table of stu_record INDEX BY pls_integer;
stu_record_val tklist;
count int := id_seq.NEXTVAL;
begin
stu_record_val(count).id := count;
select stu_record_val(count);
stu_record_val(1) := stu_record_val(id_seq.currval-1);
select stu_record_val(1);
end;
$$
call p1();
stu_record_val(count)
id:7 | name_d:a | score:0
ERROR 42000: This version of MySQL doesn't yet support 'SEQUENCE or ROWNUM as record table's index'
call p1();
stu_record_val(count)
id:9 | name_d:a | score:0
ERROR 42000: This version of MySQL doesn't yet support 'SEQUENCE or ROWNUM as record table's index'
drop PROCEDURE p1;
#
# test of udt type table index is SEQUENCE
#
CREATE or replace PROCEDURE p1() as
type stu_record is record(
id int := 1,
name_d  varchar(20) := 'a',
score float := 0
);
type tklist is table of stu_record INDEX BY pls_integer;
stu_record_val tklist;
count int := id_seq.NEXTVAL;
begin
stu_record_val((select id_seq.currval)) := 1;
select stu_record_val(1);
end;
$$
call p1();
ERROR 42000: This version of MySQL doesn't yet support 'subquery as record table's index'
call p1();
ERROR 42000: This version of MySQL doesn't yet support 'subquery as record table's index'
drop PROCEDURE p1;
#
# test of udt type table index is SEQUENCE
#
CREATE or replace PROCEDURE p1() as
type stu_record is record(
id int := 1,
name_d  varchar(20) := 'a',
score float := 0
);
type tklist is table of stu_record INDEX BY pls_integer;
stu_record_val tklist;
count int := id_seq.NEXTVAL;
begin
stu_record_val((select id_seq.currval)+1) := 1;
select stu_record_val(1);
end;
$$
call p1();
ERROR 42000: This version of MySQL doesn't yet support 'subquery as record table's index'
call p1();
ERROR 42000: This version of MySQL doesn't yet support 'subquery as record table's index'
drop PROCEDURE p1;
#
# test of udt type table index is SEQUENCE
#
CREATE or replace PROCEDURE p1() as
type stu_record is record(
id int := 1,
name_d  varchar(20) := 'a',
score float := 0
);
type tklist is table of stu_record INDEX BY pls_integer;
stu_record_val tklist;
count int := id_seq.NEXTVAL;
begin
select stu_record_val((select id_seq.currval));
end;
$$
call p1();
ERROR 42000: This version of MySQL doesn't yet support 'subquery as record table's index'
call p1();
ERROR 42000: This version of MySQL doesn't yet support 'subquery as record table's index'
drop PROCEDURE p1;
#
# test of udt type table index is unknown var
#
CREATE or replace PROCEDURE p1() as
type stu_record is record(
id int := 1,
name_d  varchar(20) := 'a',
score float := 0
);
type tklist is table of stu_record INDEX BY pls_integer;
stu_record_val tklist;
count int := id_seq.NEXTVAL;
begin
stu_record_val(a1) := 1;
select stu_record_val(1);
end;
$$
call p1();
ERROR 42S22: Unknown column 'a1' in 'field list'
call p1();
ERROR 42S22: Unknown column 'a1' in 'field list'
drop PROCEDURE p1;
#
# test of udt type table index is unknown var
#
CREATE or replace PROCEDURE p1() as
type stu_record is record(
id int := 1,
name_d  varchar(20) := 'a',
score float := 0
);
type tklist is table of stu_record INDEX BY pls_integer;
stu_record_val tklist;
count int := id_seq.NEXTVAL;
begin
select stu_record_val(a1);
end;
$$
call p1();
ERROR 42S22: Unknown column 'a1' in 'field list'
call p1();
ERROR 42S22: Unknown column 'a1' in 'field list'
drop PROCEDURE p1;
#
# test of SEQUENCE as value
#
CREATE or replace PROCEDURE p1() as
type stu_record is record(
id int := 1,
name_d  varchar(20) := 'a',
score float := 0
);
type tklist is table of stu_record INDEX BY pls_integer;
stu_record_val tklist;
begin
stu_record_val(3) := stu_record(id_seq.NEXTVAL,'a',1);
select stu_record_val(3);
end;
$$
call p1();
stu_record_val(3)
id:31 | name_d:a | score:1
call p1();
stu_record_val(3)
id:33 | name_d:a | score:1
drop PROCEDURE p1;
drop SEQUENCE id_seq;
