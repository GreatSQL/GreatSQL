set sql_mode=oracle;
# mysql temporary table work
create temporary table mtmp (id int not null auto_increment primary key, des varchar2(10));
show create table mtmp;
Table	Create Table
mtmp	CREATE TEMPORARY TABLE "mtmp" (
  "id" int NOT NULL AUTO_INCREMENT,
  "des" varchar(10) DEFAULT NULL,
  PRIMARY KEY ("id")
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
insert into mtmp values (1, 'desc');
# the name of private temporary table should be started with ORA
create private temporary table temp_s1(id int, des varchar2(30)) on commit preserve definition;
ERROR HY000: invalid table name
create private temporary table temp_t1(id int, des varchar2(30)) on commit drop definition;
ERROR HY000: invalid table name
create global temporary table ora$ptt_t1(id int, des varchar2(30)) on commit delete rows;
ERROR HY000: cannot create an object with a name matching private temporary table prefix
create global temporary table ora$ptt_t1(id int, des varchar2(30)) on commit preserve rows;
ERROR HY000: cannot create an object with a name matching private temporary table prefix
create global temporary table gt_t_t1(id int, des varchar2(30)) on commit delete rows start transaction;
ERROR 42000: This version of MySQL doesn't yet support 'global/private temp table with such table option'
create table ref_tab(id int primary key);
create global temporary table gt_t_t1 (
id int PRIMARY KEY,
name VARCHAR(16),
deptId int,
CONSTRAINT fk_emp_dept1 FOREIGN KEY(deptId) REFERENCES ref_tab(id)
);
ERROR HY000: Cannot add foreign key constraint
create global temporary table gt_t_t1 (
id int PRIMARY KEY,
name VARCHAR(16),
deptId int
);
alter table gt_t_t1 add constraint forkey_name foreign key(deptId) references
ref_tab(id) on delete cascade ON UPDATE CASCADE ;
ERROR HY000: Cannot add foreign key constraint
drop table gt_t_t1;
drop table ref_tab;
create private temporary table ora$ptt_t1 (id int primary key) on commit preserve definition;
ERROR HY000: unsupported feature with temporary table
create private temporary table ora$ptt_t1 (id int) on commit preserve definition;
alter table ora$ptt_t1 add primary key(id);
ERROR HY000: unsupported feature with temporary table
drop table ora$ptt_t1;
# create global temporary table instance in a proc.
create global temporary table gt_t_t1(id int, name varchar(16), deptId int)
on commit delete rows;
create or replace procedure p1() as
salary varchar(20);
begin
start transaction;
insert into gt_t_t1 values (1, 'bb', 1);
select name into salary from gt_t_t1 limit 1;
select salary;
commit;
select * from gt_t_t1;
end; //
call p1;
salary
bb
id	name	deptId
call p1;
salary
bb
id	name	deptId
call p1;
salary
bb
id	name	deptId
drop procedure p1;
drop table gt_t_t1;
# rename check
create global temporary table gt_t_t1 (id int primary key, name varchar(16), deptid int, i int invisible, `sidec` int generated always as (sqrt(((id * deptid) + (id * deptid)))) virtual) on commit delete rows;
begin;
insert into gt_t_t1 (id, name, i, deptid) values (1,'aa',1,10);
select * from gt_t_t1;
id	name	deptid	sidec
1	aa	10	4
rename table gt_t_t1 to ptt_t1t1;
ERROR HY000: attempt to create, alter or drop an index on temporary table already in use
select * from gt_t_t1;
id	name	deptid	sidec
commit;
rename table gt_t_t1 to ora$ptt_t1;
ERROR HY000: cannot create an object with a name matching private temporary table prefix
alter table gt_t_t1 rename ora$ptt_t1;
ERROR HY000: cannot create an object with a name matching private temporary table prefix
alter table gt_t_t1 rename ptt_t1t1;
drop table ptt_t1t1;
# check lifecycle/behaviors of private temporary tables
create private temporary table ora$ptt_s1(id int, des varchar2(30)) on commit preserve definition;
create index ooo_t1 on ora$ptt_s1 (des);
ERROR HY000: unsupported feature with temporary table
begin;
create private temporary table ora$ptt_t0(id int, des varchar2(30));
create private temporary table ora$ptt_t1(id int, des varchar2(30)) on commit drop definition;
insert into ora$ptt_s1 values (1, 'ora$ptt_s1-1');
insert into ora$ptt_s1 values (2, 'ora$ptt_s1-2');
show create table ora$ptt_s1;
Table	Create Table
ora$ptt_s1	CREATE PRIVATE TEMPORARY TABLE "ora$ptt_s1" (
  "id" int DEFAULT NULL,
  "des" varchar(30) DEFAULT NULL
) ON COMMIT PRESERVE DEFINITION ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
select * from ora$ptt_s1;
id	des
1	ora$ptt_s1-1
2	ora$ptt_s1-2
insert into ora$ptt_t0 values (10, 'ora$ptt_t0-10');
insert into ora$ptt_t0 values (20, 'ora$ptt_t0-20');
show create table ora$ptt_t0;
Table	Create Table
ora$ptt_t0	CREATE PRIVATE TEMPORARY TABLE "ora$ptt_t0" (
  "id" int DEFAULT NULL,
  "des" varchar(30) DEFAULT NULL
) ON COMMIT DROP DEFINITION ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
insert into ora$ptt_t1 values (100, 'ora$ptt_t1-100');
insert into ora$ptt_t1 values (200, 'ora$ptt_t1-200');
show create table ora$ptt_t1;
Table	Create Table
ora$ptt_t1	CREATE PRIVATE TEMPORARY TABLE "ora$ptt_t1" (
  "id" int DEFAULT NULL,
  "des" varchar(30) DEFAULT NULL
) ON COMMIT DROP DEFINITION ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
select * from ora$ptt_t1;
id	des
100	ora$ptt_t1-100
200	ora$ptt_t1-200
commit;
select * from ora$ptt_t0;
ERROR 42S02: Table 'test.ora$ptt_t0' doesn't exist
select * from ora$ptt_s1;
id	des
1	ora$ptt_s1-1
2	ora$ptt_s1-2
select * from ora$ptt_t1;
ERROR 42S02: Table 'test.ora$ptt_t1' doesn't exist
# check lifecycle/behavior of global temporary tables
create global temporary table gt_s_inc(id int not null auto_increment primary key, fname varchar2(25), lname varchar(25), store_id int, department_id int, cond_value int) on commit preserve rows;
create index gt_s_inc_a on gt_s_inc (id, fname, lname, store_id,department_id);
show index from gt_s_inc;
Table	Non_unique	Key_name	Seq_in_index	Column_name	Collation	Cardinality	Sub_part	Packed	Null	Index_type	Comment	Index_comment	Visible	Expression
gt_s_inc	0	PRIMARY	1	id	A	0	NULL	NULL		BTREE			YES	NULL
gt_s_inc	1	gt_s_inc_a	1	id	A	0	NULL	NULL		BTREE			YES	NULL
gt_s_inc	1	gt_s_inc_a	2	fname	A	0	NULL	NULL	YES	BTREE			YES	NULL
gt_s_inc	1	gt_s_inc_a	3	lname	A	0	NULL	NULL	YES	BTREE			YES	NULL
gt_s_inc	1	gt_s_inc_a	4	store_id	A	0	NULL	NULL	YES	BTREE			YES	NULL
gt_s_inc	1	gt_s_inc_a	5	department_id	A	0	NULL	NULL	YES	BTREE			YES	NULL
show create table gt_s_inc;
Table	Create Table
gt_s_inc	CREATE GLOBAL TEMPORARY TABLE "gt_s_inc" (
  "id" int NOT NULL AUTO_INCREMENT,
  "fname" varchar(25) DEFAULT NULL,
  "lname" varchar(25) DEFAULT NULL,
  "store_id" int DEFAULT NULL,
  "department_id" int DEFAULT NULL,
  "cond_value" int DEFAULT NULL,
  PRIMARY KEY ("id"),
  KEY "gt_s_inc_a" ("id","fname","lname","store_id","department_id")
) ON COMMIT PRESERVE ROWS ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
create global temporary table gt_t_t0(id int not null auto_increment primary key, fname varchar2(25), lname varchar(25), store_id int, department_id int, cond_value int);
create index gt_t_t0_a on gt_t_t0 (id, fname, lname, store_id,department_id);
show index from gt_t_t0;
Table	Non_unique	Key_name	Seq_in_index	Column_name	Collation	Cardinality	Sub_part	Packed	Null	Index_type	Comment	Index_comment	Visible	Expression
gt_t_t0	0	PRIMARY	1	id	A	0	NULL	NULL		BTREE			YES	NULL
gt_t_t0	1	gt_t_t0_a	1	id	A	0	NULL	NULL		BTREE			YES	NULL
gt_t_t0	1	gt_t_t0_a	2	fname	A	0	NULL	NULL	YES	BTREE			YES	NULL
gt_t_t0	1	gt_t_t0_a	3	lname	A	0	NULL	NULL	YES	BTREE			YES	NULL
gt_t_t0	1	gt_t_t0_a	4	store_id	A	0	NULL	NULL	YES	BTREE			YES	NULL
gt_t_t0	1	gt_t_t0_a	5	department_id	A	0	NULL	NULL	YES	BTREE			YES	NULL
show create table gt_t_t0;
Table	Create Table
gt_t_t0	CREATE GLOBAL TEMPORARY TABLE "gt_t_t0" (
  "id" int NOT NULL AUTO_INCREMENT,
  "fname" varchar(25) DEFAULT NULL,
  "lname" varchar(25) DEFAULT NULL,
  "store_id" int DEFAULT NULL,
  "department_id" int DEFAULT NULL,
  "cond_value" int DEFAULT NULL,
  PRIMARY KEY ("id"),
  KEY "gt_t_t0_a" ("id","fname","lname","store_id","department_id")
) ON COMMIT DELETE ROWS ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
create global temporary table gt_t_inc(id int not null auto_increment primary key, fname varchar2(25), lname varchar(25), store_id int, department_id int, cond_value int) on commit delete rows;
create index gt_t_inc_a on gt_t_inc (id, fname, lname, store_id,department_id);
show index from gt_t_inc;
Table	Non_unique	Key_name	Seq_in_index	Column_name	Collation	Cardinality	Sub_part	Packed	Null	Index_type	Comment	Index_comment	Visible	Expression
gt_t_inc	0	PRIMARY	1	id	A	0	NULL	NULL		BTREE			YES	NULL
gt_t_inc	1	gt_t_inc_a	1	id	A	0	NULL	NULL		BTREE			YES	NULL
gt_t_inc	1	gt_t_inc_a	2	fname	A	0	NULL	NULL	YES	BTREE			YES	NULL
gt_t_inc	1	gt_t_inc_a	3	lname	A	0	NULL	NULL	YES	BTREE			YES	NULL
gt_t_inc	1	gt_t_inc_a	4	store_id	A	0	NULL	NULL	YES	BTREE			YES	NULL
gt_t_inc	1	gt_t_inc_a	5	department_id	A	0	NULL	NULL	YES	BTREE			YES	NULL
show create table gt_t_inc;
Table	Create Table
gt_t_inc	CREATE GLOBAL TEMPORARY TABLE "gt_t_inc" (
  "id" int NOT NULL AUTO_INCREMENT,
  "fname" varchar(25) DEFAULT NULL,
  "lname" varchar(25) DEFAULT NULL,
  "store_id" int DEFAULT NULL,
  "department_id" int DEFAULT NULL,
  "cond_value" int DEFAULT NULL,
  PRIMARY KEY ("id"),
  KEY "gt_t_inc_a" ("id","fname","lname","store_id","department_id")
) ON COMMIT DELETE ROWS ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
# global temp session/trans table behaviors
begin;
insert into gt_s_inc values (0, 'f1', 'l1', 1, 11, 111);
insert into gt_s_inc values (0, 'f2', 'l2', 2, 22, 222);
select * from gt_s_inc;
id	fname	lname	store_id	department_id	cond_value
1	f1	l1	1	11	111
2	f2	l2	2	22	222
show create table gt_s_inc;
Table	Create Table
gt_s_inc	CREATE TEMPORARY TABLE "gt_s_inc" (
  "id" int NOT NULL AUTO_INCREMENT,
  "fname" varchar(25) DEFAULT NULL,
  "lname" varchar(25) DEFAULT NULL,
  "store_id" int DEFAULT NULL,
  "department_id" int DEFAULT NULL,
  "cond_value" int DEFAULT NULL,
  PRIMARY KEY ("id"),
  KEY "gt_s_inc_a" ("id","fname","lname","store_id","department_id")
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
insert into gt_t_inc values (0, 'tf1', 'tl1', 1, 11, 111);
insert into gt_t_inc values (0, 'tf2', 'tl2', 2, 22, 222);
select * from gt_t_inc;
id	fname	lname	store_id	department_id	cond_value
1	tf1	tl1	1	11	111
2	tf2	tl2	2	22	222
show create table gt_t_inc;
Table	Create Table
gt_t_inc	CREATE TEMPORARY TABLE "gt_t_inc" (
  "id" int NOT NULL AUTO_INCREMENT,
  "fname" varchar(25) DEFAULT NULL,
  "lname" varchar(25) DEFAULT NULL,
  "store_id" int DEFAULT NULL,
  "department_id" int DEFAULT NULL,
  "cond_value" int DEFAULT NULL,
  PRIMARY KEY ("id"),
  KEY "gt_t_inc_a" ("id","fname","lname","store_id","department_id")
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
commit;
select * from gt_s_inc;
id	fname	lname	store_id	department_id	cond_value
1	f1	l1	1	11	111
2	f2	l2	2	22	222
show create table gt_s_inc;
Table	Create Table
gt_s_inc	CREATE TEMPORARY TABLE "gt_s_inc" (
  "id" int NOT NULL AUTO_INCREMENT,
  "fname" varchar(25) DEFAULT NULL,
  "lname" varchar(25) DEFAULT NULL,
  "store_id" int DEFAULT NULL,
  "department_id" int DEFAULT NULL,
  "cond_value" int DEFAULT NULL,
  PRIMARY KEY ("id"),
  KEY "gt_s_inc_a" ("id","fname","lname","store_id","department_id")
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
select * from gt_t_inc;
id	fname	lname	store_id	department_id	cond_value
show create table gt_t_inc;
Table	Create Table
gt_t_inc	CREATE GLOBAL TEMPORARY TABLE "gt_t_inc" (
  "id" int NOT NULL AUTO_INCREMENT,
  "fname" varchar(25) DEFAULT NULL,
  "lname" varchar(25) DEFAULT NULL,
  "store_id" int DEFAULT NULL,
  "department_id" int DEFAULT NULL,
  "cond_value" int DEFAULT NULL,
  PRIMARY KEY ("id"),
  KEY "gt_t_inc_a" ("id","fname","lname","store_id","department_id")
) ON COMMIT DELETE ROWS ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
truncate table gt_s_inc;
show create table gt_s_inc;
Table	Create Table
gt_s_inc	CREATE GLOBAL TEMPORARY TABLE "gt_s_inc" (
  "id" int NOT NULL AUTO_INCREMENT,
  "fname" varchar(25) DEFAULT NULL,
  "lname" varchar(25) DEFAULT NULL,
  "store_id" int DEFAULT NULL,
  "department_id" int DEFAULT NULL,
  "cond_value" int DEFAULT NULL,
  PRIMARY KEY ("id"),
  KEY "gt_s_inc_a" ("id","fname","lname","store_id","department_id")
) ON COMMIT PRESERVE ROWS ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
truncate table gt_t_inc;
show create table gt_t_inc;
Table	Create Table
gt_t_inc	CREATE GLOBAL TEMPORARY TABLE "gt_t_inc" (
  "id" int NOT NULL AUTO_INCREMENT,
  "fname" varchar(25) DEFAULT NULL,
  "lname" varchar(25) DEFAULT NULL,
  "store_id" int DEFAULT NULL,
  "department_id" int DEFAULT NULL,
  "cond_value" int DEFAULT NULL,
  PRIMARY KEY ("id"),
  KEY "gt_t_inc_a" ("id","fname","lname","store_id","department_id")
) ON COMMIT DELETE ROWS ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
# temp table instance created by 'create temporary table ... like ...'
# should not be removed at the end implicit transaction.
insert into gt_s_inc select 0, 'f0', 'l0', 0, 1, 11 from dual where 1 > 0;
insert into gt_t_inc select 0, 'tf0', 'tl0', 0, 1, 11 from dual where 1 > 0;
# if instance created by insert operation and no row is added,
# the instance is removed at the end of statement.
# using 'insert' command
begin;
show create table gt_s_inc;
Table	Create Table
gt_s_inc	CREATE TEMPORARY TABLE "gt_s_inc" (
  "id" int NOT NULL AUTO_INCREMENT,
  "fname" varchar(25) DEFAULT NULL,
  "lname" varchar(25) DEFAULT NULL,
  "store_id" int DEFAULT NULL,
  "department_id" int DEFAULT NULL,
  "cond_value" int DEFAULT NULL,
  PRIMARY KEY ("id"),
  KEY "gt_s_inc_a" ("id","fname","lname","store_id","department_id")
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
insert into gt_s_inc select 0, 'sf2', 'sl2', 9, 99, 999 from dual where 1 > 2;
show create table gt_s_inc;
Table	Create Table
gt_s_inc	CREATE TEMPORARY TABLE "gt_s_inc" (
  "id" int NOT NULL AUTO_INCREMENT,
  "fname" varchar(25) DEFAULT NULL,
  "lname" varchar(25) DEFAULT NULL,
  "store_id" int DEFAULT NULL,
  "department_id" int DEFAULT NULL,
  "cond_value" int DEFAULT NULL,
  PRIMARY KEY ("id"),
  KEY "gt_s_inc_a" ("id","fname","lname","store_id","department_id")
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
rollback;
# using 'insert all' command
begin;
show create table gt_s_inc;
Table	Create Table
gt_s_inc	CREATE TEMPORARY TABLE "gt_s_inc" (
  "id" int NOT NULL AUTO_INCREMENT,
  "fname" varchar(25) DEFAULT NULL,
  "lname" varchar(25) DEFAULT NULL,
  "store_id" int DEFAULT NULL,
  "department_id" int DEFAULT NULL,
  "cond_value" int DEFAULT NULL,
  PRIMARY KEY ("id"),
  KEY "gt_s_inc_a" ("id","fname","lname","store_id","department_id")
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
show create table gt_t_inc;
Table	Create Table
gt_t_inc	CREATE GLOBAL TEMPORARY TABLE "gt_t_inc" (
  "id" int NOT NULL AUTO_INCREMENT,
  "fname" varchar(25) DEFAULT NULL,
  "lname" varchar(25) DEFAULT NULL,
  "store_id" int DEFAULT NULL,
  "department_id" int DEFAULT NULL,
  "cond_value" int DEFAULT NULL,
  PRIMARY KEY ("id"),
  KEY "gt_t_inc_a" ("id","fname","lname","store_id","department_id")
) ON COMMIT DELETE ROWS ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
INSERT ALL
WHEN 4 > x THEN
INTO gt_s_inc VALUES (0, 'iaf4', 'ial4', 4, 44, 444)
WHEN 3 > x THEN
INTO gt_t_inc VALUES (0, 'iaf3', 'ial3', 3, 33, 333)
SELECT 3 x FROM dual;
select * from gt_s_inc;
id	fname	lname	store_id	department_id	cond_value
1	f0	l0	0	1	11
2	iaf4	ial4	4	44	444
select * from gt_t_inc;
id	fname	lname	store_id	department_id	cond_value
show create table gt_s_inc;
Table	Create Table
gt_s_inc	CREATE TEMPORARY TABLE "gt_s_inc" (
  "id" int NOT NULL AUTO_INCREMENT,
  "fname" varchar(25) DEFAULT NULL,
  "lname" varchar(25) DEFAULT NULL,
  "store_id" int DEFAULT NULL,
  "department_id" int DEFAULT NULL,
  "cond_value" int DEFAULT NULL,
  PRIMARY KEY ("id"),
  KEY "gt_s_inc_a" ("id","fname","lname","store_id","department_id")
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
show create table gt_t_inc;
Table	Create Table
gt_t_inc	CREATE GLOBAL TEMPORARY TABLE "gt_t_inc" (
  "id" int NOT NULL AUTO_INCREMENT,
  "fname" varchar(25) DEFAULT NULL,
  "lname" varchar(25) DEFAULT NULL,
  "store_id" int DEFAULT NULL,
  "department_id" int DEFAULT NULL,
  "cond_value" int DEFAULT NULL,
  PRIMARY KEY ("id"),
  KEY "gt_t_inc_a" ("id","fname","lname","store_id","department_id")
) ON COMMIT DELETE ROWS ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
rollback;
Warnings:
Warning	1751	The creation of some temporary tables could not be rolled back.
truncate table gt_s_inc;
begin;
show create table gt_s_inc;
Table	Create Table
gt_s_inc	CREATE GLOBAL TEMPORARY TABLE "gt_s_inc" (
  "id" int NOT NULL AUTO_INCREMENT,
  "fname" varchar(25) DEFAULT NULL,
  "lname" varchar(25) DEFAULT NULL,
  "store_id" int DEFAULT NULL,
  "department_id" int DEFAULT NULL,
  "cond_value" int DEFAULT NULL,
  PRIMARY KEY ("id"),
  KEY "gt_s_inc_a" ("id","fname","lname","store_id","department_id")
) ON COMMIT PRESERVE ROWS ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
show create table gt_t_inc;
Table	Create Table
gt_t_inc	CREATE GLOBAL TEMPORARY TABLE "gt_t_inc" (
  "id" int NOT NULL AUTO_INCREMENT,
  "fname" varchar(25) DEFAULT NULL,
  "lname" varchar(25) DEFAULT NULL,
  "store_id" int DEFAULT NULL,
  "department_id" int DEFAULT NULL,
  "cond_value" int DEFAULT NULL,
  PRIMARY KEY ("id"),
  KEY "gt_t_inc_a" ("id","fname","lname","store_id","department_id")
) ON COMMIT DELETE ROWS ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
INSERT ALL
WHEN 4 > x THEN
INTO gt_t_inc VALUES (0, 'iaf4', 'ial4', 4, 44, 444)
WHEN 3 > x THEN
INTO gt_s_inc VALUES (0, 'iaf3', 'ial3', 3, 33, 333)
SELECT 3 x FROM dual;
select * from gt_s_inc;
id	fname	lname	store_id	department_id	cond_value
select * from gt_t_inc;
id	fname	lname	store_id	department_id	cond_value
1	iaf4	ial4	4	44	444
show create table gt_s_inc;
Table	Create Table
gt_s_inc	CREATE GLOBAL TEMPORARY TABLE "gt_s_inc" (
  "id" int NOT NULL AUTO_INCREMENT,
  "fname" varchar(25) DEFAULT NULL,
  "lname" varchar(25) DEFAULT NULL,
  "store_id" int DEFAULT NULL,
  "department_id" int DEFAULT NULL,
  "cond_value" int DEFAULT NULL,
  PRIMARY KEY ("id"),
  KEY "gt_s_inc_a" ("id","fname","lname","store_id","department_id")
) ON COMMIT PRESERVE ROWS ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
show create table gt_t_inc;
Table	Create Table
gt_t_inc	CREATE TEMPORARY TABLE "gt_t_inc" (
  "id" int NOT NULL AUTO_INCREMENT,
  "fname" varchar(25) DEFAULT NULL,
  "lname" varchar(25) DEFAULT NULL,
  "store_id" int DEFAULT NULL,
  "department_id" int DEFAULT NULL,
  "cond_value" int DEFAULT NULL,
  PRIMARY KEY ("id"),
  KEY "gt_t_inc_a" ("id","fname","lname","store_id","department_id")
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
rollback;
Warnings:
Warning	1751	The creation of some temporary tables could not be rolled back.
truncate table gt_t_inc;
begin;
show create table gt_s_inc;
Table	Create Table
gt_s_inc	CREATE GLOBAL TEMPORARY TABLE "gt_s_inc" (
  "id" int NOT NULL AUTO_INCREMENT,
  "fname" varchar(25) DEFAULT NULL,
  "lname" varchar(25) DEFAULT NULL,
  "store_id" int DEFAULT NULL,
  "department_id" int DEFAULT NULL,
  "cond_value" int DEFAULT NULL,
  PRIMARY KEY ("id"),
  KEY "gt_s_inc_a" ("id","fname","lname","store_id","department_id")
) ON COMMIT PRESERVE ROWS ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
show create table gt_t_inc;
Table	Create Table
gt_t_inc	CREATE GLOBAL TEMPORARY TABLE "gt_t_inc" (
  "id" int NOT NULL AUTO_INCREMENT,
  "fname" varchar(25) DEFAULT NULL,
  "lname" varchar(25) DEFAULT NULL,
  "store_id" int DEFAULT NULL,
  "department_id" int DEFAULT NULL,
  "cond_value" int DEFAULT NULL,
  PRIMARY KEY ("id"),
  KEY "gt_t_inc_a" ("id","fname","lname","store_id","department_id")
) ON COMMIT DELETE ROWS ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
INSERT ALL
WHEN 4 > x THEN
INTO gt_t_inc VALUES (0, 'iaf4', 'ial4', 4, 44, 444)
WHEN 3 > x THEN
INTO gt_s_inc VALUES (0, 'iaf3', 'ial3', 3, 33, 333)
SELECT 5 x FROM dual;
select * from gt_s_inc;
id	fname	lname	store_id	department_id	cond_value
select * from gt_t_inc;
id	fname	lname	store_id	department_id	cond_value
show create table gt_s_inc;
Table	Create Table
gt_s_inc	CREATE GLOBAL TEMPORARY TABLE "gt_s_inc" (
  "id" int NOT NULL AUTO_INCREMENT,
  "fname" varchar(25) DEFAULT NULL,
  "lname" varchar(25) DEFAULT NULL,
  "store_id" int DEFAULT NULL,
  "department_id" int DEFAULT NULL,
  "cond_value" int DEFAULT NULL,
  PRIMARY KEY ("id"),
  KEY "gt_s_inc_a" ("id","fname","lname","store_id","department_id")
) ON COMMIT PRESERVE ROWS ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
show create table gt_t_inc;
Table	Create Table
gt_t_inc	CREATE GLOBAL TEMPORARY TABLE "gt_t_inc" (
  "id" int NOT NULL AUTO_INCREMENT,
  "fname" varchar(25) DEFAULT NULL,
  "lname" varchar(25) DEFAULT NULL,
  "store_id" int DEFAULT NULL,
  "department_id" int DEFAULT NULL,
  "cond_value" int DEFAULT NULL,
  PRIMARY KEY ("id"),
  KEY "gt_t_inc_a" ("id","fname","lname","store_id","department_id")
) ON COMMIT DELETE ROWS ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
rollback;
Warnings:
Warning	1751	The creation of some temporary tables could not be rolled back.
# using 'merge into' command
begin;
show create table gt_s_inc;
Table	Create Table
gt_s_inc	CREATE GLOBAL TEMPORARY TABLE "gt_s_inc" (
  "id" int NOT NULL AUTO_INCREMENT,
  "fname" varchar(25) DEFAULT NULL,
  "lname" varchar(25) DEFAULT NULL,
  "store_id" int DEFAULT NULL,
  "department_id" int DEFAULT NULL,
  "cond_value" int DEFAULT NULL,
  PRIMARY KEY ("id"),
  KEY "gt_s_inc_a" ("id","fname","lname","store_id","department_id")
) ON COMMIT PRESERVE ROWS ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
MERGE INTO gt_s_inc t1
USING (select 1 id,'f' fname from dual) t2
ON (1 = 0)
WHEN NOT MATCHED THEN
INSERT (t1.fname, t1.lname, t1.store_id, t1.department_id)
VALUES (t2.fname, 3, 4, 5);
select * from gt_s_inc;
id	fname	lname	store_id	department_id	cond_value
1	f	3	4	5	NULL
show create table gt_s_inc;
Table	Create Table
gt_s_inc	CREATE TEMPORARY TABLE "gt_s_inc" (
  "id" int NOT NULL AUTO_INCREMENT,
  "fname" varchar(25) DEFAULT NULL,
  "lname" varchar(25) DEFAULT NULL,
  "store_id" int DEFAULT NULL,
  "department_id" int DEFAULT NULL,
  "cond_value" int DEFAULT NULL,
  PRIMARY KEY ("id"),
  KEY "gt_s_inc_a" ("id","fname","lname","store_id","department_id")
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
rollback;
Warnings:
Warning	1751	The creation of some temporary tables could not be rolled back.
truncate table gt_s_inc;
begin;
show create table gt_s_inc;
Table	Create Table
gt_s_inc	CREATE GLOBAL TEMPORARY TABLE "gt_s_inc" (
  "id" int NOT NULL AUTO_INCREMENT,
  "fname" varchar(25) DEFAULT NULL,
  "lname" varchar(25) DEFAULT NULL,
  "store_id" int DEFAULT NULL,
  "department_id" int DEFAULT NULL,
  "cond_value" int DEFAULT NULL,
  PRIMARY KEY ("id"),
  KEY "gt_s_inc_a" ("id","fname","lname","store_id","department_id")
) ON COMMIT PRESERVE ROWS ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
MERGE INTO gt_s_inc t1
USING (select 1 id,'f' fname from dual) t2
ON (1 = 1)
WHEN NOT MATCHED THEN
INSERT (t1.fname, t1.lname, t1.store_id, t1.department_id)
VALUES (t2.fname, 3, 4, 5);
select * from gt_s_inc;
id	fname	lname	store_id	department_id	cond_value
show create table gt_s_inc;
Table	Create Table
gt_s_inc	CREATE GLOBAL TEMPORARY TABLE "gt_s_inc" (
  "id" int NOT NULL AUTO_INCREMENT,
  "fname" varchar(25) DEFAULT NULL,
  "lname" varchar(25) DEFAULT NULL,
  "store_id" int DEFAULT NULL,
  "department_id" int DEFAULT NULL,
  "cond_value" int DEFAULT NULL,
  PRIMARY KEY ("id"),
  KEY "gt_s_inc_a" ("id","fname","lname","store_id","department_id")
) ON COMMIT PRESERVE ROWS ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
rollback;
Warnings:
Warning	1751	The creation of some temporary tables could not be rolled back.
truncate table gt_s_inc;
# disable meta modification if global temp table instance is created
create global temporary table gt_s1 (id int auto_increment primary key, v2 varchar2(10)) on commit preserve rows;
insert into gt_s1 values (0, 'a1');
select * from gt_s1;
id	v2
1	a1
show create table gt_s1;
Table	Create Table
gt_s1	CREATE TEMPORARY TABLE "gt_s1" (
  "id" int NOT NULL AUTO_INCREMENT,
  "v2" varchar(10) DEFAULT NULL,
  PRIMARY KEY ("id")
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
alter table gt_s1 add column i3 int;
ERROR HY000: attempt to create, alter or drop an index on temporary table already in use
create index gt_s1_r on gt_s1 (v2);
ERROR HY000: attempt to create, alter or drop an index on temporary table already in use
truncate table gt_s1;
alter table gt_s1 add column i3 int;
create index gt_s1_r on gt_s1 (id,v2,i3);
insert into gt_s1 values (0, 'b1', 3);
show create table gt_s1;
Table	Create Table
gt_s1	CREATE TEMPORARY TABLE "gt_s1" (
  "id" int NOT NULL AUTO_INCREMENT,
  "v2" varchar(10) DEFAULT NULL,
  "i3" int DEFAULT NULL,
  PRIMARY KEY ("id"),
  KEY "gt_s1_r" ("id","v2","i3")
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
# if the only global temp table instance is owned by current session,
# drop table will succeed.
drop table gt_s1;
# create a global temporary table in default connection
create global temporary table gt_s1 (id int auto_increment primary key, v2 varchar2(10)) on commit preserve rows;
insert into gt_s1 values (0, 'c1');
# change to conn1 connection
SELECT 'conn1', CURRENT_USER;
conn1	CURRENT_USER
conn1	root@localhost
SET SQL_MODE=ORACLE;
alter table gt_s1 add column i3 int;
ERROR HY000: attempt to create, alter or drop an index on temporary table already in use
create index gt_s1_r on gt_s1 (id,v2);
ERROR HY000: attempt to create, alter or drop an index on temporary table already in use
truncate table gt_s1;
alter table gt_s1 add column i3 int;
ERROR HY000: attempt to create, alter or drop an index on temporary table already in use
create index gt_s1_r on gt_s1 (id,v2);
ERROR HY000: attempt to create, alter or drop an index on temporary table already in use
drop table gt_s1;
ERROR HY000: attempt to create, alter or drop an index on temporary table already in use
# make sure MySQL temporary in this section may override global temp.
truncate table gt_s1;
show create table gt_s1;
Table	Create Table
gt_s1	CREATE GLOBAL TEMPORARY TABLE "gt_s1" (
  "id" int NOT NULL AUTO_INCREMENT,
  "v2" varchar(10) DEFAULT NULL,
  PRIMARY KEY ("id")
) ON COMMIT PRESERVE ROWS ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
create temporary table gt_s1 (a int);
show create table gt_s1;
Table	Create Table
gt_s1	CREATE TEMPORARY TABLE "gt_s1" (
  "a" int DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
alter table gt_s1 add column b int;
rename table gt_s1 to s2;
rename table s2 to gt_s1;
create index gt_s1_r on gt_s1 (a, b);
create table t1 (a int);
create trigger trig1 after insert on gt_s1 for each row insert into t1 values (1);
ERROR HY000: Trigger's 'gt_s1' is view or temporary table
drop table gt_s1;
drop table t1;
# now neither gt_s1 instance nor gt_s1 mysql temporary table in conn1.
# change to default connection
truncate table gt_s1;
# change to conn1 connection
alter table gt_s1 add column i3 int;
create index gt_s1_r on gt_s1 (id,v2);
drop table gt_s1;
# disconnect conn1, and return to default connection.
drop table gt_t_inc;
drop table gt_t_t0;
drop table gt_s_inc;
# for trigger
CREATE GLOBAL TEMPORARY TABLE temptest46(
a int AUTO_INCREMENT UNIQUE KEY PRIMARY KEY,
b number NOT NULL default 3.1415,
c DATETIME,
d VARCHAR(20),
e CLOB,index dex1(a))
ON COMMIT PRESERVE ROWS ENGINE=InnoDB;
# create trigger when no global temp table instance is created.
CREATE TRIGGER trig1 AFTER INSERT ON temptest46 FOR EACH ROW INSERT INTO temptest48(e) VALUES('this row from TRIGGER');
ERROR HY000: unsupported feature with temporary table
insert into temptest46 values(1,987.564,'1998-09-22 15:23:00','insert into values','insert into values, insert into for update, insert into select, insert into set');
insert into temptest46 values(2,987.564,'1998-09-22 15:23:00','(data_source)','insert into values, insert into for update, insert into select, insert into set (data_source)');
insert into temptest46 values(2,9999,'1998-09-22 15:23:00','insert into update','insert into values, insert into for update, insert into select, insert into set') ON DUPLICATE KEY UPDATE d=VALUES(d);
Warnings:
Warning	1287	'VALUES function' is deprecated and will be removed in a future release. Please use an alias (INSERT INTO ... VALUES (...) AS alias) and replace VALUES(col) in the ON DUPLICATE KEY UPDATE clause with alias.col instead
insert into temptest46 values(3,9999,'1998-09-22 15:23:00','insert into update','insert into values, insert into for update, insert into select, insert into set') ON DUPLICATE KEY UPDATE b=VALUES(b);
Warnings:
Warning	1287	'VALUES function' is deprecated and will be removed in a future release. Please use an alias (INSERT INTO ... VALUES (...) AS alias) and replace VALUES(col) in the ON DUPLICATE KEY UPDATE clause with alias.col instead
insert into temptest46 select 4,-9847,'1998-09-22 15:23:00','insert into select','insert into values, insert into for update, insert into select, insert into set' from dual;
insert into temptest46 set b=0,c='1998-09-22 15:23:00',d='insert into set',e='insert into values, insert into for update, insert into select, insert into set';
replace into temptest46(a,b,c,d,e) values(6,987.564,'1998-09-22 15:23:00','replace into values','replace into values, replace into select, replace into set');
replace into temptest46(a,b,c,d,e) values(6,0.9876543,'2023-02-27 10:23:56','replace into values','replace into values, replace into select, replace into set');
replace into temptest46(b,c,d,e) select -9847,'1998-09-22 15:23:00','replace into select','replace into values, replace into select, replace into set' from dual;
replace into temptest46 set b=0,c='1998-09-22 15:23:00',d='replace into set',e='replace into values, replace into select, replace into set';
CREATE TABLE temptest48 as select * from temptest46;
select * from temptest48 order by a;
a	b	c	d	e
1	987.564	1998-09-22 15:23:00	insert into values	insert into values, insert into for update, insert into select, insert into set
2	987.564	1998-09-22 15:23:00	insert into update	insert into values, insert into for update, insert into select, insert into set (data_source)
3	9999	1998-09-22 15:23:00	insert into update	insert into values, insert into for update, insert into select, insert into set
4	-9847	1998-09-22 15:23:00	insert into select	insert into values, insert into for update, insert into select, insert into set
5	0	1998-09-22 15:23:00	insert into set	insert into values, insert into for update, insert into select, insert into set
6	0.9876543	2023-02-27 10:23:56	replace into values	replace into values, replace into select, replace into set
7	-9847	1998-09-22 15:23:00	replace into select	replace into values, replace into select, replace into set
8	0	1998-09-22 15:23:00	replace into set	replace into values, replace into select, replace into set
# create trigger when global temp table instance is created.
CREATE TRIGGER trig1 AFTER INSERT ON temptest46 FOR EACH ROW INSERT INTO temptest48(e) VALUES('this row from TRIGGER');
ERROR HY000: unsupported feature with temporary table
# using global temp table in trigger of another table is supported.
CREATE TRIGGER trig1 AFTER INSERT ON temptest48 FOR EACH ROW INSERT INTO temptest46(e) VALUES(concat('this row from ', :NEW.e));
insert into temptest48(e) values ('TRIGGER test in q2');
select * from temptest48 order by a;
a	b	c	d	e
0	3.1415	NULL	NULL	TRIGGER test in q2
1	987.564	1998-09-22 15:23:00	insert into values	insert into values, insert into for update, insert into select, insert into set
2	987.564	1998-09-22 15:23:00	insert into update	insert into values, insert into for update, insert into select, insert into set (data_source)
3	9999	1998-09-22 15:23:00	insert into update	insert into values, insert into for update, insert into select, insert into set
4	-9847	1998-09-22 15:23:00	insert into select	insert into values, insert into for update, insert into select, insert into set
5	0	1998-09-22 15:23:00	insert into set	insert into values, insert into for update, insert into select, insert into set
6	0.9876543	2023-02-27 10:23:56	replace into values	replace into values, replace into select, replace into set
7	-9847	1998-09-22 15:23:00	replace into select	replace into values, replace into select, replace into set
8	0	1998-09-22 15:23:00	replace into set	replace into values, replace into select, replace into set
select * from temptest46 order by a;
a	b	c	d	e
1	987.564	1998-09-22 15:23:00	insert into values	insert into values, insert into for update, insert into select, insert into set
2	987.564	1998-09-22 15:23:00	insert into update	insert into values, insert into for update, insert into select, insert into set (data_source)
3	9999	1998-09-22 15:23:00	insert into update	insert into values, insert into for update, insert into select, insert into set
4	-9847	1998-09-22 15:23:00	insert into select	insert into values, insert into for update, insert into select, insert into set
5	0	1998-09-22 15:23:00	insert into set	insert into values, insert into for update, insert into select, insert into set
6	0.9876543	2023-02-27 10:23:56	replace into values	replace into values, replace into select, replace into set
7	-9847	1998-09-22 15:23:00	replace into select	replace into values, replace into select, replace into set
8	0	1998-09-22 15:23:00	replace into set	replace into values, replace into select, replace into set
9	3.1415	NULL	NULL	this row from TRIGGER test in q2
# make sure no instance is created before using trigger
truncate table temptest46;
show create table temptest46;
Table	Create Table
temptest46	CREATE GLOBAL TEMPORARY TABLE "temptest46" (
  "a" int NOT NULL AUTO_INCREMENT,
  "b" decimal(65,30) NOT NULL DEFAULT '3.141500000000000000000000000000',
  "c" datetime DEFAULT NULL,
  "d" varchar(20) DEFAULT NULL,
  "e" longtext,
  PRIMARY KEY ("a"),
  UNIQUE KEY "a" ("a") /* nulls are equal in unique index as oracle does */,
  KEY "dex1" ("a")
) ON COMMIT PRESERVE ROWS ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
insert into temptest48(e) values ('TRIGGER test in q3');
show create table temptest46;
Table	Create Table
temptest46	CREATE TEMPORARY TABLE "temptest46" (
  "a" int NOT NULL AUTO_INCREMENT,
  "b" decimal(65,30) NOT NULL DEFAULT '3.141500000000000000000000000000',
  "c" datetime DEFAULT NULL,
  "d" varchar(20) DEFAULT NULL,
  "e" longtext,
  PRIMARY KEY ("a"),
  UNIQUE KEY "a" ("a") /* nulls are equal in unique index as oracle does */,
  KEY "dex1" ("a")
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
select * from temptest46 order by a;
a	b	c	d	e
1	3.1415	NULL	NULL	this row from TRIGGER test in q3
drop table temptest46;
create global temporary table temptest46(
a int AUTO_INCREMENT UNIQUE KEY PRIMARY KEY,
b number NOT NULL default 3.1415,
c DATETIME,
d VARCHAR(20),
e CLOB,index dex1(a))
on commit delete rows;
create or replace function f0() return int deterministic as
c int := 0;
begin
insert into temptest46(b,c,d,e) values(987.564,'1998-09-22','insert into values','insert into values, insert into for update, insert into select, insert into set');
select count(*) into c from temptest46;
return c;
end; //
truncate table temptest46;
select f0(),'1 expected';
f0()	1 expected
1	1 expected
select f0(),'1 expected';
f0()	1 expected
1	1 expected
begin;
truncate table temptest46;
select f0(),'1 expected';
f0()	1 expected
1	1 expected
select f0(),'2 expected';
f0()	2 expected
1	2 expected
commit;
drop function f0;
create or replace procedure p0() as
c int := 0;
begin
insert into temptest46(b,c,d,e) values(987.564,'1998-09-22','insert into values','insert into values, insert into for update, insert into select, insert into set');
select count(*) from temptest46;
end; //
truncate table temptest46;
call p0();
count(*)
0
call p0();
count(*)
0
truncate table temptest46;
begin;
call p0;
count(*)
1
call p0;
count(*)
2
commit;
drop procedure p0;
drop table temptest48;
drop table temptest46;
create global temporary table temptest49(a mediumint,b double,c timestamp,d text,e varchar2(100));
begin;
replace into temptest49(a,b,c,d,e) values(6,987.564,'1998-09-22 15:23:00','replace into values','replace into values, replace into select, replace into set');
show create table temptest49;
Table	Create Table
temptest49	CREATE TEMPORARY TABLE "temptest49" (
  "a" mediumint DEFAULT NULL,
  "b" double DEFAULT NULL,
  "c" timestamp NULL DEFAULT NULL,
  "d" text,
  "e" varchar(100) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
select *,'1 row' from temptest49;
a	b	c	d	e	1 row
6	987.564	1998-09-22 15:23:00	replace into values	replace into values, replace into select, replace into set	1 row
commit;
replace into temptest49(a,b,c,d,e) values(6,987.564,'1998-09-22 15:23:00','replace into values','replace into values, replace into select, replace into set');
show create table temptest49;
Table	Create Table
temptest49	CREATE GLOBAL TEMPORARY TABLE "temptest49" (
  "a" mediumint DEFAULT NULL,
  "b" double DEFAULT NULL,
  "c" timestamp NULL DEFAULT NULL,
  "d" text,
  "e" varchar(100) DEFAULT NULL
) ON COMMIT DELETE ROWS ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
select *,'no row' from temptest49;
a	b	c	d	e	no row
truncate table temptest49;
# using global temp table in view
# view can be created if global temp table instance exists
begin;
insert into temptest49(a,b,c,d,e) values(6,987.564,'1998-09-22 15:23:00','replace into values','replace into values, replace into select, replace into set');
create view temp_view1 as select * from temptest49;
commit;
begin;
insert into temptest49(a,b,c,d,e) values(6,987.564,'1998-09-22 15:23:00','replace into values','replace into values, replace into select, replace into set');
select count(*),'1 expected' from temp_view1;
count(*)	1 expected
1	1 expected
drop view temp_view1;
commit;
# view can be created if global temp table doesnot exist
truncate table temptest49;
create view temp_view1 as select * from temptest49;
begin;
insert into temptest49(a,b,c,d,e) values(6,987.564,'1998-09-22 15:23:00','replace into values','replace into values, replace into select, replace into set');
select count(*),'1 expected' from temp_view1;
count(*)	1 expected
1	1 expected
commit;
select count(*),'0 expected' from temp_view1;
count(*)	0 expected
0	0 expected
drop view temp_view1;
drop table temptest49;
begin;
create private temporary table ora$ptt_temptest46(
a int,b number,c datetime,d varchar(20),e clob,
f binary(10), g bit, h enum('春','夏','秋','冬','unknow'),i SET('A', 'B', 'C'))
ON COMMIT DROP DEFINITION ENGINE=InnoDB;
select * from ora$ptt_temptest46;
a	b	c	d	e	f	g	h	i
create table oraptt_temptest48 as select * from ora$ptt_temptest46;
commit;
drop table oraptt_temptest48;
create private temporary table ora$ptt_temptest11(a int auto_increment primary key) on commit preserve definition;
ERROR HY000: unsupported feature with temporary table
create private temporary table ora$ptt_temptest12(a int primary key) on commit preserve definition;
ERROR HY000: unsupported feature with temporary table
create private temporary table ora$ptt_temptest13(a int, index index1(a)) on commit preserve definition;
ERROR HY000: unsupported feature with temporary table
create private temporary table ora$ptt_temptest14(a int unique key) on commit preserve definition;
ERROR HY000: unsupported feature with temporary table
create private temporary table ora$ptt_temptest15(a int default 999) on commit preserve definition;
ERROR HY000: unsupported feature with temporary table
create private temporary table ora$ptt_temptest15(a int default(999)) on commit preserve definition;
ERROR HY000: unsupported feature with temporary table
create private temporary table ora$ptt_temptest15(a varchar(20) default('ccc')) on commit preserve definition;
ERROR HY000: unsupported feature with temporary table
create private temporary table ora$ptt_temptest16(a int not null) on commit preserve definition;
ERROR HY000: unsupported feature with temporary table
create private temporary table ora$ptt_temptest17(a int null) on commit preserve definition;
drop table ora$ptt_temptest17;
create table ora$ptt_abc (a int);
ERROR HY000: cannot create an object with a name matching private temporary table prefix
create private temporary table ora$ptt_temptest17 (a int) on commit preserve definition;
create global temporary table gt_temp17 (a int) on commit preserve rows;
create table ora$ptt_abc like ora$ptt_temptest17;
ERROR HY000: cannot create an object with a name matching private temporary table prefix
create table ora$ptt_abc like gt_temp17;
ERROR HY000: cannot create an object with a name matching private temporary table prefix
create temporary table ora$ptt_abc like ora$ptt_temptest17;
ERROR HY000: cannot create an object with a name matching private temporary table prefix
create temporary table ora$ptt_abc like gt_temp17;
ERROR HY000: cannot create an object with a name matching private temporary table prefix
set sql_mode=default;
create table ora$ptt_abc (a int);
drop table ora$ptt_abc;
create table ora$ptt_abc like ora$ptt_temptest17;
drop table ora$ptt_abc;
create table ora$ptt_abc like gt_temp17;
drop table ora$ptt_abc;
create temporary table ora$ptt_abc like ora$ptt_temptest17;
drop table ora$ptt_abc;
create temporary table ora$ptt_abc like gt_temp17;
drop table ora$ptt_abc;
drop table gt_temp17;
set sql_mode=oracle;
set @@default_tmp_storage_engine=myisam;
select @@default_storage_engine,@@default_tmp_storage_engine;
@@default_storage_engine	@@default_tmp_storage_engine
InnoDB	MyISAM
create global temporary table t_m2 (cc int) on commit preserve rows;
# engine should be @@default_tmp_storage_engine
show create table t_m2;
Table	Create Table
t_m2	CREATE GLOBAL TEMPORARY TABLE "t_m2" (
  "cc" int DEFAULT NULL
) ON COMMIT PRESERVE ROWS ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
insert into t_m2 values(1);
# engine should be @@default_tmp_storage_engine
show create table t_m2;
Table	Create Table
t_m2	CREATE TEMPORARY TABLE "t_m2" (
  "cc" int DEFAULT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
drop table t_m2;
create global temporary table t_m2 (cc int) on commit preserve rows engine=innodb;
# engine is innodb.
show create table t_m2;
Table	Create Table
t_m2	CREATE GLOBAL TEMPORARY TABLE "t_m2" (
  "cc" int DEFAULT NULL
) ON COMMIT PRESERVE ROWS ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
insert into t_m2 values(1);
# engine should be @@default_tmp_storage_engine
show create table t_m2;
Table	Create Table
t_m2	CREATE TEMPORARY TABLE "t_m2" (
  "cc" int DEFAULT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
drop table t_m2;
set sql_mode=oracle;
create global temporary table temp2(a mediumint, b double, c timestamp, d text, e varchar2(100));
begin;
insert into temp2 (a) values (1);
select * from temp2;
a	b	c	d	e
1	NULL	NULL	NULL	NULL
show create table temp2;
Table	Create Table
temp2	CREATE TEMPORARY TABLE "temp2" (
  "a" mediumint DEFAULT NULL,
  "b" double DEFAULT NULL,
  "c" timestamp NULL DEFAULT NULL,
  "d" text,
  "e" varchar(100) DEFAULT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
# change to conn1 connection
SELECT 'conn1', CURRENT_USER;
conn1	CURRENT_USER
conn1	root@localhost
SET SQL_MODE=ORACLE;
select * from temp2;
a	b	c	d	e
show create table temp2;
Table	Create Table
temp2	CREATE GLOBAL TEMPORARY TABLE "temp2" (
  "a" mediumint DEFAULT NULL,
  "b" double DEFAULT NULL,
  "c" timestamp NULL DEFAULT NULL,
  "d" text,
  "e" varchar(100) DEFAULT NULL
) ON COMMIT DELETE ROWS ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
"if no lock issue, the truncate command will be returned immediately."
truncate table temp2;
# disconnect conn1, and return to default connection.
commit;
drop table temp2;
# private temp table truncate
drop temporary table if exists ora$ptt_t0;
Warnings:
Note	1051	Unknown table 'test.ora$ptt_t0'
drop temporary table if exists ora$ptt_t1;
Warnings:
Note	1051	Unknown table 'test.ora$ptt_t1'
drop temporary table if exists ora$ptt_t2;
Warnings:
Note	1051	Unknown table 'test.ora$ptt_t2'
begin;
create private temporary table ora$ptt_t0(id int, des varchar2(30));
insert into ora$ptt_t0 values (1, 't0');
select * from ora$ptt_t0 order by id;
id	des
1	t0
truncate table ora$ptt_t0;
select count(*),'should be 0' from ora$ptt_t0;
ERROR 42S02: Table 'test.ora$ptt_t0' doesn't exist
commit;
begin;
create private temporary table ora$ptt_t1(id int, des varchar2(30)) on commit drop definition;
insert into ora$ptt_t1 values (1, 't1');
select * from ora$ptt_t1 order by id;
id	des
1	t1
truncate table ora$ptt_t1;
select count(*),'should be 0' from ora$ptt_t1;
ERROR 42S02: Table 'test.ora$ptt_t1' doesn't exist
commit;
# truncating MySQL temporary table will end the transaction.
# All transactional temporary tables will be removed.
begin;
create temporary table temptest1(id int, des varchar2(30));
insert into temptest1 values (1, 'temptest1');
create private temporary table ora$ptt_t1(id int, des varchar2(30)) on commit drop definition;
insert into ora$ptt_t1 values (1, 't1');
create private temporary table ora$ptt_ts(id int, des varchar2(30)) on commit preserve definition;
insert into ora$ptt_ts values (1, 't2');
select * from temptest1;
id	des
1	temptest1
select * from ora$ptt_t1;
id	des
1	t1
select * from ora$ptt_ts;
id	des
1	t2
truncate table temptest1;
select count(*),'should be 0' from temptest1;
count(*)	should be 0
0	should be 0
select count(*),'no such table' from ora$ptt_t1;
ERROR 42S02: Table 'test.ora$ptt_t1' doesn't exist
select count(*),'should be 1' from ora$ptt_ts;
count(*)	should be 1
1	should be 1
drop table temptest1;
drop table ora$ptt_ts;
commit;
begin;
create private temporary table ora$ptt_t2(id int, des varchar2(30)) on commit preserve definition;
insert into ora$ptt_t2 values (1, 't2');
select * from ora$ptt_t2 order by id;
id	des
1	t2
truncate table ora$ptt_t2;
select count(*),'should be 0' from ora$ptt_t2;
count(*)	should be 0
0	should be 0
insert into ora$ptt_t2 values (1, 't2');
select * from ora$ptt_t2 order by id;
id	des
1	t2
commit;
# updatable view
set sql_mode=oracle;
create global temporary table gt_t1 (c integer) on commit preserve rows;
create table t1 (c integer);
insert into t1 values (10);
create view vup as select * from gt_t1;
update vup set c = 2;
show create table gt_t1;
Table	Create Table
gt_t1	CREATE GLOBAL TEMPORARY TABLE "gt_t1" (
  "c" int DEFAULT NULL
) ON COMMIT PRESERVE ROWS ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
select * from gt_t1;
c
insert into vup (c) values (1);
show create table gt_t1;
Table	Create Table
gt_t1	CREATE TEMPORARY TABLE "gt_t1" (
  "c" int DEFAULT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
select * from gt_t1;
c
1
update vup set c = 2;
show create table gt_t1;
Table	Create Table
gt_t1	CREATE TEMPORARY TABLE "gt_t1" (
  "c" int DEFAULT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
select * from gt_t1;
c
2
truncate table gt_t1;
create or replace function f1(v integer) return int deterministic as
sp_c integer;
begin
insert into vup (c) values (v);
select c into sp_c from vup order by c desc limit 1;
return sp_c+100;
end; //
create view vf as select f1(c) from t1;
create or replace procedure p1(v integer) as
sp_c integer;
begin
insert into vup (c) values (v);
select c from vup order by c desc limit 1;
select c into sp_c from vup order by c desc limit 1;
select sp_c;
end; //
call p1(10);
c
10
sp_c
10
select * from vup;
c
10
select * from vf;
f1(c)
110
show create table gt_t1;
Table	Create Table
gt_t1	CREATE TEMPORARY TABLE "gt_t1" (
  "c" int DEFAULT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
call p1(20);
c
20
sp_c
20
select * from vup;
c
10
10
20
select * from vf;
f1(c)
120
show create table gt_t1;
Table	Create Table
gt_t1	CREATE TEMPORARY TABLE "gt_t1" (
  "c" int DEFAULT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
drop function f1;
drop procedure p1;
drop view vf;
drop view vup;
drop table t1;
drop table gt_t1;
# insertable view
create global temporary table gt_t1 (id int, value int) on commit preserve rows;
create table table_b (id int, ta_id int, value int);
create view v AS
select      a.id a_id, b.id b_id, b.ta_id, a.value v1, b.value v2
from        gt_t1 a
inner join  table_b b on (b.ta_id = a.id);
select * from v;
a_id	b_id	ta_id	v1	v2
# global temp table instance should be created
insert into v (b_id, ta_id, v2) values (5, 3, 500);
show create table gt_t1;
Table	Create Table
gt_t1	CREATE TEMPORARY TABLE "gt_t1" (
  "id" int DEFAULT NULL,
  "value" int DEFAULT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
insert into v (a_id, v1) values (3, 30);
show create table gt_t1;
Table	Create Table
gt_t1	CREATE TEMPORARY TABLE "gt_t1" (
  "id" int DEFAULT NULL,
  "value" int DEFAULT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
select * from gt_t1;
id	value
3	30
select * from table_b;
id	ta_id	value
5	3	500
drop view v;
drop table gt_t1;
drop table table_b;
# global temp table in select-clause of insert statement
create global temporary table zgh1(a mediumint,b double,c timestamp,d text,e varchar2(100))on commit preserve rows;
create table zgh2 (a int);
select count(*), 'no rows of zgh1' from zgh1;
count(*)	no rows of zgh1
0	no rows of zgh1
insert into zgh2 select a from zgh1;
select *,'no rows' from zgh2;
a	no rows
insert into zgh1 (a) values (1);
insert into zgh2 select a from zgh1;
select *,'1 row' from zgh2;
a	1 row
1	1 row
drop table zgh1;
drop table zgh2;
