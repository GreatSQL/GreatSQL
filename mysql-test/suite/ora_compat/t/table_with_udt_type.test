--source include/have_debug.inc
SET sql_mode=ORACLE;
SET SESSION debug='+d,skip_dd_table_access_check';

show variables like '%udt_format_result%';
set @@udt_format_result='DBA';

--echo #
--echo # test of create type
--echo #
create or replace type t_air as object(id int,type varchar(20));

SELECT name,type,options FROM mysql.routines where name='t_air';

--echo #
--echo # test of create table with udt column
--echo #
--error ER_SP_DOES_NOT_EXIST
create table tt_air(id int,name1 t_air2);
create table tt_air(id int,name1 t_air);
show create table tt_air;
SELECT name,type,options FROM mysql.columns where name='name1';
SELECT name,type,options FROM mysql.routines where name='t_air';

--echo #
--echo # test of replace type when table used the type
--echo #
--error ER_TYPE_DROP_FAILED
create or replace type t_air as object(id int,type varchar(30));

--echo #
--echo # test of insert into table with udt column
--echo #
--error ER_UDT_INCONS_DATATYPES
insert into tt_air values(1,'sadf');

insert into tt_air values(1,t_air(10,'aabb'));

insert into tt_air values(2,t_air(20,'qwed'));
select * from tt_air;

--echo #
--echo # test of alter table add udt column 
--echo #
alter table tt_air add name2 t_air;
select * from tt_air;
SELECT name,type,options FROM mysql.columns where name='name2';
SELECT name,type,options FROM mysql.routines where name='t_air';
insert into tt_air values(3,t_air(30,'12eg'),t_air(31,'name2'));
select * from tt_air;

--echo #
--echo # test of alter table drop udt column 
--echo #
alter table tt_air drop name2;
SELECT name,type,options FROM mysql.routines where name='t_air';
select * from tt_air;

--echo #
--echo # test of alter table modify udt column 
--echo #
--error ER_NOT_SUPPORTED_YET
alter table tt_air modify name1 varchar(100);
SELECT name,type,options FROM mysql.routines where name='t_air';
select * from tt_air;

--echo #
--echo # test of subquery of udt table
--echo #
--error ER_UDT_INCONS_DATATYPES
select name1 from tt_air where name1;
--error ER_UDT_INCONS_DATATYPES
select b.name1 from tt_air b left join  tt_air a on  a.name1;
--error ER_WRONG_ARGUMENTS
select * from (select * from tt_air)  where name1>1;


--echo #
--echo # test of create index on udt column 
--echo #
--error ER_UDF_TYPE_USED_AS_KEY
create index idx1 on tt_air(name1);
--error ER_UDF_TYPE_USED_AS_KEY
create index idx1 on tt_air(id,name1);

--echo #
--echo # test of create view on udt column 
--echo #
CREATE VIEW vv as SELECT * FROM tt_air;
SELECT name,type,options FROM mysql.routines where name='t_air';
select * from vv;

CREATE ALGORITHM=TEMPTABLE VIEW vv1 as SELECT * FROM tt_air;
SELECT name,type,options FROM mysql.routines where name='t_air';
select * from vv1;

CREATE ALGORITHM=MERGE VIEW vv2 as SELECT * FROM tt_air;
SELECT name,type,options FROM mysql.routines where name='t_air';
select * from vv2;

--echo #
--echo # test of alter view on udt column 
--echo #
create table tt_air1(id int,name1 t_air,name2 t_air);
SELECT name,type,options FROM mysql.routines where name='t_air';
alter VIEW vv as SELECT * FROM tt_air1;
select * from vv;
drop view vv;
drop view vv1;
drop view vv2;

--echo #
--echo # test of drop table with udt column 
--echo #
drop table tt_air1;
SELECT name,type,options FROM mysql.routines where name='t_air';

--echo #
--echo # test of drop type
--echo #
--error ER_TYPE_DROP_FAILED
drop type t_air;
drop table tt_air;
SELECT name,type,options FROM mysql.routines where name='t_air';
drop type t_air;

--echo #
--echo # test of update set table with udt column
--echo #
create or replace type t_air as object(id int,type varchar(30));
create table tt_air1(id int,name1 t_air,name2 t_air);
SELECT name,type,options FROM mysql.routines where name='t_air';
insert into tt_air1 values(1,t_air(10,'aaebb1'),t_air(20,'2edf2'));
insert into tt_air1 values(2,t_air(100,'aabb2'),t_air(200,'2edf3'));
select * from tt_air1;
update tt_air1 set name1=t_air(50,'name1') where id=1;
--error ER_NOT_SUPPORTED_YET
UPDATE tt_air1 SET (tt_air1.name1)=(2,9);
--error ER_OPERAND_COLUMNS
update tt_air1 set tt_air1.name1 = (select * from tt_air1 limit 1);
select * from tt_air1;
--error ER_WRONG_ARGUMENTS
select * from (select * from tt_air1)  where name1<name2;

--echo #
--echo # test of insert into select from
--echo #
create table tt_air2(id int,name1 t_air,name2 t_air);
insert into tt_air2 select * from tt_air1;
select * from tt_air2;
drop table tt_air2;

--echo #
--echo # test of insert into table with null udt column
--echo #
insert into tt_air1 values(3,null,null);
insert into tt_air1 values(2,t_air(null,null),t_air(null,null));
select * from tt_air1;

--echo #
--echo # test of select from table with udt column in where-clause
--echo #
SELECT * FROM tt_air1 WHERE name1=t_air(100,'aabb2');

--echo #
--echo # test of select expr about udt value from table with udt column
--echo #
--error ER_NOT_SUPPORTED_YET
select name1 || t_air(10,'sdgh') from tt_air1;
--error ER_NOT_SUPPORTED_YET
select nvl(name1,id) from tt_air1;
SELECT * FROM tt_air1 WHERE isnull(name2);
SELECT * FROM tt_air1 WHERE name2 is not null;
--error ER_WRONG_ARGUMENTS
select name1 > name2 from tt_air1;

--echo #
--echo # test of using udt column in order-by clause
--echo #
--error ER_TYPE_IN_ORDER_BY
SELECT * FROM tt_air1 order BY name1;

--echo #
--echo # test of using udt column in GROUP-BY clause
--echo #
--error ER_TYPE_IN_ORDER_BY
SELECT name1 FROM tt_air1 GROUP BY name1;

--echo #
--echo # test of using udt column in partition-by clause
--echo #
--error ER_TYPE_IN_ORDER_BY
select *, rank()over(partition by name1 order by name1 desc) m from tt_air1;

--echo #
--echo # test of setting non-udt column using udt value.
--echo #
create table blob1(id int,bb blob);
insert into blob1 values(1,'aacc');
--error ER_UDT_INCONS_DATATYPES
insert into blob1 values(1,t_air(1,'aabb'));
--error ER_UDT_INCONS_DATATYPES
update blob1 set bb=t_air(50,'name1') where id=1;

drop table blob1;

--echo #
--echo # test of create tmp table with udt column
--echo #
--error ER_NOT_SUPPORTED_YET
create TEMPORARY table tt_air_tmp(id int,nametmp t_air);

--echo #
--echo # test of cursor fetch into
--echo #

DELIMITER $$;
CREATE or replace PROCEDURE p1(min INT,max INT) as
  CURSOR cur(pmin INT, pmax INT) is SELECT name1 FROM tt_air1 WHERE id BETWEEN pmin AND pmax;
  va tt_air1.name1%type;
BEGIN
  OPEN cur(min,max);
  LOOP
    FETCH cur INTO va;
    EXIT WHEN cur%NOTFOUND;
    select va;
  END LOOP;
  CLOSE cur;
END;
$$
DELIMITER ;$$
call p1(1,10);
call p1(1,10);
drop PROCEDURE p1;

--echo #
--echo # test of cursor for in
--echo #

DELIMITER $$;
CREATE PROCEDURE p2() as
  CURSOR c_country (ii int) IS SELECT * FROM tt_air1 WHERE id =ii;
  rec c_country%ROWTYPE;
BEGIN
  FOR rec IN c_country(1)
  loop
    SELECT rec.id,rec.name1,rec.name2;
  END loop;
END;
$$
DELIMITER ;$$
call p2;
call p2;
drop PROCEDURE p2;

--echo #
--echo # test of select into
--echo #

DELIMITER $$;
CREATE or replace PROCEDURE p3() as
  rec tt_air1.name1%type;
BEGIN
  SELECT name1 into rec FROM tt_air1 WHERE id =1;
  select rec;
END;
$$
DELIMITER ;$$
call p3;
call p3;
drop PROCEDURE p3;

--echo #
--echo # test of BULK COLLECT into
--echo #

DELIMITER $$;
CREATE or replace PROCEDURE p4() as
  type dr_type is table of tt_air1%ROWTYPE index by binary_integer;
  dr_table dr_type;
begin
  select * BULK COLLECT into dr_table from tt_air1;
  for i IN dr_table.first .. dr_table.last loop
    select dr_table(i).id,dr_table(i).name1,dr_table(i).name2;
  end loop;
end;
$$
DELIMITER ;$$
call p4;
call p4;
drop PROCEDURE p4;

--echo #
--echo # test of subquery of table with udt column
--echo #
SELECT * FROM (select * from tt_air1 where name1=t_air(100,'aabb2'));
SELECT * FROM (select * from tt_air1 where name1 is not null);
--error ER_NOT_SUPPORTED_YET
select name1 from tt_air1 union select name1 from  tt_air1;
--error ER_NOT_SUPPORTED_YET
select name1 from tt_air1 minus select name1 from tt_air1;
--error ER_NOT_SUPPORTED_YET
select name1 from tt_air1 union select id from tt_air1;
--error ER_NOT_SUPPORTED_YET
select name1 from tt_air1 minus select id from tt_air1;

--echo #
--echo # create table as table with udt column
--echo #
create table tmp_sele as select * from tt_air1;
select * from tmp_sele;

--echo #
--echo # insert into select from table with udt column
--echo #
insert into tmp_sele select * from tt_air1;
select * from tmp_sele;
drop table tmp_sele;

--echo #
--echo # create table like
--echo #
create table table_like like tt_air1;
show create table table_like;
insert into table_like values(1,t_air(1,'aabb'),t_air(2,null));
select * from table_like;

drop table table_like;

--echo #
--echo # test different charset of client
--echo #
show variables like '%udt_format_result%';
select * from tt_air1;
SELECT t_air(1+1,'aabb') FROM dual;

set @@udt_format_result='BINARY';
select * from tt_air1;
SELECT t_air(1+1,'aabb') FROM dual;

set @@udt_format_result='DBA';
select * from tt_air1;
SELECT t_air(1+1,'aabb') FROM dual;

--echo #
--echo # test of bug8889
--echo #
SELECT 1 as a from dual where lnnvl(t_air(1,1));
SELECT 1 as a from tt_air1 where lnnvl(name1);

DELIMITER $$;
CREATE or replace PROCEDURE p4() as
  type stu_record is record(
    id int := 1,
    name_d  varchar(20) := 'a',
    score float := 0
  );
  stu_record1 stu_record;
  type dr_type is table of tt_air1%ROWTYPE index by binary_integer;
  dr_table dr_type;
begin
  SELECT 1 as a from dual where lnnvl(dr_table);
  SELECT 1 as a from dual where lnnvl(stu_record1);
end;
$$
DELIMITER ;$$
call p4;
call p4;
drop PROCEDURE p4;

drop table tt_air1;

--echo #
--echo # test of create type with blob column
--echo #
--error ER_NOT_SUPPORTED_YET
create or replace type t_air as object(id int,type blob);
drop type t_air;

--echo #
--echo # test of error ER_TOO_BIG_FIELDLENGTH
--echo #
create or replace type t_air1 as object(id varchar(10000),type varchar(10000));
--error ER_TOO_BIG_FIELDLENGTH
create table t2(id int,name t_air1);
drop type t_air1;

--echo #
--echo # test of type set
--echo #
create or replace type t_air_set as object(id int,type set('a', 'b', 'c', 'd'));
create table t3(id int,name1 t_air_set);
insert into t3 values(1,t_air_set(1,'a'));
select * from t3;
drop table t3;
drop type t_air_set;

--echo #
--echo # test of create table over schema
--echo #
create database db1;
create or replace type t_air as object(id int,type varchar(20));
use db1;
create or replace type t_air as object(id int,type varchar(20),j int);
use test;
--error ER_WRONG_UDT_DATA_TYPE
create table db1.tabl1 (id int, u1 t_air);
--error ER_WRONG_UDT_DATA_TYPE
create table tabl1 (id int, u1 db1.t_air);
create table db1.tabl1 (id int, u1 db1.t_air);
SELECT name,type,options FROM mysql.routines where name='t_air';
--error ER_WRONG_UDT_DATA_TYPE
insert into db1.tabl1 values(1,t_air(1,'a'));
--error ER_WRONG_UDT_DATA_TYPE
insert into db1.tabl1 values(1,test.t_air(1,'a'));
insert into db1.tabl1 values(1,db1.t_air(1,'a',2));
select * from db1.tabl1;

--echo #
--echo # test of alter table over schema
--echo #
--error ER_WRONG_UDT_DATA_TYPE
alter table db1.tabl1 add u2 t_air;
alter table db1.tabl1 add u2 db1.t_air;
SELECT name,type,options FROM mysql.routines where name='t_air';
select * from db1.tabl1;
insert into db1.tabl1 values(1,db1.t_air(1,'a',2),db1.t_air(10,'aee',20));
select * from db1.tabl1;
alter table db1.tabl1 drop u2;
SELECT name,type,options FROM mysql.routines where name='t_air';

--echo #
--echo # test of db2.t%rowtype
--echo #

DELIMITER $$;
CREATE or replace PROCEDURE p4() as
  type dr_type is table of db1.tabl1%ROWTYPE index by binary_integer;
  dr_table dr_type;
begin
  select * BULK COLLECT into dr_table from db1.tabl1;
  for i IN dr_table.first .. dr_table.last loop
    select dr_table(i).id,dr_table(i).u1;
  end loop;
end;
$$
DELIMITER ;$$
call p4;
call p4;
drop PROCEDURE p4;

--echo #
--echo # test of db2.cursor%rowtype
--echo #

DELIMITER $$;
CREATE or replace PROCEDURE p4() AS 
CURSOR cur1 IS SELECT * FROM db1.tabl1;
rec1 cur1%ROWTYPE;
BEGIN
  OPEN cur1;
  LOOP
    fetch cur1 INTO rec1;
    EXIT WHEN cur1%NOTFOUND; 
    select rec1.id,rec1.u1;
  END LOOP;
close cur1;
END;
$$
DELIMITER ;$$
call p4;
call p4;
drop PROCEDURE p4;

--echo #
--echo # test of db2.t1.col%type
--echo #

DELIMITER $$;
CREATE or replace PROCEDURE p4() AS 
rec1 db1.tabl1.u1%TYPE;
BEGIN
  rec1 := db1.t_air(10,'eee',10);
  select rec1;
END;
$$
DELIMITER ;$$
call p4;
call p4;
drop PROCEDURE p4;

drop table db1.tabl1;
drop type db1.t_air;
drop database db1;

--echo #
--echo # test of t1.type=t2.type
--echo #
create table tabl1 (id int, u1 t_air);
create table tabl2 (id int, u1 t_air);
insert into tabl1 values (1,NULL),(2,t_air(2,2));
insert into tabl2 values (1,NULL),(2,t_air(2,2));
--error ER_UDT_INCONS_DATATYPES
select * from tabl1,tabl2 where tabl1.id=tabl2.u1;

--echo #
--echo # test of bug5696
--echo #
create table t2(id int AUTO_INCREMENT,f1 t_air default null,primary key (id)) partition by hash(id) partitions 15;
drop table t2;

create table t2(id int,f1 t_air default null);
insert into t2 values(11,t_air(22,'SWWW'));
select * from t2 a where a.f1 in (select b.f1 from t2 b) and a.f1 not in (select b.f1 from t2 b);
--error ER_NOT_SUPPORTED_YET
select (select f1 from t2)+1;
--error ER_OPERAND_COLUMNS
select (select * from t2)+1;
drop table t2;

drop table tabl1;
drop table tabl2;
drop type t_air;

--echo #
--echo # test of bug5754
--echo #
create or replace type type1 is object(id1 int,name1 varchar(20)); 
create table t1 (i int, f1 type1);
insert into t1 values(1,type1(1,'aaaaa')),(null,type1(2,'bbbbb')),(null,type1(3,'ccccc')) ;
CREATE VIEW v_t1 as select * from t1;
SELECT * FROM v_t1;

create table s1(id int ,f1 type1);
insert into s1 values(1,type1(777,'bbbbb')),(2,type1(888,'222aaa')),(3,type1(999,'bbb303')),(4,type1(404,'aaa404aaa'));
WITH ali_s1 AS(SELECT id,f1 FROM s1 )   
SELECT a.id,a.f1,b.id,b.f1 FROM ali_s1 a,s1 b WHERE a.f1=b.f1;

--error ER_NOT_SUPPORTED_YET
SELECT MAX(f1),MIN(f1) FROM t1;

--error ER_NOT_SUPPORTED_YET
SELECT f1 , FIRST_VALUE(f1) over (order by i) a from t1;
--error ER_NOT_SUPPORTED_YET
SELECT avg(f1) FROM t1;
--error ER_NOT_SUPPORTED_YET
SELECT MAX(f1),MIN(f1) FROM t1;
--error ER_NOT_SUPPORTED_YET
SELECT f1 , nth_VALUE(f1,1) over (order by i) a from t1;
--error ER_NOT_SUPPORTED_YET
select VAR_SAMP(f1) as a from t1;
--error ER_NOT_SUPPORTED_YET
SELECT DATE_SUB(f1,INTERVAL 1 MONTH) from t1;

drop VIEW v_t1;
drop table t1;
drop table s1;

--echo #
--echo # test of bug7331
--echo #
CREATE OR REPLACE TYPE MingXiType AS OBJECT
  (GoodID varchar2(20),
    InCount int,
    ProviderID varchar(20));
CREATE TABLE InStockTable (
    OrderID varchar(15) Not Null Primary Key,
    InDate date,
    OperatorID varchar(15),
     MingXi MingXiType);
INSERT INTO InStockTable VALUES('20071012001',TO_DATE('2007-10-12','YYYY-MM-DD'),'007',MingXiType('G003',666,'1001'));
INSERT INTO InStockTable VALUES('20071012002',TO_DATE('2007-10-12','YYYY-MM-DD'),'006',MingXiType('G004',888,'1002'));
INSERT INTO InStockTable VALUES('20071012003',TO_DATE('2007-10-12','YYYY-MM-DD'),'005',MingXiType('G005',8888,'1003'));
--error ER_UDT_INCONS_DATATYPES
select * from InStockTable where MingXi in (1,2);
--error ER_WRONG_UDT_DATA_TYPE
select * from InStockTable where MingXi in (type1(777,'bbbbb'),type1(777,'bbbbb'));
select * from InStockTable where MingXiType('G001',200,'1001') in (MingXiType('G001',200,'1001'),MingXiType('G002',8888,'1002'));
select * from InStockTable where MingXiType('G001',200,'1001') in (null,null);
delete from InStockTable where MingXi in (MingXiType('G001',200,'1001'),MingXiType('G002',8888,'1002'));
select * from InStockTable;
delete from InStockTable where MingXi in (MingXiType('G001',200,'1001'),MingXiType('G005',8888,'1003'));
select * from InStockTable;
update InStockTable set MingXi=MingXiType('G001',111,'10011') where MingXi in (MingXiType('G001',200,'1001'),MingXiType('G004',888,'1002'));
select * from InStockTable;
create or replace type type_table is varray(10) of type1;
select * from InStockTable where type_table(type1(777,'bbbbb'),type1(778,'bbbbb1')) in (type_table(type1(777,'bbbbb'),type1(778,'bbbbb1')),type_table(type1(778,'bbbbb1')));
--error ER_UDT_INCONS_DATATYPES
select * from InStockTable where MingXiType('G001',200,'1001') in (type_table(type1(777,'bbbbb'),type1(778,'bbbbb1')),type_table(type1(778,'bbbbb1')));
select * from InStockTable where MingXiType('G001',111,'10011')=MingXiType('G001',111,'10011');
select * from InStockTable where type_table(type1(777,'bbbbb'),type1(778,'bbbbb1'))=type_table(type1(777,'bbbbb'),type1(778,'bbbbb1'));
drop type type_table;

drop table InStockTable;
drop type MingXiType;
drop type type1;

--echo #
--echo # test of create view tv as select
--echo #
DELIMITER $$;
--error ER_VIEW_SELECT_VARIABLE
CREATE or replace PROCEDURE p1() as
type stu_record is record(
  id int := 1,
  name_d  varchar(20) := 'a',
  score float := 0
);
type tklist is table of stu_record index by binary_integer;
stu_record_val tklist;
begin
 stu_record_val(0).id := 2;
 stu_record_val(0).score := 1;
 create or replace view tv as select stu_record_val(0).id,stu_record_val(0).name_d,stu_record_val(0).score;
end;
$$
DELIMITER ;$$

--echo #
--echo # test of create table tv as select
--echo #
DELIMITER $$;
CREATE or replace PROCEDURE p1() as
type stu_record is record(
  id int := 1,
  name_d  varchar(20) := 'a',
  score float := 0
);
type tklist is table of stu_record index by binary_integer;
stu_record_val tklist;
begin
 stu_record_val(0).id := 2;
 stu_record_val(0).score := 1;
 create table tv as select stu_record_val(0).id,stu_record_val(0).name_d,stu_record_val(0).score;
 select * from tv;
end;
$$
DELIMITER ;$$
call p1;
drop table tv;
drop PROCEDURE p1;

--echo #
--echo # test of create table tv as select
--echo #
DELIMITER $$;
CREATE or replace PROCEDURE p1() as
type stu_record is record(
  id int := 1,
  name_d  varchar(20) := 'a',
  score float := 0
);
type tklist is table of stu_record index by binary_integer;
stu_record_val tklist;
begin
 stu_record_val(0).id := 2;
 stu_record_val(0).score := 1;
 create table tv as select stu_record_val(0);
end;
$$
DELIMITER ;$$
--error ER_NOT_SUPPORTED_YET
call p1;
drop PROCEDURE p1;

--echo #
--echo # test of create table tv as select
--echo #
DELIMITER $$;
CREATE or replace PROCEDURE p1() as
type stu_record is record(
  id int := 1,
  name_d  varchar(20) := 'a',
  score float := 0
);
type tklist is table of stu_record index by binary_integer;
stu_record_val tklist;
begin
 stu_record_val(0).id := 2;
 stu_record_val(0).score := 1;
 create table tv as select stu_record_val;
end;
$$
DELIMITER ;$$
--error ER_NOT_SUPPORTED_YET
call p1;
drop PROCEDURE p1;

--echo #
--echo # test of create table tv as select
--echo #
DELIMITER $$;
CREATE or replace PROCEDURE p1() as
type stu_record is record(
  id int := 1,
  name_d  varchar(20) := 'a',
  score float := 0
);
type tklist is table of stu_record index by binary_integer;
stu_record_val tklist;
begin
 stu_record_val(0).id := 2;
 stu_record_val(0).score := 1;
 select * from (select stu_record_val);
end;
$$
DELIMITER ;$$
--error ER_NOT_SUPPORTED_YET
call p1;
drop PROCEDURE p1;

--echo #
--echo # test of create table tv as select
--echo #
DELIMITER $$;
CREATE or replace PROCEDURE p1() as
type stu_record is record(
  id int := 1,
  name_d  varchar(20) := 'a',
  score float := 0
);
type tklist is table of stu_record index by binary_integer;
stu_record_val tklist;
begin
 stu_record_val(0).id := 2;
 stu_record_val(0).score := 1;
 select * from (select stu_record_val);
end;$$
DELIMITER ;$$
--error ER_NOT_SUPPORTED_YET
call p1;
drop PROCEDURE p1;

--echo #
--echo # test of bug7696
--echo #
CREATE OR REPLACE type cb_type1 AS OBJECT(ID int,NAME VARCHAR2(20),PID NUMBER);
create or replace type udt_test1 as object(
        col0 tinyint,
        col1 smallint,
        col2 mediumint,
        col3 int,
        col4 integer,
        col5 bigint,
        col6 decimal(10, 2),
        col7 dec(10, 2),
        col8 numeric(10, 2),
        col9 float,
        col10 double,
        col11 real,
        col12 bool,
        col13 boolean,
        col14 DATE,
        col15 DATETIME,
        col16 TIMESTAMP,
        col17 TIME,
        col18 YEAR,
        col19 CHAR(10),
        col20 VARCHAR(20),
        col21 BINARY(10),
        col22 VARBINARY(50),
        col31 bit,
        col32 enum('春', '夏', '秋', '冬', 'unknow'),
        col33 SET('A', 'B', 'C'),
        col35 number,
        col36 VARCHAR2(100),
        col37 PLS_INTEGER);
        
CREATE  TABLE t_cb ( ID int,NAME VARCHAR2(20),PID NUMBER,f1  cb_type1);
create table tab_of_object3 (a udt_test1);

select * from (select * from t_cb) t5 full join (select * from tab_of_object3) t3 on t5.f1<>cb_type1(1,10,0);
drop table t_cb;
drop table tab_of_object3;
drop type udt_test1;
drop type cb_type1;

--echo #
--echo # test of bug8837
--echo #
create database `db/1`;
use `db/1`;
create or replace type t_air as object(id int,type varchar(20));
create table t21(id int AUTO_INCREMENT,f1 t_air default null,primary key (id)) partition by hash(id) partitions 15;
drop table t21;
drop type t_air;
use test;
drop database `db/1`;


