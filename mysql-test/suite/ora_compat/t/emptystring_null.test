DROP TABLE IF EXISTS `test1`;
CREATE TABLE `test1` (
  `id` int NOT NULL,
  `name` varchar(100) DEFAULT NULL,
  `test_dec` decimal(10,5) DEFAULT NULL,
  `test_blob` blob,
  `c5` varchar(255) NOT NULL,
  `c6` timestamp NULL DEFAULT NULL,
  `c7` char(255) DEFAULT NULL,
  `c8` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

INSERT INTO `test1` VALUES (1, '1', 11.32000, NULL, 'c5', NULL, 'c71', NULL);
INSERT INTO `test1` VALUES (2, '2', 22.24500, NULL, '', '2022-03-17 16:08:57', NULL, 'c82');
INSERT INTO `test1` VALUES (3, '3', 3.00000, NULL, '', '2022-03-17 16:04:15', NULL, NULL);
INSERT INTO `test1` VALUES (4, '3', NULL, NULL, '', NULL, NULL, NULL);
INSERT INTO `test1` VALUES (5, '', NULL, NULL, '', '2022-03-09 16:04:19', NULL, NULL);
INSERT INTO `test1` VALUES (6, '', NULL, NULL, '', NULL, NULL, '1');
INSERT INTO `test1` VALUES (7, '20', NULL, NULL, '', NULL, NULL, NULL);
INSERT INTO `test1` VALUES (8, '8', NULL, NULL, '', NULL, NULL, NULL);
INSERT INTO `test1` VALUES (9, NULL, NULL, NULL, '', NULL, NULL, NULL);
INSERT INTO `test1` VALUES (10, NULL, NULL, NULL, 'c510', NULL, '', '');

DROP TABLE IF EXISTS `test2`;
CREATE TABLE `test2` (
  `id` int NOT NULL,
  `name` varchar(100) DEFAULT NULL,
  `test_dec` decimal(10,5) DEFAULT NULL,
  `test_blob` blob,
  `c5` varchar(255) NOT NULL,
  `c6` timestamp NULL DEFAULT NULL,
  `c7` char(255) DEFAULT NULL,
  `c8` varchar(255) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

INSERT INTO `test2` VALUES (10, '1', 11.32000, NULL, 'c5', NULL, 'c71', NULL);
INSERT INTO `test2` VALUES (10, '2', 22.24500, NULL, '', '2022-03-17 16:08:57', NULL, 'c82');
INSERT INTO `test2` VALUES (10, '3', 3.00000, NULL, '', '2022-03-17 16:04:15', NULL, NULL);
INSERT INTO `test2` VALUES (10, '3', NULL, NULL, '', NULL, NULL, NULL);
INSERT INTO `test2` VALUES (20, '', NULL, NULL, '', '2022-03-09 16:04:19', NULL, NULL);
INSERT INTO `test2` VALUES (20, '', NULL, NULL, '', NULL, NULL, '1');
INSERT INTO `test2` VALUES (20, '20', NULL, NULL, '', NULL, NULL, NULL);
INSERT INTO `test2` VALUES (30, '8', NULL, NULL, '', NULL, NULL, NULL);
INSERT INTO `test2` VALUES (30, NULL, NULL, NULL, '', NULL, NULL, NULL);
INSERT INTO `test2` VALUES (40, NULL, NULL, NULL, 'c510', NULL, '', '');
INSERT INTO `test2` VALUES (40, NULL, NULL, NULL, 'c510', NULL, '', '');
INSERT INTO `test2` VALUES (50, '', NULL, NULL, '', NULL, NULL, '1');
INSERT INTO `test2` VALUES (50, '', NULL, NULL, '', NULL, NULL, '1');

CREATE VIEW test_view as select name from test1 group by name;

CREATE TABLE t1 (i1 int, c2 varchar(100) default '', descr VARCHAR(100));

INSERT INTO t1 VALUES (1, '', 'empty string');
INSERT INTO t1 VALUES (-1, NULL, 'null');
INSERT INTO t1 VALUES (2, '', 'empty string 2');
INSERT INTO t1 VALUES (-2, NULL, 'null 2');

CREATE TABLE t2 AS SELECT * FROM t1;
CREATE INDEX t1_c2 ON t1(c2);

create table lob1 (
        id int,
        c2 clob,
        b3 blob
);
insert into lob1 values (0, NULL, NULL);
insert into lob1 values (1, '', '');
insert into lob1 values (2, 'a', 'a');
insert into lob1 values (3, '', '');
insert into lob1 values (4, 'b', 'b');

create table es1 (
        id int,
        e2 enum('N', 'Y'),
        s3 set(' ', 'a', 'b'),
        vc4 varchar(100)
);

insert into es1 values (0, null, null, null);
insert into es1 values (100, null, 0, null);
# insert into es1 values (1, '', '', null);
# insert into es1 values (1, 0, 0, null);
insert into es1 values (2, 'Y', 'a', null);
insert into es1 values (103, 'N', 0, null);
update es1 set vc4=s3;

set timestamp=1648915200;

set @default_mode='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';
set @default_mode_emptystring_equal_null='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION,emptystring_equal_null';
set @oracle_mode='oracle';
set @oracle_mode_emptystring_equal_null='oracle,emptystring_equal_null';

set sql_mode=default;
--echo test ------------------------no emptystring_equal_null mode;--------------------------------
--disable_warnings
--echo test Numerical function

select name,abs(name) from test1;
select name,SQRT(name) from test1;
select name,MOD(name,1.5) from test1;
select name,CEIL(name) from test1;
select name,CEILING(name) from test1;
select name,FLOOR(name) from test1;
select name,RAND(name) from test1;
select name,ROUND(name) from test1;
select name,SIGN(name) from test1;
select name,POW(name,2) from test1;
select name,POWER(name,2) from test1;
select name,SIN(name) from test1;
select name,ASIN(name) from test1;
select name,COS(name) from test1;
select name,ACOS(name) from test1;
--replace_column 2 <0>
select name,TAN(name) from test1;
--replace_column 2 <0>
select name,ATAN(name) from test1;
--error 1690
select name,COT(name) from test1;

--echo test string function

select name,length(name) from test1;
select name,CONCAT(name) from test1;
select name,CONCAT(name,'2') from test1;
select name,concat(name,'') from test1;
select concat('a','') from dual;
select name,INSERT(name,1,1,'+') from test1;
select name,LOWER(name) from test1;
select name,UPPER(name) from test1;
select name,LEFT(name,1) from test1;
select name,RIGHT(name,1) from test1;
select name,TRIM(name) from test1;
select name,REPLACE(name,name,'') from test1;
select name,SUBSTRING(name,2) from test1;
select name,REVERSE(name) from test1;
select space('') from dual;

--echo test date time funciton

select str_to_date(name, '%m/%d/%Y') from test1;
select date_format(name, '%Y%m%d%H%i%s') from test1;
select time_to_sec(name) from test1;
select sec_to_time(name) from test1;
select makedate(name,31) from test1;
select maketime(name,15,31) from test1;
select unix_timestamp(name) from test1;
select from_unixtime(name) from test1;
select timestamp(name) from test1;
set @dt ='';
select date_add(@dt, interval 1 day);
select convert_tz(name, '+08:00', '+00:00') from test1;
select date_sub(name, interval 1 day) from test1;
select timestampadd(hour, -8, name) from test1;

--echo test oracle mode ||

set sql_mode=oracle;
select concat('a',null) from dual;
select concat('a','') from dual;
select 'a'||null from dual;
select 'a'||'' from dual;
set sql_mode=default;

--echo test statistical function
select MAX(name) from test1;
select MIN(name) from test1;
select COUNT(name) from test1;
select sum(name) from test1;
select AVG(name) from test1;
select least(c5,name) from test1 ; 

--echo test CAST
select CAST(name AS decimal) from test1;
select to_date(name,'yyyy') from test1;
select CAST(name AS date) from test1;
select CAST(name AS time) from test1;
select CAST(name as binary) from test1;
--error 3141
select CAST(name as json) from test1;

--echo test CONVERT

SELECT CONVERT(name , decimal) from test1;

--echo test IF ,IFNULL

select name,IF(name>0,'Y','N') from test1;
select name,IFNULL(name,'Y') from test1;
select nullif(null,'') from dual;
select nvl('',6) from dual;
select nvl(name,6) from test1;
select '' is  null from dual;
select '' is not  null from dual;
select ''  from dual;
select name is null from test1;
select name is not null from test1;

--echo test CASE WHEN THEN

SELECT CASE name WHEN -2 THEN 'name<0' WHEN 2 THEN 'name>0' ELSE 'other' END AS name from test1;

--echo test UNION

select name from test1 union select c5 from test1;

--echo test DISTINCT

select distinct name ,c5 from test1;
select distinct name,count(name),count(''),count(*) from test1 group by name;

--echo test JOIN

select * from test1 t  join test1 t1  on t.name = t1.name;
select * from test1 t  inner join test1 t1  on t.name = t1.name;
select * from test1 t  cross join test1 t1  on t.name = t1.name;
select * from test1 t  straight_join test1 t1  on t.name = t1.name;
select * from test1 t left join  test1 t1  on t.name = t1.name;
select * from test1 t right join  test1 t1  on t.name = t1.name;

--echo test INSERT INTO

--error 1062
insert into test1 select * from test1;

--echo test IN

select name from test1 where name not in (1,2,3);
select name from test1 where name  in (1,2,3);

--echo test replace

replace into test1(id,name,test_dec,test_blob,c5,c6) values(8, '', NULL, NULL, '', NULL);

--echo test SUBQUERY

SELECT * FROM test1 WHERE name = (SELECT name FROM test1 where id=5);

--echo test where

select name from test1 where name > '';
select name from test1 where name = '';

--echo test not null field c5 in where

select * from test1 where c5 is null;
select * from test1 where c5 is not null;

--echo test not null field c5 in update insert op

set sql_mode='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,ORACLE,STRICT_ALL_TABLES';
DROP PROCEDURE IF EXISTS test_oracle_cursor_loop;
DELIMITER //;
CREATE PROCEDURE test_oracle_cursor_loop() as
    cursor c is select id,c5 from test1 ; 
BEGIN
    for rec in  c loop
     update test1 set c5=rec.c5 where id=rec.id;
     select rec.id,rec.c5;
    END LOOP;
  END//
 DELIMITER ;//
call test_oracle_cursor_loop;
set sql_mode=default;
update test1 set c5='' where id=4;
INSERT INTO `test1` VALUES (11, '', NULL, NULL, '', NULL, NULL, NULL);

--echo test oracmp function

select add_months('2021-2-28',name) from test1;
select trunc(name) from test1;
select chr(name) from test1;
select name,decode(name, '',1,2),decode(name,null,1,2) from test1;
select name,c5,decode(name, c5, 'one', 2, 'two', 'other') from test1;
select name,dump(name) from test1;
select name,instr(name,'1') from test1;
select name,instrb(name,'1') from test1;
select name,length(name) from test1;
select name,lengthb(name) from test1;
explain select name,decode(name, '', 1, 2) from test1;
show warnings;
explain select group_concat(name order by id ASC) gc,name from test1 group by name;
show  warnings;
select group_concat(name order by id ASC) gc,name from test1 group by name;
explain  select listagg(name,';') within group (order by id ASC  ) AS TOAL,name from test1 group by name ;
show  warnings;
select listagg(name,';') within group (order by id ASC  ) AS TOAL,name from test1 group by name ;
select name,rpad_oracle(name,'1'),lpad_oracle(name,'1') from test1;
select name,rpad_oracle(name,5,'a'),lpad_oracle(name,0,'a') from test1;
select REGEXP_COUNT(name,'1',1,'c') from test1 ;
select REGEXP_COUNT(id, name,1,'c') from test1 ;
select trim(name) from test1;
select ltrim(name) from test1;
select rtrim(name) from test1;
select substr(name, -90, 7) from test1;
select substrb(name, -90, 7) from test1;
select to_char(name) from test1;
select to_date(name,'yyyy') from test1;
select to_number(name,'9999') from test1;
select to_number(name,'99.009') from test1;
select to_number(name) from test1;
select to_timestamp(name,'yy') from test1;
select translate(name,'','null') from test1;
select translate(name,'1','=1') from test1;
select trunc(name) from test1;
select vsize(name) from test1;
select group_concat(name) from test1;
explain select wm_concat(name) from test1;
show  warnings;
select wm_concat(name) from test1;

--echo  test group by 
select name from test1 group by name ;
select name,c8 from test1 group by name,c8 ;
select b.name from  (select * from test1) b left join test1 c on b.name=c.name group by b.name;
select name from (select * from test1 where id>3) b union select name from test1 group by name;
select * from test_view;
select c1,ca from (select name c1,  '' ca from test1 group by name) where ca is null;

--echo  test in and not in 
select name from test1 where name not in (1,2,'');
select name from test1 where name  in (1,2,null);

--echo  test set variable
set @a='';
select @a,name from test1 where name > @a;
select @a,name from test1 where @a is null;

--echo  test table index field
select * from t1 where c2 is null;
select * from t2 where c2 is null;
select * from t1 where c2 is not null;
select * from t2 where c2 is not null;
select i1,c2,descr "off, t1.c2=" from t1 where i1 > -99 and c2='';
select i1,c2,descr 'off, t2.c2=' from t2 where i1 > -99 and c2='';
select i1,c2,descr 'off, t1.c2 is null' from t1 where i1 > -99 and c2 is null;
select i1,c2,descr 'off, t2.c2 is null' from t2 where i1 > -99 and c2 is null;

--echo # test lob
select *,'esn=off' from lob1;
select listagg(c2,','),group_concat(c2) ,'esn=off' from lob1;

--echo # test enum/set
select *,s3+0,null+0,'esn=off' from es1;
select listagg(s3,','),group_concat(s3),'esn=off' from es1;

--echo test emptystring_equal_null change between prepare/execute.
set sql_mode=@default_mode;
prepare stmt1 from 'select c2,isnull(c2),''p-off,e-on'' from t1 where c2 is null ';

set sql_mode=@default_mode_emptystring_equal_null;
execute stmt1;
select c2,isnull(c2),'e-on' from t1 where c2 is null;

deallocate prepare stmt1;

set sql_mode=@default_mode_emptystring_equal_null;
prepare stmt1 from 'select c2,isnull(c2),''p-on,e-off'' from t1 where c2 is null '; 

set sql_mode=@default_mode;
execute stmt1;
select c2,isnull(c2),'e-off' from t1 where c2 is null;

deallocate prepare stmt1;

set sql_mode=@default_mode_emptystring_equal_null;
prepare stmt1 from 'select c2,isnull(c2),''p-on,e-on'' from t1 where c2 is null ';

execute stmt1;
select c2,isnull(c2),'e-on' from t1 where c2 is null;

deallocate prepare stmt1;

--echo test count/min/max
set sql_mode=@default_mode_emptystring_equal_null;
select count(''),min(''),max(''),count(null),min(null),max(null) from t1;
select name,count(name),count(''),count(*) from test1 group by name;
select '' '';

set sql_mode=@default_mode;
select count(''),min(''),max(''),count(null),min(null),max(null) from t1;
select name,count(name),count(''),count(*) from test1 group by name;
select '' '';

--echo test ------------------------default mode add emptystring_equal_null mode; ---------------------------------

set sql_mode=@default_mode_emptystring_equal_null;

--echo test Numerical function

select name,abs(name) from test1;
select name,SQRT(name) from test1;
select name,MOD(name,1.5) from test1;
select name,CEIL(name) from test1;
select name,CEILING(name) from test1;
select name,FLOOR(name) from test1;
select name,RAND(name) from test1;
select name,ROUND(name) from test1;
select name,SIGN(name) from test1;
select name,POW(name,2) from test1;
select name,POWER(name,2) from test1;
select name,SIN(name) from test1;
select name,ASIN(name) from test1;
select name,COS(name) from test1;
select name,ACOS(name) from test1;
--replace_column 2 <0>
select name,TAN(name) from test1;
--replace_column 2 <0>
select name,ATAN(name) from test1;
--replace_column 2 <0>
select name,COT(name) from test1;

--echo test string function

select name,length(name) from test1;
select name,CONCAT(name) from test1;
select name,CONCAT(name,'2') from test1;
select name,concat(name,'') from test1;
select concat('a','') from dual;
select name,INSERT(name,1,1,'+') from test1;
select name,LOWER(name) from test1;
select name,UPPER(name) from test1;
select name,LEFT(name,1) from test1;
select name,RIGHT(name,1) from test1;
select name,TRIM(name) from test1;
select name,REPLACE(name,name,'') from test1;
select name,SUBSTRING(name,2) from test1;
select name,REVERSE(name) from test1;
select space('') from dual;

--echo test date time funciton

select str_to_date(name, '%m/%d/%Y') from test1;
select date_format(name, '%Y%m%d%H%i%s') from test1;
select time_to_sec(name) from test1;
select sec_to_time(name) from test1;
select makedate(name,31) from test1;
select maketime(name,15,31) from test1;
select unix_timestamp(name) from test1;
select from_unixtime(name) from test1;
select timestamp(name) from test1;
set @dt ='';
select date_add(@dt, interval 1 day);
select convert_tz(name, '+08:00', '+00:00') from test1;
select date_sub(name, interval 1 day) from test1;
select timestampadd(hour, -8, name) from test1;

--echo test oracle mode ||

set sql_mode=@oracle_mode_emptystring_equal_null;
select concat('a',null) from dual;
select concat('a','') from dual;
select 'a'||null from dual;
select 'a'||'' from dual;
set sql_mode=@default_mode_emptystring_equal_null;

--echo test statistical function

select MAX(name) from test1;
select MIN(name) from test1;
select COUNT(name) from test1;
select sum(name) from test1;
select AVG(name) from test1;
select least(c5,name) from test1 ; 

--echo test CAST

SELECT CAST(name AS decimal) from test1;
select to_date(name,'yyyy') from test1;
select CAST(name AS date) from test1;
select CAST(name AS time) from test1;
select CAST(name as binary) from test1;
select CAST(name as json) from test1;

--echo test CONVERT

SELECT CONVERT(name , decimal) from test1;

--echo test IF ,IFNULL

select name,IF(name>0,'Y','N') from test1;
select name,IFNULL(name,'Y') from test1;
select nullif(null,'') from dual;
select nvl('',6) from dual;
select nvl(name,6) from test1;
select '' is  null from dual;
select '' is not  null from dual;
select ''  from dual;
select name is null from test1;
select name is not null from test1;

--echo test CASE WHEN THEN

SELECT CASE name WHEN -2 THEN 'name<0' WHEN 2 THEN 'name>0' ELSE 'other' END AS name from test1;

--echo test UNION

select name from test1 union select c5 from test1;

--echo test DISTINCT

select distinct name ,c5 from test1;
select distinct name,count(name),count(''),count(*) from test1 group by name;

--echo test JOIN
select * from test1 t  join test1 t1  on t.name = t1.name;
select * from test1 t  inner join test1 t1  on t.name = t1.name;
select * from test1 t  cross join test1 t1  on t.name = t1.name;
select * from test1 t  straight_join test1 t1 on t.name = t1.name;
select * from test1 t left join  test1 t1  on t.name = t1.name;
select * from test1 t right join  test1 t1  on t.name = t1.name;

--echo test INSERT INTO
--error 1062
insert into test1 select * from test1;

--echo test IN

select name from test1 where name not in (1,2,3);
select name from test1 where name  in (1,2,3);

--echo test replace

--error 1048
replace into test1(id,name,test_dec,test_blob,c5,c6) values(8, '', NULL, NULL, '', NULL);

--echo test SUBQUERY

SELECT * FROM test1 WHERE name = (SELECT name FROM test1 where id=5);

--echo test where

select name from test1 where name > '';
select name from test1 where name = '';

--echo test not null field c5 in where

select * from test1 where c5 is null;
select * from test1 where c5 is not null;

--echo test not null field c5 in update insert op

set sql_mode=@oracle_mode_emptystring_equal_null;
DROP PROCEDURE IF EXISTS test_oracle_cursor_loop;
DELIMITER //;
CREATE PROCEDURE test_oracle_cursor_loop() as
    cursor c is select id,c5 from test1 ; 
BEGIN
    for rec in  c loop
     update test1 set c5=rec.c5 where id=rec.id;
     select rec.id,rec.c5;
    END LOOP;
  END//
 DELIMITER ;//
--error 1048
call test_oracle_cursor_loop;
set sql_mode=@default_mode_emptystring_equal_null;

--error 1048
update test1 set c5='' where id=4;

--error 1048
INSERT INTO `test1` VALUES (11, '', NULL, NULL, '', NULL, NULL, NULL);

--echo test oracmp function

select add_months('2021-2-28',name) from test1;
select trunc(name) from test1;
select chr(name) from test1;
select name,decode(name, '',1,2),decode(name,null,1,2) from test1;
select name,c5,decode(name, c5, 'one', 2, 'two', 'other') from test1;
select name,dump(name) from test1;
select name,instr(name,'1') from test1;
select name,instrb(name,'1') from test1;
select name,length(name) from test1;
select name,lengthb(name) from test1;
explain select name,decode(name, '', 1, 2) from test1;
show warnings;
explain select group_concat(name order by id ASC) gc,name from test1 group by name;
show  warnings;
select group_concat(name order by id ASC) gc,name from test1 group by name;
explain  select listagg(name,';') within group (order by id ASC  ) AS TOAL,name from test1 group by name ;
show  warnings;
select listagg(name,';') within group (order by id ASC  ) AS TOAL,name from test1 group by name ;
select name,rpad_oracle(name,'1'),lpad_oracle(name,'1') from test1;
select name,rpad_oracle(name,5,'a'),lpad_oracle(name,0,'a') from test1;
select REGEXP_COUNT(name,'1',1,'c') from test1 ;
select REGEXP_COUNT(id, name,1,'c') from test1 ;
select trim(name) from test1;
select ltrim(name) from test1;
select rtrim(name) from test1;
select substr(name, -90, 7) from test1;
select substrb(name, -90, 7) from test1;
select to_char(name) from test1;
select to_date(name,'yyyy') from test1;
select to_number(name,'9999') from test1;
select to_number(name,'99.009') from test1;
select to_number(name) from test1;
select to_timestamp(name,'yy') from test1;
select translate(name,'','null') from test1;
select translate(name,'1','=1') from test1;
select trunc(name) from test1;
select vsize(name) from test1;
select group_concat(name) from test1;
explain select wm_concat(name) from test1;
show  warnings;
select wm_concat(name) from test1;

--echo  test group by 
select name from test1 group by name ;
select name,c8 from test1 group by name,c8 ;
select b.name from  (select * from test1) b left join test1 c on b.name=c.name group by b.name;
select name from (select * from test1 where id>3) b union select name from test1 group by name;
select * from test_view;
select c1,ca from (select name c1,  '' ca from test1 group by name) where ca is null;

--echo  test in and not in 
select name from test1 where name not in (1,2,'');
select name from test1 where name  in (1,2,null);

--echo  test set variable
set @a='';
select @a,name from test1 where name > @a;
select @a,name from test1 where @a is null;

--echo  test table index field
select * from t1 where c2 is null;
select * from t2 where c2 is null;
select * from t1 where c2 is not null;
select * from t2 where c2 is not null;
select i1,c2,descr "off, t1.c2=" from t1 where i1 > -99 and c2='';
select i1,c2,descr 'off, t2.c2=' from t2 where i1 > -99 and c2='';
select i1,c2,descr 'off, t1.c2 is null' from t1 where i1 > -99 and c2 is null;
select i1,c2,descr 'off, t2.c2 is null' from t2 where i1 > -99 and c2 is null;

--echo test ------------------------oracle mode add  emptystring_equal_null ---------------------------------

set sql_mode=@oracle_mode_emptystring_equal_null;

--echo test Numerical function

select name,abs(name) from test1;
select name,SQRT(name) from test1;
select name,MOD(name,1.5) from test1;
select name,CEIL(name) from test1;
select name,CEILING(name) from test1;
select name,FLOOR(name) from test1;
select name,RAND(name) from test1;
select name,ROUND(name) from test1;
select name,SIGN(name) from test1;
select name,POW(name,2) from test1;
select name,POWER(name,2) from test1;
select name,SIN(name) from test1;
select name,ASIN(name) from test1;
select name,COS(name) from test1;
select name,ACOS(name) from test1;
--replace_column 2 <0>
select name,TAN(name) from test1;
--replace_column 2 <0>
select name,ATAN(name) from test1;
--replace_column 2 <0>
select name,COT(name) from test1;

--echo test string function

select name,length(name) from test1;
select name,CONCAT(name) from test1;
select name,CONCAT(name,'2') from test1;
select name,concat(name,'') from test1;
select concat('a','') from dual;
select name,INSERT(name,1,1,'+') from test1;
select name,LOWER(name) from test1;
select name,UPPER(name) from test1;
select name,LEFT(name,1) from test1;
select name,RIGHT(name,1) from test1;
select name,TRIM(name) from test1;
select name,REPLACE(name,name,'') from test1;
select name,SUBSTRING(name,2) from test1;
select name,REVERSE(name) from test1;
select space('') from dual;

--echo test date time funciton

select str_to_date(name, '%m/%d/%Y') from test1;
select date_format(name, '%Y%m%d%H%i%s') from test1;
select time_to_sec(name) from test1;
select sec_to_time(name) from test1;
select makedate(name,31) from test1;
select maketime(name,15,31) from test1;
select unix_timestamp(name) from test1;
select from_unixtime(name) from test1;
select timestamp(name) from test1;
set @dt ='';
select date_add(@dt, interval 1 day);
select convert_tz(name, '+08:00', '+00:00') from test1;
select date_sub(name, interval 1 day) from test1;
select timestampadd(hour, -8, name) from test1;

--echo test oracle mode ||

select concat('a',null) from dual;
select concat('a','') from dual;
select 'a'||null from dual;
select 'a'||'' from dual;

--echo test statistical function

select MAX(name) from test1;
select MIN(name) from test1;
select COUNT(name) from test1;
select sum(name) from test1;
select AVG(name) from test1;
select least(c5,name) from test1 ; 

--echo test CAST

SELECT CAST(name AS decimal) from test1;
select to_date(name,'yyyy') from test1;
select CAST(name AS date) from test1;
select CAST(name AS time) from test1;
select CAST(name as binary) from test1;
select CAST(name as json) from test1;

--echo test CONVERT

SELECT CONVERT(name , decimal) from test1;

--echo test IF ,IFNULL

select name,IF(name>0,'Y','N') from test1;
select name,IFNULL(name,'Y') from test1;
select nullif(null,'') from dual;
select nvl('',6) from dual;
select nvl(name,6) from test1;
select '' is  null from dual;
select '' is not  null from dual;
select ''  from dual;
select name is null from test1;
select name is not null from test1;

--echo test CASE WHEN THEN

SELECT CASE name WHEN -2 THEN 'name<0' WHEN 2 THEN 'name>0' ELSE 'other' END AS name from test1;

--echo test UNION

select name from test1 union select c5 from test1;

--echo test DISTINCT

select distinct name ,c5 from test1;

--echo test JOIN

select * from test1 t  join test1 t1  on t.name = t1.name;
select * from test1 t  inner join test1 t1  on t.name = t1.name;
select * from test1 t  cross join test1 t1  on t.name = t1.name;
select * from test1 t  straight_join test1 t1 on t.name = t1.name;
select * from test1 t left join  test1 t1  on t.name = t1.name;
select * from test1 t right join  test1 t1  on t.name = t1.name;

--echo test INSERT INTO

--error 1062
insert into test1 select * from test1;

--echo test IN

select name from test1 where name not in (1,2,3);
select name from test1 where name  in (1,2,3);

--echo test replace

--error 1048
replace into test1(id,name,test_dec,test_blob,c5,c6) values(8, '', NULL, NULL, '', NULL);

--echo test SUBQUERY

SELECT * FROM test1 WHERE name = (SELECT name FROM test1 where id=5);

--echo test where

select name from test1 where name > '';
select name from test1 where name = '';

--echo test not null field c5 in where

select * from test1 where c5 is null;
select * from test1 where c5 is not null;

--echo test not null field c5 in update insert op

DROP PROCEDURE IF EXISTS test_oracle_cursor_loop;
DELIMITER //;
CREATE PROCEDURE test_oracle_cursor_loop() as
    cursor c is select id,c5 from test1 ; 
BEGIN
    for rec in  c loop
     update test1 set c5=rec.c5 where id=rec.id;
     select rec.id,rec.c5;
    END LOOP;
  END//
 DELIMITER ;//
--error 1048
call test_oracle_cursor_loop;

--error 1048
update test1 set c5='' where id=4;

--error 1048
INSERT INTO `test1` VALUES (11, '', NULL, NULL, '', NULL, NULL, NULL);

--echo test oracmp function

select add_months('2021-2-28',name) from test1;
select trunc(name) from test1;
select chr(name) from test1;
select name,c5,decode(name, c5, 'one', 2, 'two', 'other') from test1;
select name,dump(name) from test1;
select name,instr(name,'1') from test1;
select name,instrb(name,'1') from test1;
select name,length(name) from test1;
select name,lengthb(name) from test1;
explain select group_concat(name order by id ASC) gc,name from test1 group by name;
show  warnings;
select group_concat(name order by id ASC) gc,name from test1 group by name;
explain  select listagg(name,';') within group (order by id ASC  ) AS TOAL,name from test1 group by name ;
show  warnings;
select listagg(name,';') within group (order by id ASC  ) AS TOAL,name from test1 group by name ;
select name,rpad_oracle(name,'1'),lpad_oracle(name,'1') from test1;
select name,rpad_oracle(name,5,'a'),lpad_oracle(name,0,'a') from test1;
select REGEXP_COUNT(name,'1',1,'c') from test1 ;
select REGEXP_COUNT(id, name,1,'c') from test1 ;
select trim(name) from test1;
select ltrim(name) from test1;
select rtrim(name) from test1;
select substr(name, -90, 7) from test1;
select substrb(name, -90, 7) from test1;
select to_char(name) from test1;
select to_date(name,'yyyy') from test1;
select to_number(name,'9999') from test1;
select to_number(name,'99.009') from test1;
select to_number(name) from test1;
select to_timestamp(name,'yy') from test1;
select translate(name,'','null') from test1;
select translate(name,'1','=1') from test1;
select trunc(name) from test1;
select vsize(name) from test1;
select group_concat(name) from test1;
explain select wm_concat(name) from test1;
show  warnings;
select wm_concat(name) from test1;

--echo  test group by 
select name from test1 group by name ;
select name,c8 from test1 group by name,c8 ;
select b.name from  (select * from test1) b left join test1 c on b.name=c.name group by b.name;
select name from (select * from test1 where id>3) b union select name from test1 group by name;
select * from test_view;

--echo  test in and not in 
select name from test1 where name not in (1,2,'');
select name from test1 where name  in (1,2,null);

--echo  test set variable
set @a='';
select @a,name from test1 where name > @a;
select @a,name from test1 where @a is null;

--echo  test table index field
select * from t1 where c2 is null;
select * from t2 where c2 is null;
select * from t1 where c2 is not null;
select * from t2 where c2 is not null;
select i1,c2,descr "on, t1.c2=" from t1 where i1 > -99 and c2='';
select i1,c2,descr 'on, t2.c2=' from t2 where i1 > -99 and c2='';
select i1,c2,descr 'on, t1.c2 is null' from t1 where i1 > -99 and c2 is null;
select i1,c2,descr 'on, t2.c2 is null' from t2 where i1 > -99 and c2 is null;

--echo # test lob
select *,'esn=on' from lob1;
select listagg(c2,','),group_concat(c2) ,'esn=on' from lob1;

--echo # test enum/set
select *,s3+0,null+0,'esn=on' from es1;
select listagg(s3,','),group_concat(s3),'esn=on' from es1;

set sql_mode=default;

--echo current behavior
create table t3 as select * from t1;

--echo select will output as the data is, no ''/null translation
select *,'off,select' from t3;
set sql_mode=@default_mode_emptystring_equal_null;
select *,'on,select' from t3;
set sql_mode=@default_mode;

--echo update may do ''/null translation
set sql_mode=@default_mode_emptystring_equal_null;
update t3 set c2=c2;
select *,'on,update c2=c2' from t3;
set sql_mode=@default_mode;

--echo create table x select * from xxx
set sql_mode=@default_mode_emptystring_equal_null;
drop table t3;
create table t3 as select * from t1;
select *,'on,create as select' from t3;

--echo analytic function
select id,name,group_concat(name) over (partition by id) from test2;
explain select id,name,group_concat(name) over (partition by id) from test2;
show warnings;
select id,name,wm_concat(name) over (partition by id) from test2;
explain select id,name,wm_concat(name) over (partition by id) from test2;
show warnings;
select id,name,listagg(name) over (partition by id) from test2;
explain select id,name,listagg(name) over (partition by id) from test2;
show warnings;
select id,name,group_concat(name order by name) over (partition by id) from test2;
explain select id,name,group_concat(name order by name) over (partition by id) from test2;
show warnings;
select id,name,wm_concat(name order by name) over (partition by id) from test2;
explain select id,name,wm_concat(name order by name) over (partition by id) from test2;
show warnings;
select id,name,listagg(name) within group (order by name) over (partition by id) from test2;
explain select id,name,listagg(name) within group (order by name) over (partition by id) from test2;
show warnings;

--enable_warnings

--echo  procedure、function
set sql_mode=@oracle_mode;
DELIMITER //;
create or replace procedure p2 as
ib int :=10;
begin
  select c2,isnull(c2),'p-on,e-off' from t1 where c2 is null ;
end //
DELIMITER ;//
set sql_mode=@oracle_mode_emptystring_equal_null;
call p2();

set sql_mode=@oracle_mode_emptystring_equal_null;
DELIMITER //;
create or replace procedure p2 as
ib int :=10;
begin
  select c2,isnull(c2),'p-on,e-off' from t1 where c2 is null ;
end//
DELIMITER ;//
set sql_mode=@default_mode;
call p2();

set sql_mode=@oracle_mode;
DELIMITER //;
create or replace function f1() return int deterministic is  
f_var int;  
begin  
select '' is null into f_var;
return f_var;  
end//
DELIMITER ;//
set sql_mode=@oracle_mode_emptystring_equal_null;
select f1();

set sql_mode=@oracle_mode_emptystring_equal_null;
DELIMITER //;
create or replace function f1() return int deterministic is  
f_var int;  
begin  
select '' is null into f_var;
return f_var;  
end//
DELIMITER ;//
set sql_mode=@default_mode;
select f1();

set sql_mode=default;
CREATE TABLE t_bug9197 (
  i1 int,
  c2 varchar(16) default '',
  c3 blob,
  c4 char(16) default '',
  descr VARCHAR(16),
  key(c2),
  key(c3(16)),
  key(c4));
INSERT INTO t_bug9197 VALUES (1, '', '', '', 'empty string');
INSERT INTO t_bug9197 VALUES (-1, NULL, NULL, NULL, 'null');
INSERT INTO t_bug9197 VALUES (2, '', '', '', 'empty string 2');
INSERT INTO t_bug9197 VALUES (-2, NULL, NULL, NULL, 'null 2');
insert into t_bug9197 values (3, '22', '22', '22', '22');
set sql_mode=emptystring_equal_null;
select * from t_bug9197 where c2 is null;
select * from t_bug9197 where c3 is null;
select /*+ no_index(a) */ * from t_bug9197 a where c3 is null; 
select * from t_bug9197 where c4 is null;

--echo bug
select * from t_bug9197 where c2 = '';
select * from t_bug9197 where c2 >= '';
select * from t_bug9197 where c2 <= '';
select * from t_bug9197 where c2 = '\0';
select * from t_bug9197 where c2 >= '\0';
select * from t_bug9197 where c2 <= '\0';
select * from t_bug9197 where c2 != '\0';
select * from t_bug9197 where c2 != '0';
select * from t_bug9197 where c2 is null or (c2 >='' and c2 <= 'aa');
select * from t_bug9197 where c2 is null or c2 = '22'; 
select * from t_bug9197 where c2 is null or (c2 >='' or c2 >= '22');
select * from t_bug9197 where c2 >='' or c2 >= '22';
select * from t_bug9197 where c2 >='' or c2 <= '22';

select * from t_bug9197 where c3 = '';
select * from t_bug9197 where c3 >= '';
select * from t_bug9197 where c3 <= '';
select * from t_bug9197 where c3 = '\0';
select * from t_bug9197 where c3 >= '\0';
select * from t_bug9197 where c3 <= '\0';
select * from t_bug9197 where c3 != '\0';
select * from t_bug9197 where c3 != '0';
select * from t_bug9197 where c3 is null or (c3 >='' and c3 <= 'aa');
select * from t_bug9197 where c3 is null or c3 = '22'; 
select * from t_bug9197 where c3 is null or (c3 >='' or c3 >= '22');
select * from t_bug9197 where c3 >='' or c3 >= '22';
select * from t_bug9197 where c3 >='' or c3 <= '22';
select * from t_bug9197 where c3 ='\0' or c3 is null or c2 = '22';

select * from t_bug9197 where c2 is null or c2='22';
select * from t_bug9197 where c3 is null or c3='22';
select * from t_bug9197 where c2 is null or c3='22';
select * from t_bug9197 where c3 is null or c2='22';
select /*+ no_index(a) */ * from t_bug9197 a where c2 is null or c2='22';
select /*+ no_index(a) */ * from t_bug9197 a where c3 is null or c3='22';
select /*+ no_index(a) */ * from t_bug9197 a where c2 is null or c3='22';
select /*+ no_index(a) */ * from t_bug9197 a where c3 is null or c2='22';

select * from t_bug9197 where c2 is null or c2='22' intersect select * from t_bug9197 where c2 is null or c2='22';
select * from t_bug9197 where c3 is null or c3='22' intersect select * from t_bug9197 where c3 is null or c3='22';
select * from t_bug9197 where c2 is null or c2='22' intersect select * from t_bug9197 where c3 is null or c3='22';

select * from t_bug9197 where c2 is null or c2='22' minus select * from t_bug9197 where c2 is null or c2='22';
select * from t_bug9197 where c3 is null or c3='22' minus select * from t_bug9197 where c3 is null or c3='22';
select * from t_bug9197 where c2 is null or c2='22' minus select * from t_bug9197 where c3 is null or c3='22';

select * from t_bug9197 where c2 is null or c2='' or c2='22';
select * from t_bug9197 where c2 is null or c2='\0' or c2='22';


set sql_mode=default;
create table t_range (
  pk int primary key,
  c1 varchar(8),
  c2 varchar(8),
  c3 varchar(8),
  key(c1,c2,c3)
);
insert into t_range values (11,'','','');
insert into t_range values (12,'','',NULL);
insert into t_range values (13,'',NULL,'');
insert into t_range values (14,'',NULL,NULL);
insert into t_range values (15,NULL,'','');
insert into t_range values (16,NULL,'',NULL);
insert into t_range values (17,NULL,NULL,'');
insert into t_range values (18,NULL,NULL,NULL);
insert into t_range values (19,'','aa','');
insert into t_range values (20,NULL,'aa',NULL);
insert into t_range values (21,'','bb','');
insert into t_range values (22,NULL,'bb',NULL);
set sql_mode=emptystring_equal_null;
select * from t_range where c1 is null and  (c2 >= 'bb') and c3 is null;
select * from t_range where c1 is null and  (c2 between 'aa' and 'bb') and c3 is null;
select * from t_range where c1 is null and  (c2 <= 'bb') and c3 is null;
select * from t_range where c1 is null and  (c2 = 'aa' and c2 <='bb') and c3 is null;
select * from t_range where c1 is null and  (c2 > 'aa' and c2 <='bb') and c3 is null;
select * from t_range where c1 is null and  (c2 in (null,'aa','bb')) and c3 is null;
select * from t_range where (c1 ='\0' or c1 is null) and (c2 >= 'bb') and (c3 ='\0' or c3 is null) ;
select * from t_range where (c1 ='\0' or c1 is null) and (c2 <= 'bb') and (c3 ='\0' or c3 is null) ;

#bugfix 16975
set sql_mode='oracle,emptystring_equal_null';
CREATE GLOBAL TEMPORARY TABLE gt_employee (
  id int PRIMARY KEY AUTO_INCREMENT,
   name VARCHAR(16),
   deptId int,
   i int INVISIBLE,
   `SHAPE` geometry NOT NULL,
   `sidec` INT(11) GENERATED ALWAYS AS (SQRT(((`i` * `deptId`) + (`i` * `deptId`)))) VIRTUAL
) on commit delete rows ENGINE=innodb AUTO_INCREMENT=10;

CREATE TABLE employee (
   `id1` geometry NOT NULL,
   `id2` geometry,
   `id3` blob NOT NULL,
   `id4` blob
);

CREATE TEMPORARY TABLE t_employee (
   `id1` geometry NOT NULL,
   `id2` geometry,
   `id3` blob NOT NULL,
   `id4` blob
);

drop table gt_employee;
drop table employee;
drop table t_employee;

set sql_mode='emptystring_equal_null';
CREATE TABLE employee (
   `id1` geometry NOT NULL,
   `id2` geometry,
   `id3` blob NOT NULL,
   `id4` blob
);

CREATE TEMPORARY TABLE t_employee (
   `id1` geometry NOT NULL,
   `id2` geometry,
   `id3` blob NOT NULL,
   `id4` blob
);

drop table employee;
drop table t_employee;

CREATE TABLE employee ( `id` geometry NOT NULL );
drop table employee;
CREATE TABLE employee ( `id` blob NOT NULL );
drop table employee;
CREATE TABLE employee ( `id` varchar(32) NOT NULL );
drop table employee;
CREATE TABLE employee ( `id` char(32) NOT NULL );
drop table employee;
CREATE TABLE employee ( `id` set('a', 'b') NOT NULL );
drop table employee;
CREATE TABLE employee ( `id` int NOT NULL );
drop table employee;
CREATE TABLE employee ( `id` enum('N', 'Y') NOT NULL );
drop table employee;
CREATE TABLE employee ( `id` geometry  );
drop table employee;
CREATE TABLE employee ( `id` blob  );
drop table employee;
CREATE TABLE employee ( `id` varchar(32)  );
drop table employee;
CREATE TABLE employee ( `id` char(32)  );
drop table employee;
CREATE TABLE employee ( `id` set('a', 'b')  );
drop table employee;
CREATE TABLE employee ( `id` int );
drop table employee;
CREATE TABLE employee ( `id` enum('N', 'Y') );
drop table employee;

#bugfix 9515
set sql_mode=default;
drop table t1;
create table t1 (
  pk int primary key,
  c1 varchar(8),
  c2 varchar(8),
  c3 varchar(8),
  key(c1,c2,c3)
);
insert into t1 select * from t_range order by pk;
set sql_mode=emptystring_equal_null;

select pk,c1,c2,c3 from t1 where c1 is null and  (c2 between 'aa' and 'bb') and c3 is null;
alter table t1 add column hidden_pk bigint not null unique  auto_increment first;
select pk,c1,c2,c3,hidden_pk from t1 where c1 is null and  (c2 between 'aa' and 'bb') and c3 is null; 
alter table t1 drop column hidden_pk;
select pk,c1,c2,c3 from t1 where c1 is null and  (c2 between 'aa' and 'bb') and c3 is null;

drop procedure if exists test_oracle_cursor_loop;
drop procedure if exists p2;
drop function  if exists f1;
drop table es1;
drop table lob1;
drop table test2;
drop table test1;
drop view  test_view;
drop table t1;
drop table t2;
drop table t3;
drop table t_bug9197;

--echo ###test bug 9699###
set sql_mode=default;
CREATE TABLE `t1` (
  `c1` int NOT NULL AUTO_INCREMENT,
  `c2` datetime DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`c1`)
);

CREATE TABLE `t2` (
  `c1` int AUTO_INCREMENT PRIMARY KEY,
  `c2` varchar(100)
);

insert into t2 values(1, '2020-01-01 00:00:00'), (2, ''), (3, null),(4, '\0');
--replace_result $MYSQLTEST_VARDIR MYSQLTEST_VARDIR 
eval select * from t2 into outfile '$MYSQLTEST_VARDIR/tmp/t1' FIELDS TERMINATED BY ',';
drop table t2;
delete from t1;

set sql_mode=emptystring_equal_null;
--replace_result $MYSQLTEST_VARDIR MYSQLTEST_VARDIR
eval LOAD DATA INFILE '$MYSQLTEST_VARDIR/tmp/t1' INTO TABLE t1 FIELDS TERMINATED BY ',';

set sql_mode=default;
select * from t1;

delete from t1;
alter table t1 add column c3 varchar(100);

--echo [test set = '']
set sql_mode=emptystring_equal_null;
--replace_result $MYSQLTEST_VARDIR MYSQLTEST_VARDIR
eval LOAD DATA INFILE '$MYSQLTEST_VARDIR/tmp/t1' INTO TABLE t1 FIELDS TERMINATED BY ','(c1, c2) set c3 = '';

set sql_mode=default;
select * from t1;
delete from t1;

--echo [test set with func contains '']
set sql_mode=emptystring_equal_null;
--replace_result $MYSQLTEST_VARDIR MYSQLTEST_VARDIR
eval LOAD DATA INFILE '$MYSQLTEST_VARDIR/tmp/t1' INTO TABLE t1 FIELDS TERMINATED BY ','(c1, c2) set c3 = concat('', 'aaaa');

set sql_mode=default;
select * from t1;
delete from t1;

--echo [test load with user_var]
set sql_mode=emptystring_equal_null;
--replace_result $MYSQLTEST_VARDIR MYSQLTEST_VARDIR
eval LOAD DATA INFILE '$MYSQLTEST_VARDIR/tmp/t1' INTO TABLE t1 FIELDS TERMINATED BY ','(c1, @var1) set c2 = @var1, c3 = concat(@var1, 'aaaa');

set sql_mode=default;
select * from t1;

remove_file $MYSQLTEST_VARDIR/tmp/t1;
drop table t1;
# bug9792

set sql_mode=default;
create table t1 (
  pk int primary key,
  c1 varchar(8),
  c2 varchar(8),
  c3 varchar(8),
  key(c1)
) character set utf8mb4 collate utf8mb4_0900_ai_ci;
create table t2 (
  pk int primary key,
  c1 varchar(8),
  c2 varchar(8),
  c3 varchar(8),
  key(c1(1))
) character set utf8mb4 collate utf8mb4_0900_ai_ci;
create table t3 (
  pk int primary key,
  c1 varchar(8),
  c2 varchar(8),
  c3 varchar(8),
  key(c1)
) character set utf8mb4 collate utf8mb4_unicode_ci;
create table t4 (
  pk int primary key,
  c1 varchar(8),
  c2 varchar(8),
  c3 varchar(8),
  key key1(c1(1)),
  key key2(c1)
) character set utf8mb4 collate utf8mb4_unicode_ci;
insert into t1 select * from t_range order by pk;
insert into t1 values (23,NULL,'bb','');
insert into t1 values (24,'\0','bb','');
insert into t1 values (25,'c','bb','c');
insert into t1 values (26,'aa','bb',NULL);
insert into t1 values (27,'bb','bb','');
insert into t1 values (28,'\0a','bb','');
insert into t2 select * from t1;
insert into t3 select * from t1;
insert into t4 select * from t1;

select pk,hex(c1),hex('\0 \0 '),c2,c3 from t1 where c1 = '\0 \0 ';
select pk,hex(c1),hex('\0 \0 '),c2,c3 from t2 where c1 = '\0 \0 ';
select pk,hex(c1),hex('\0 \0 '),c2,c3 from t3 where c1 = '\0 \0 ';
select pk,hex(c1),hex('\0 \0 '),c2,c3 from t4 where c1 = '\0 \0 ';

select pk,hex(c1),hex('\0 '),c2,c3 from t1 where c1 = '\0 ';
select pk,hex(c1),hex('\0 '),c2,c3 from t2 where c1 = '\0 ';
select pk,hex(c1),hex('\0 '),c2,c3 from t3 where c1 = '\0 ';
select pk,hex(c1),hex('\0 '),c2,c3 from t4 where c1 = '\0 ';

select pk,hex(c1),hex('\0'),c2,c3 from t1 where c1 = '\0';
select pk,hex(c1),hex('\0'),c2,c3 from t2 where c1 = '\0';
select pk,hex(c1),hex('\0'),c2,c3 from t3 where c1 = '\0';
select pk,hex(c1),hex('\0'),c2,c3 from t4 where c1 = '\0';
select pk,hex(c1),hex('a      '),c2,c3 from t4 force index(key1) where c1 = 'a      ';
select pk,hex(c1),hex('a      '),c2,c3 from t4 force index(key2) where c1 = 'a      ';
select pk,hex(c1),hex('      a'),c2,c3 from t4 force index(key1) where c1 = '      a';
select pk,hex(c1),hex('      a'),c2,c3 from t4 force index(key2) where c1 = '      a';
select pk,hex(c1),hex('      a    '),c2,c3 from t4 force index(key1) where c1 = '      a    ';
select pk,hex(c1),hex('      a    '),c2,c3 from t4 force index(key2) where c1 = '      a    ';
select pk,hex(c1),hex('      \0'),c2,c3 from t4 force index(key1) where c1 = '      \0';
select pk,hex(c1),hex('      \0'),c2,c3 from t4 force index(key2) where c1 = '      \0';
select pk,hex(c1),hex('      \0    '),c2,c3 from t4 force index(key1) where c1 = '      \0    ';
select pk,hex(c1),hex('      \0    '),c2,c3 from t4 force index(key2) where c1 = '      \0    ';


set sql_mode=emptystring_equal_null;

select pk,hex(c1),hex('\0 \0 '),c2,c3 from t1 where c1 = '\0 \0 ';
select pk,hex(c1),hex('\0 \0 '),c2,c3 from t2 where c1 = '\0 \0 ';
select pk,hex(c1),hex('\0 \0 '),c2,c3 from t3 where c1 = '\0 \0 ';
select pk,hex(c1),hex('\0 \0 '),c2,c3 from t4 where c1 = '\0 \0 ';

select pk,hex(c1),hex('\0 '),c2,c3 from t1 where c1 = '\0 ';
select pk,hex(c1),hex('\0 '),c2,c3 from t2 where c1 = '\0 ';
select pk,hex(c1),hex('\0 '),c2,c3 from t3 where c1 = '\0 ';
select pk,hex(c1),hex('\0 '),c2,c3 from t4 where c1 = '\0 ';

select pk,hex(c1),hex('\0'),c2,c3 from t1 where c1 = '\0';
select pk,hex(c1),hex('\0'),c2,c3 from t2 where c1 = '\0';
select pk,hex(c1),hex('\0'),c2,c3 from t3 where c1 = '\0';
select pk,hex(c1),hex('\0'),c2,c3 from t4 where c1 = '\0';

select pk,hex(c1),hex('a      '),c2,c3 from t4 force index(key1) where c1 = 'a      ';
select pk,hex(c1),hex('a      '),c2,c3 from t4 force index(key2) where c1 = 'a      ';
select pk,hex(c1),hex('      a'),c2,c3 from t4 force index(key1) where c1 = '      a';
select pk,hex(c1),hex('      a'),c2,c3 from t4 force index(key2) where c1 = '      a';
select pk,hex(c1),hex('      a    '),c2,c3 from t4 force index(key1) where c1 = '      a    ';
select pk,hex(c1),hex('      a    '),c2,c3 from t4 force index(key2) where c1 = '      a    ';
select pk,hex(c1),hex('      \0'),c2,c3 from t4 force index(key1) where c1 = '      \0';
select pk,hex(c1),hex('      \0'),c2,c3 from t4 force index(key2) where c1 = '      \0';
select pk,hex(c1),hex('      \0    '),c2,c3 from t4 force index(key1) where c1 = '      \0    ';
select pk,hex(c1),hex('      \0    '),c2,c3 from t4 force index(key2) where c1 = '      \0    ';

select pk,hex(c1),c2,c3 from t1 where c1 =to_char('\0');

--disable_warnings
explain select pk,hex(c1),hex('\0'),c2,c3 from t4 where c1 = '\0';
explain select pk,hex(c1),hex('\0'),c2,c3 from t4 where c1 = ' ';
explain select pk,hex(c1),hex('\0'),c2,c3 from t4 where c1 = '\0 ';
explain select pk,hex(c1),hex('\0'),c2,c3 from t4 where c1 = ' a';
explain select pk,hex(c1),hex('\0'),c2,c3 from t4 where c1 = 1;
explain select pk,c1,c2,c3 from t1 where c1 =to_char('\0');
set sql_mode=default;
explain select pk,hex(c1),hex('\0'),c2,c3 from t4 where c1 = 1;
explain select pk,hex(c1),c2,c3 from t1 where c1 =to_char('\0');
--enable_warnings

drop table t_range,t1,t2,t3,t4;
