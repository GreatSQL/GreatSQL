
set sql_mode="oracle";

select @@sql_mode;

select 'test'|| 'test2';

create table "table" (id int primary key, "char" char);

drop table "table";

create table t1(id int);
select count (*) from t1;

--error ER_DATA_OUT_OF_RANGE
select to_number('11') || to_number('aa');

set sql_mode='';
--error 1064
select count (*) from t1;

drop table t1;

set sql_mode=oracle;
--error ER_DIVISION_BY_ZERO
select 1/0;

set shrink_sql_mode=ERROR_FOR_DIVISION_BY_ZERO;
select 1/0;
show  variables like '%sql_mode%';


--echo "global set sql_mode and then set shrink_sql_mode"
set global sql_mode=oracle;
set global shrink_sql_mode=ERROR_FOR_DIVISION_BY_ZERO;

show global variables like '%sql_mode%';

disconnect default;
connect(default, localhost, root,,);

show global variables like '%sql_mode%';
show variables like '%sql_mode%';

select 1/0;

--echo "reset sql_mode"
set global sql_mode=default;
set global shrink_sql_mode=default;
show global variables like '%sql_mode%';


--echo "global set shrink_sql_mode and then set sql_mode  "
set global sql_mode=oracle;
set global shrink_sql_mode=ERROR_FOR_DIVISION_BY_ZERO;

show global variables like '%sql_mode%';

disconnect default;
connect(default, localhost, root,,);

show global variables like '%sql_mode%';
show variables like '%sql_mode%';

select 1/0;

--echo "reset sql_mode"
set global sql_mode=default;
set global shrink_sql_mode=default;
show global variables like '%sql_mode%';



set global sql_mode = oracle;
show global variables like '%sql_mode%';

set persist shrink_sql_mode=ERROR_FOR_DIVISION_BY_ZERO;

show variables like '%sql_mode%';
show global variables like '%sql_mode%';

SELECT * FROM performance_schema.persisted_variables;

--echo # Restart server
--exec echo "wait" > $MYSQLTEST_VARDIR/tmp/mysqld.1.expect
--shutdown_server
--source include/wait_until_disconnected.inc
--exec echo "restart" > $MYSQLTEST_VARDIR/tmp/mysqld.1.expect
--enable_reconnect
--source include/wait_until_connected_again.inc

--echo # after restart
set sql_mode=oracle;
select 1/0;

show variables like '%sql_mode%';
show global variables like '%sql_mode%';

set shrink_sql_mode='';
--error ER_DIVISION_BY_ZERO
select 1/0;


--echo # test proc creation.
delimiter $$;

set sql_mode=oracle $$
set shrink_sql_mode='STRICT_TRANS_TABLES,STRICT_ALL_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION,ONLY_FULL_GROUP_BY' $$

delimiter ;$$

 
--echo "clean up"
set global sql_mode=default;
set global shrink_sql_mode=default;
RESET PERSIST;


--echo "create old oracle_mode show upgrade note"
delimiter $$;
set sql_mode=oracle $$
set shrink_sql_mode='STRICT_TRANS_TABLES,STRICT_ALL_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION,ONLY_FULL_GROUP_BY' $$

delimiter ;$$

set shrink_sql_mode='';
set sql_mode=oracle;

set shrink_sql_mode='SYSDATE_IS_NOW';

set sql_mode=oracle;

select @@sql_mode;

--error ER_WRONG_VALUE_FOR_VAR
set shrink_sql_mode=oracle;
--error ER_WRONG_VALUE_FOR_VAR
set shrink_sql_mode=ansi;
--error ER_WRONG_VALUE_FOR_VAR
set shrink_sql_mode=traditional;

set shrink_sql_mode='';
set sql_mode=default;
select 'aa'|| 1*2;
set sql_mode=oracle;
select 'aa'|| 1*2;

select TABLE_NAME from information_schema.tables where TABLE_NAME like 'innodb'|| '_redo' || '_log%';

--let $db= `SELECT DATABASE()`
create table t1 (id int);
eval select TABLE_NAME  from information_schema.tables where TABLE_SCHEMA = '$db' and  TABLE_NAME NOT like 'innodb'|| '_redo' || '_log%' ;

drop table t1;

--error ER_WRONG_VALUE_FOR_VAR
set shrink_sql_mode='PIPES_AS_CONCAT';


set shrink_sql_mode='ANSI_QUOTES';
set sql_mode = 'ansi,error_for_division_by_zero';

select @@sql_mode;

