--source include/have_debug.inc
SET sql_mode=ORACLE;

show variables like '%udt_format_result%';
set @@udt_format_result='DBA';

create table t1(a int,b varchar(20));
insert into t1 values(1,'aabb');
insert into t1 values(2,'qwed');

--echo #
--echo # test of udt type table set by same table's other row
--echo #
DELIMITER $$;
CREATE or replace PROCEDURE p1() as
type stu_record is record(
  id int := 1,
  name_d  varchar(20) := 'a',
  score float := 0
);
type tklist is table of stu_record INDEX BY pls_integer;
stu_record_val tklist;
begin
 stu_record_val(2) := stu_record(10,'a',1);
 stu_record_val(3).id := stu_record_val(2).id;
 select stu_record_val(3).id;
end;
$$
DELIMITER ;$$
call p1();
drop PROCEDURE p1;

--echo #
--echo # test of udt type table set by same table's other row
--echo #
DELIMITER $$;
CREATE or replace PROCEDURE p1() as
type stu_record is record(
  id int := 1,
  name_d  varchar(20) := 'a',
  score float := 0
);
type tklist is table of stu_record INDEX BY pls_integer;
stu_record_val tklist;
begin
 stu_record_val(2) := stu_record(10,'a',1);
 stu_record_val(3) := stu_record_val(2);
 select stu_record_val(3);
end;
$$
DELIMITER ;$$
call p1();
drop PROCEDURE p1;

--echo #
--echo # test of udt type table set by same table's other row
--echo #
DELIMITER $$;
CREATE or replace PROCEDURE p1() as
type stu_record is record(
  id int := 1,
  name_d  varchar(20) := 'a',
  score float := 0
);
type tklist is table of stu_record INDEX BY pls_integer;
stu_record_val tklist;
begin
 stu_record_val(2) := stu_record(10,'a',1);
 stu_record_val(3).id := stu_record_val(3).id+stu_record_val(2).id;
 select stu_record_val(3);
end;
$$
DELIMITER ;$$
--error ER_SP_NOT_EXIST_OF_RECORD_TABLE
call p1();
drop PROCEDURE p1;

--echo #
--echo # test of udt type table set by same table's other row
--echo #
DELIMITER $$;
create or replace procedure p1 as
type stu_record is record(
  id int := 1,
  name1  varchar(20) ,
  score float := 0
);
type tklist is table of stu_record index by binary_integer;
type stu_record1 is record(
  ii int := 1,
  stu_record_val1 tklist
);
stu_record_val stu_record1;
begin
stu_record_val.stu_record_val1(9).id :=9;
  begin
    stu_record_val.stu_record_val1(0).id := 2;
    stu_record_val.stu_record_val1(3).id :=  stu_record_val.stu_record_val1(3).id +  stu_record_val.stu_record_val1(9).id + stu_record_val.stu_record_val1(0).id;
  end;
   select stu_record_val.stu_record_val1(3).id;
END;
$$
DELIMITER ;$$
--error ER_SP_NOT_EXIST_OF_RECORD_TABLE
call p1();
drop PROCEDURE p1;

--echo #
--echo # test of udt type table used in group by
--echo #
DELIMITER $$;
CREATE or replace PROCEDURE p1() as
type stu_record is record(
  id int := 1,
  name_d  varchar(20) := 'a',
  score float := 0
);
type tklist is table of stu_record INDEX BY pls_integer;
stu_record_val tklist;
begin
 stu_record_val(3) := stu_record(10,'a',1);
 select stu_record_val(3).id from dual group by stu_record_val(3);
end;
$$
DELIMITER ;$$
--error ER_TYPE_IN_ORDER_BY
call p1();
drop PROCEDURE p1;

--echo #
--echo # test of udt type table used in left join
--echo #
DELIMITER $$;
CREATE or replace PROCEDURE p1() as
type stu_record is record(
  id int := 1,
  name_d  varchar(20) := 'a',
  score float := 0
);
type tklist is table of stu_record INDEX BY pls_integer;
stu_record_val tklist;
begin
 stu_record_val(3) := stu_record(10,'a',1);
 select stu_record_val(3).id from t1 a left join t1 b on stu_record_val(3)=1;
end;
$$
DELIMITER ;$$
--error ER_UDT_INCONS_DATATYPES
call p1();
drop PROCEDURE p1;

--echo #
--echo # test of udt type table used in left join
--echo #
DELIMITER $$;
CREATE or replace PROCEDURE p1() as
type stu_record is record(
  id int := 1,
  name_d  varchar(20) := 'a',
  score float := 0
);
type tklist is table of stu_record INDEX BY pls_integer;
stu_record_val tklist;
begin
 stu_record_val(3) := stu_record(10,'a',1);
 select stu_record_val(3).id from t1 a left join t1 b on stu_record_val=1;
end;
$$
DELIMITER ;$$
--error ER_NOT_SUPPORTED_YET
call p1();
drop PROCEDURE p1;

--echo #
--echo # test of udt type table used in left join
--echo #
create or replace type t_air as object(id int,type varchar(20));
DELIMITER $$;
CREATE or replace PROCEDURE p1() as
begin
 select t_air(1,1)=t_air(1,1);
end;
$$
DELIMITER ;$$
call p1();
drop PROCEDURE p1;

--echo #
--echo # test of udt type table used in if then
--echo #
DELIMITER $$;
CREATE or replace PROCEDURE p1() as
type stu_record is record(
  id int := 1,
  name_d  varchar(20) := 'a',
  score float := 0
);
type tklist is table of stu_record INDEX BY pls_integer;
stu_record_val tklist;
id int := 1;
begin
 stu_record_val(3) := stu_record(10,'a',1);
 if  stu_record_val(3) then
   id := id+1;
 end if;
end;
$$
DELIMITER ;$$
--error ER_NOT_SUPPORTED_YET
call p1();
drop PROCEDURE p1;

--echo #
--echo # test of udt type table used in avg()
--echo #
DELIMITER $$;
CREATE or replace PROCEDURE p1() as
type stu_record is record(
  id int := 1,
  name_d  varchar(20) := 'a',
  score float := 0
);
type tklist is table of stu_record INDEX BY pls_integer;
stu_record_val tklist;
begin
 stu_record_val(3) := stu_record(10,'a',1);
 SELECT avg(stu_record_val(3)) FROM dual;
end;
$$
DELIMITER ;$$
--error ER_NOT_SUPPORTED_YET
call p1();
drop PROCEDURE p1;

--echo #
--echo # test of udt type table used in nth_VALUE()
--echo #
DELIMITER $$;
CREATE or replace PROCEDURE p1() as
type stu_record is record(
  id int := 1,
  name_d  varchar(20) := 'a',
  score float := 0
);
type tklist is table of stu_record INDEX BY pls_integer;
stu_record_val tklist;
begin
 stu_record_val(3) := stu_record(10,'a',1);
 SELECT stu_record_val(3) , nth_VALUE(stu_record_val(3),1) over (order by stu_record_val(3)) a from dual;
end;
$$
DELIMITER ;$$
--error ER_NOT_SUPPORTED_YET
call p1();
drop PROCEDURE p1;

--echo #
--echo # test of udt type used in order
--echo #
DELIMITER $$;
Create or replace function f11(p1 t_air) return int 
as 
begin
  return p1.id;
End;
$$
DELIMITER ;$$
select * from t1 order by f11(t_air(1,2));
drop function f11;

drop type t_air;

--echo #
--echo # test of bug9480
--echo #
CREATE OR REPLACE TYPE inttab IS varray(3) OF int;
select (select inttab() from t1 limit 1)=(select inttab() from t1 limit 1);
select (select inttab(5,6) from t1 limit 1)=(select inttab(5,61) from t1 limit 1);
select (select inttab(5,6) from t1 limit 1)=(select inttab(5,6) from t1 limit 1);
select (select inttab(5,6)) = (select inttab(5,6));
select (select inttab(5,6)) = (select inttab(5,67));
select (select inttab(5,6)) = (select inttab(5,6) from t1 limit 1);
DELIMITER $$;
CREATE or replace PROCEDURE p1() as
stu_record_val inttab:=inttab(5,6);
begin
 select (select inttab(5,6)) = (select stu_record_val);
end;
$$
DELIMITER ;$$
call p1();
call p1();
drop PROCEDURE p1;

--echo #
--echo # test of bug9482
--echo #
DELIMITER $$;
CREATE or replace PROCEDURE p1() as
  type tklist is table of varchar(20) index by VARCHAR(32);
  stu_record_val1 tklist := tklist(3=>1,'a'=>2,0=>3);
  stu_record_val2 tklist := tklist(3=>1,'a'=>2,0=>null);
  stu_record_val3 tklist := tklist(3=>1,'b'=>2,0=>3);
begin
  select stu_record_val1=stu_record_val1,stu_record_val1=stu_record_val2,stu_record_val1=stu_record_val3;
  select (select stu_record_val1 from t1 limit 1)=(select stu_record_val3 from t1 limit 1);
  select (select stu_record_val1)=(select stu_record_val1);
end;
$$
DELIMITER ;$$
call p1();
call p1();
drop PROCEDURE p1;

DELIMITER $$;
CREATE or replace PROCEDURE p1() as
  type t_air is record(
    id int := 1,
    name_d  varchar(20) := 1
  );
  type tklist is table of t_air index by VARCHAR(32);
  stu_record_val1 tklist := tklist(3=>t_air(1,2),'a'=>t_air(2,3),0=>t_air(3,4));
  stu_record_val2 tklist := tklist(3=>t_air(1,2),'a'=>t_air(2,3),0=>null);
  stu_record_val3 tklist := tklist(3=>t_air(1,2),'b'=>t_air(2,3),0=>t_air(3,4));
begin
  select stu_record_val1=stu_record_val1,stu_record_val1=stu_record_val2,stu_record_val1=stu_record_val3;
  select (select stu_record_val1 from t1 limit 1)=(select stu_record_val3 from t1 limit 1);
  select (select stu_record_val1 from t1 limit 1)=(select stu_record_val1 from t1 limit 1);
end;
$$
DELIMITER ;$$
call p1();
call p1();
drop PROCEDURE p1;

--echo #
--echo # test of bug9506
--echo #
create or replace type t_air as object(id int,type varchar(20));
CREATE OR REPLACE TYPE t_air_table AS table OF t_air;
create table tt_air(id int,name1 t_air);
insert into tt_air values(1,t_air(10,'aabb'));
insert into tt_air values(2,t_air(20,'qwed'));
select * from table(inttab(1,2)) connect by level<2;
select t_air_table(t_air(1,2))=t_air_table(t_air(1,2)) from tt_air connect by level<2;
select (select t_air_table(t_air(1,2))) from tt_air connect by level<2;
select t_air_table(name1) from tt_air connect by level<2;
--error ER_NOT_SUPPORTED_YET
select CONNECT_BY_ROOT t_air_table(name1) ,level from tt_air connect by prior id=1;

DELIMITER $$;
CREATE or replace PROCEDURE p1() as
  type tklist is table of varchar(20) index by VARCHAR(32);
  stu_record_val1 tklist := tklist(3=>1,'a'=>2,0=>3);
  type t_air1 is record(
    id int := 1,
    name_d  varchar(20) := 1
  );
  type tklist1 is table of t_air1 index by VARCHAR(32);
  stu t_air1;
  stu_record_val2 tklist1 := tklist1(3=>t_air1(1,2),'a'=>t_air1(2,3),0=>t_air1(3,4));
begin
  select * from table(stu_record_val1) connect by level<2;
  select * from table(stu_record_val2) connect by level<2;
  select stu connect by level<3;
  select stu_record_val2 connect by level<2;
end;
$$
DELIMITER ;$$
call p1();
call p1();
drop PROCEDURE p1;
drop table tt_air;
drop TYPE t_air_table;
drop type t_air;

drop table t1;
drop type inttab;
