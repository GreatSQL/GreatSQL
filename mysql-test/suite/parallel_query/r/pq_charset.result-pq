create database pq_test;
use pq_test;
DROP TABLE IF EXISTS t1;
CREATE TABLE t1
(a INT,
b INT,
PRIMARY KEY (a))
ENGINE = InnoDB;
START TRANSACTION WITH CONSISTENT SNAPSHOT;
# con1
use pq_test;
ALTER TABLE t1 ADD INDEX idx1 (b);
# con default
SELECT b FROM t1 WHERE b = 0;
ERROR HY000: Table definition has changed, please retry transaction
SELECT b FROM t1 WHERE b = 0;
ERROR HY000: Table definition has changed, please retry transaction
SELECT * FROM t1;
ERROR HY000: Table definition has changed, please retry transaction
drop table pq_test.t1;
create table t1(a int) charset utf8mb4;
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
insert into t1 values (0),(1),(2),(3),(4),(5),(6),(7),(8),(9);
create table t2(a int);
insert into t2 select A.a + 10*(B.a + 10*C.a) from t1 A, t1 B, t1 C;
create table t3 (
a char(8) not null, b char(8) not null, filler char(200),
key(a)
);
insert into t3 select @a:=concat('c-', 1000+ A.a, '=w'), @a, 'filler' from t2 A;
Warnings:
Warning	1287	Setting user variables within expressions is deprecated and will be removed in a future release. Consider alternatives: 'SET variable=expression, ...', or 'SELECT expression(s) INTO variables(s)'.
insert into t3 select concat('c-', 1000+A.a, '=w'), concat('c-', 2000+A.a, '=w'),
'filler-1' from t2 A;
insert into t3 select concat('c-', 1000+A.a, '=w'), concat('c-', 3000+A.a, '=w'),
'filler-2' from t2 A;
select a,filler from t3 where a >= 'c-9011=w';
a	filler
select a,filler from t3 where a >= 'c-1011=w' and a <= 'c-1015=w';
a	filler
c-1011=w	filler
c-1011=w	filler-1
c-1011=w	filler-2
c-1012=w	filler
c-1012=w	filler-1
c-1012=w	filler-2
c-1013=w	filler
c-1013=w	filler-1
c-1013=w	filler-2
c-1014=w	filler
c-1014=w	filler-1
c-1014=w	filler-2
c-1015=w	filler
c-1015=w	filler-1
c-1015=w	filler-2
set optimizer_switch='mrr=on,mrr_cost_based=off';
select a,filler from t3 where a >= 'c-9011=w';
a	filler
drop table pq_test.t1;
set optimizer_switch='mrr=on,mrr_cost_based=on';
create table t1 (a int, key (a));
insert into t1 values (NULL), (0), (1), (2), (3), (4), (5), (6), (7), (8), (9),
(10), (11), (12), (13), (14), (15), (16), (17), (18), (19);
analyze table t1;
Table	Op	Msg_type	Msg_text
pq_test.t1	analyze	status	OK
explain select * from t1 where not(a < 5 or a > 15);
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	<gather2>	NULL	ALL	NULL	NULL	NULL	NULL	11	100.00	Parallel execute (1 workers)
2	SIMPLE	t1	NULL	range	a	a	5	NULL	11	100.00	Using where; Using index
Warnings:
Note	1003	/* select#1 */ select `pq_test`.`t1`.`a` AS `a` from `pq_test`.`t1` where ((`pq_test`.`t1`.`a` >= 5) and (`pq_test`.`t1`.`a` <= 15))
select * from t1 where not(a < 5 or a > 15);
a
5
6
7
8
9
10
11
12
13
14
15
explain select * from t1 where a = 2 or not(a < 10);
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	<gather2>	NULL	ALL	NULL	NULL	NULL	NULL	11	100.00	Parallel execute (2 workers)
2	SIMPLE	t1	NULL	range	a	a	5	NULL	11	100.00	Using where; Using index
Warnings:
Note	1003	/* select#1 */ select `pq_test`.`t1`.`a` AS `a` from `pq_test`.`t1` where ((`pq_test`.`t1`.`a` = 2) or (`pq_test`.`t1`.`a` >= 10))
select * from t1 where a = 2 or not(a < 10);
a
2
10
11
12
13
14
15
16
17
18
19
explain select * from t1 where a = 7 or not(a < 15 and a > 5);
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	<gather2>	NULL	ALL	NULL	NULL	NULL	NULL	12	100.00	Parallel execute (3 workers)
2	SIMPLE	t1	NULL	range	a	a	5	NULL	12	100.00	Using where; Using index
Warnings:
Note	1003	/* select#1 */ select `pq_test`.`t1`.`a` AS `a` from `pq_test`.`t1` where ((`pq_test`.`t1`.`a` = 7) or (`pq_test`.`t1`.`a` >= 15) or (`pq_test`.`t1`.`a` <= 5))
select * from t1 where a = 7 or not(a < 15 and a > 5);
a
0
1
2
3
4
5
7
15
16
17
18
19
delete from t1 where a > 3;
select a from t1;
a
NULL
0
1
2
3
analyze table t1;
Table	Op	Msg_type	Msg_text
pq_test.t1	analyze	status	OK
explain select * from t1 force index(a) where not(a >0 and a < 1);
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	<gather2>	NULL	ALL	NULL	NULL	NULL	NULL	4	100.00	Parallel execute (2 workers)
2	SIMPLE	t1	NULL	range	a	a	5	NULL	4	100.00	Using where; Using index
Warnings:
Note	1003	/* select#1 */ select `pq_test`.`t1`.`a` AS `a` from `pq_test`.`t1` FORCE INDEX (`a`) where ((`pq_test`.`t1`.`a` <= 0) or (`pq_test`.`t1`.`a` >= 1))
select * from t1 force index(a) where not(a >0 and a < 1);
a
0
1
2
3
select * from t1 where a < 3;
a
0
1
2
select * from t1 where a is null;
a
NULL
drop table pq_test.t1;
create table t1 (id int, id2 int, index (id));
insert into t1 values(2,2);
analyze table t1;
Table	Op	Msg_type	Msg_text
pq_test.t1	analyze	status	OK
select * from t1 where id is null or id > 1;
id	id2
2	2
insert into t1 values(null,2);
select * from t1;
id	id2
2	2
NULL	2
select * from t1 where id is null or id > 1;
id	id2
NULL	2
2	2
drop table pq_test.t1;
create table t1 (v varchar(10), c char(10), t text, key(v), key(c), key(t(10)))
stats_persistent=0;
insert into t1 values(concat(char(ascii('a')+1),' '),concat(char(ascii('a')+1),' '),concat(char(ascii('a')+1),' '));
insert into t1 values(concat(char(ascii('a')),' '),concat(char(ascii('a')),' '),concat(char(ascii('a')),' '));
insert into t1 values(concat(char(ascii('a')+1),'  '),concat(char(ascii('a')+1),'  '),concat(char(ascii('a')+1),'  '));
insert into t1 values(concat(char(ascii('a')),'  '),concat(char(ascii('a')),'  '),concat(char(ascii('a')),'  '));
select * from t1;
v	c	t
b 	b	b 
a 	a	a 
b  	b	b  
a  	a	a  
alter table t1 add key(v);
Warnings:
Warning	1831	Duplicate index 'v_2' defined on the table 'pq_test.t1'. This is deprecated and will be disallowed in a future release.
alter table t1 modify v varchar(300), drop key v, drop key v_2, add key v (v);
select count(*) from t1 where v like 'a%';
count(*)
2
select count(*) from t1 where v like 'a %';
count(*)
2
alter table t1 drop key v, add key v (v(30));
select 1 from t1 where v like 'a%';
1
1
1
select 1 from t1 where v like 'a %';
1
1
1
drop table pq_test.t1;
set names utf8mb4;
create table t1 (
a int primary key,
b varchar(6),
index b3(b(3))
) engine=innodb character set=utf8mb4;
insert into t1 values(1,'foo'),(2,'foobar');
select * from t1 where b like 'foob%';
a	b
2	foobar
drop table pq_test.t1;
CREATE TABLE t1 (
a char(255) DEFAULT '',
KEY(a(10))
) ENGINE=innodb DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;
INSERT INTO t1 VALUES ('KÃ¤li KÃ¤li 2-4');
SELECT * FROM t1 WHERE a LIKE 'KÃ¤li KÃ¤li 2%';
a
KÃ¤li KÃ¤li 2-4
INSERT INTO t1 VALUES ('KÃ¤li KÃ¤li 2-4');
SELECT * FROM t1 WHERE a LIKE 'KÃ¤li KÃ¤li 2%';
a
KÃ¤li KÃ¤li 2-4
KÃ¤li KÃ¤li 2-4
drop table pq_test.t1;
SET time_zone='+00:00';
CREATE TABLE t1 (a DECIMAL(20,7));
INSERT INTO t1 VALUES
(2147483647.999999),
(2147483647.9999990),
(2147483647.9999991),
(2147483647.9999992),
(2147483647.9999993),
(2147483647.9999994),
(2147483647.9999995),
(2147483647.9999996),
(2147483647.9999997),
(2147483647.9999998),
(2147483647.9999999);
SELECT a, FROM_UNIXTIME(a) FROM t1;
a	FROM_UNIXTIME(a)
2147483647.9999990	2038-01-19 03:14:07.999999
2147483647.9999990	2038-01-19 03:14:07.999999
2147483647.9999991	2038-01-19 03:14:07.999999
2147483647.9999992	2038-01-19 03:14:07.999999
2147483647.9999993	2038-01-19 03:14:07.999999
2147483647.9999994	2038-01-19 03:14:07.999999
2147483647.9999995	NULL
2147483647.9999996	NULL
2147483647.9999997	NULL
2147483647.9999998	NULL
2147483647.9999999	NULL
drop table pq_test.t1;
drop table pq_test.t2;
drop table pq_test.t3;
drop database pq_test;
