drop database if exists pq_database;
create database pq_database;
use pq_database;
set @saved_force_parallel_execute = @@force_parallel_execute;
set @saved_parallel_cost_threshold = @@parallel_cost_threshold;
set @saved_parallel_default_dop = @@parallel_default_dop;
set @saved_parallel_queue_timeout = @@parallel_queue_timeout;
set force_parallel_execute=1;
set parallel_cost_threshold=0;
set parallel_default_dop=1025;
Warnings:
Warning	1292	Truncated incorrect parallel_default_dop value: '1025'
show variables like 'parallel_default_dop';
Variable_name	Value
parallel_default_dop	1024
set parallel_queue_timeout=18446744073709551615;
show variables like 'parallel_queue_timeout';
Variable_name	Value
parallel_queue_timeout	18446744073709551615
set force_parallel_execute = @saved_force_parallel_execute;
set parallel_cost_threshold = @saved_parallel_cost_threshold;
set parallel_default_dop = @saved_parallel_default_dop;
set parallel_queue_timeout = @saved_parallel_queue_timeout;
DROP TABLE IF EXISTS `nation`;
CREATE TABLE t1 (
id int(11) NOT NULL PRIMARY KEY,
country varchar(32),
code int(11) default NULL
);
Warnings:
Warning	1681	Integer display width is deprecated and will be removed in a future release.
Warning	1681	Integer display width is deprecated and will be removed in a future release.
INSERT INTO t1 VALUES
(1,'ITALY',100),(2,'ITALY',200),(3,'FRANCE',100), (4,'ITALY',100);
explain SELECT code, COUNT(DISTINCT country) FROM t1 GROUP BY code ORDER BY MAX(id);
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	ALL	NULL	NULL	NULL	NULL	4	100.00	Using temporary; Using filesort
Warnings:
Note	1003	/* select#1 */ select `pq_database`.`t1`.`code` AS `code`,count(distinct `pq_database`.`t1`.`country`) AS `COUNT(DISTINCT country)` from `pq_database`.`t1` group by `pq_database`.`t1`.`code` order by max(`pq_database`.`t1`.`id`)
SELECT code, COUNT(DISTINCT country) FROM t1 GROUP BY code ORDER BY MAX(id);
code	COUNT(DISTINCT country)
200	1
100	2
explain SELECT code, COUNT(country) FROM t1 GROUP BY code ORDER BY MAX(id);
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	<gather2>	NULL	ALL	NULL	NULL	NULL	NULL	4	100.00	Parallel execute (1 workers)
2	SIMPLE	t1	NULL	ALL	NULL	NULL	NULL	NULL	4	100.00	Using temporary; Using filesort
Warnings:
Note	1003	/* select#1 */ select `pq_database`.`t1`.`code` AS `code`,count(`pq_database`.`t1`.`country`) AS `COUNT(country)` from `pq_database`.`t1` group by `pq_database`.`t1`.`code` order by max(`max(t1.id)`)
SELECT code, COUNT(country) FROM t1 GROUP BY code ORDER BY MAX(id);
code	COUNT(country)
200	1
100	3
drop table t1;
create table t1 (id int not null, text varchar(20) not null default '', primary key (id));
insert into t1 (id, text) values (1, 'text1'), (2, 'text2'), (3, 'text3'), (4, 'text4'), (5, 'text5'), (6, 'text6'), (7, 'text7'), (8, 'text8'), (9, 'text9'), (10, 'text10'), (11, 'text11'), (12, 'text12');
explain format=tree select * from t1 where id not in (select id from t1 where id < 8);
EXPLAIN
-> Parallel scan on <temporary>
    -> Nested loop antijoin  (cost=5.65 rows=12)
        -> PQblock scan on t1  (cost=1.45 rows=12)
        -> Filter: (t1.id < 8)  (cost=0.26 rows=1)
            -> Single-row covering index lookup on t1 using PRIMARY (id=t1.id)  (cost=0.26 rows=1)

select * from t1 where id not in (select id from t1 where id < 8);
id	text
8	text8
9	text9
10	text10
11	text11
12	text12
drop table t1;
drop database pq_database;
