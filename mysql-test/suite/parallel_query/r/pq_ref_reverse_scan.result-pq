create database pq_test;
use pq_test;
CREATE TABLE t1 ( 
pk INT NOT NULL AUTO_INCREMENT,
c1_idx CHAR(1) DEFAULT 'y', 
c2 INT, 
PRIMARY KEY (pk),
INDEX c1_idx (c1_idx)
) ENGINE=InnoDB;
INSERT INTO t1 VALUES (), (), (), ();
ANALYZE TABLE t1;
Table	Op	Msg_type	Msg_text
pq_test.t1	analyze	status	OK
explain select * from t1 where c1_idx = 'y' order by pk desc;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	<gather2>	NULL	ALL	NULL	NULL	NULL	NULL	4	100.00	Backward index scan; Parallel execute (1 workers)
2	SIMPLE	t1	NULL	ref	c1_idx	c1_idx	5	const	4	100.00	Using where; Backward index scan
Warnings:
Note	1003	/* select#1 */ select `pq_test`.`t1`.`pk` AS `pk`,`pq_test`.`t1`.`c1_idx` AS `c1_idx`,`pq_test`.`t1`.`c2` AS `c2` from `pq_test`.`t1` where (`pq_test`.`t1`.`c1_idx` = 'y') order by `pq_test`.`t1`.`pk` desc
select * from t1 where c1_idx = 'y' order by pk desc;
pk	c1_idx	c2
4	y	NULL
3	y	NULL
2	y	NULL
1	y	NULL
drop table pq_test.t1;
drop database pq_test;
