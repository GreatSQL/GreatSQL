--source include/pq_test.inc
--source include/have_debug.inc

create table t1(id int, a varchar(10));
insert into t1 values(1, 'aa'), (2, 'bb');

set @saved_force_parallel_execute = @@force_parallel_execute;

set session force_parallel_execute = 1;
explain select * from t1 limit 1;
select * from t1 limit 1;
show status like "PQ_memory_used";

set session debug="";
set session debug="+d, dup_thd_abort";

explain select * from t1 limit 1;

select * from t1 limit 1;
show status like "PQ_memory_used";

set session debug="";
set session debug="+d, dup_join_abort";

explain select * from t1 limit 1;

select * from t1 limit 1;
show status like "PQ_memory_used";

set session debug="";
set session debug="+d, dup_select_abort1";

explain select * from t1 limit 1;

select * from t1 limit 1;
show status like "PQ_memory_used";

set session debug="";
set session debug="+d, dup_select_abort2";
explain select * from t1 limit 1;

select * from t1 limit 1;
show status like "PQ_memory_used";

set session debug="+d, pq_leader_abort1";
explain select * from t1 limit 1;

select * from t1 limit 1;
show status like "PQ_memory_used";

set session debug="";
set session debug="+d, pq_leader_abort2";

--error ER_PARALLEL_FAIL_INIT
explain select * from t1 limit 1;

--error ER_PARALLEL_FAIL_INIT
select * from t1 limit 1;

show status like "PQ_memory_used";

set session debug="";
explain select * from t1 limit 1;
select * from t1 limit 1;
show status like "PQ_memory_used";

drop table t1;

# Case from opt_hints.test.
# BUG: this query has two tables, which cannot run parallelly,
# but dsmrr_init don't know pq is disabled.
CREATE TABLE t1(f1 INT, f2 INT);
INSERT INTO t1 VALUES
(1,1),(2,2),(3,3);

CREATE TABLE t2(f1 INT NOT NULL, f2 INT NOT NULL, f3 CHAR(200), KEY(f1, f2));
INSERT INTO t2 VALUES
(1,1, 'qwerty'),(1,2, 'qwerty'),(1,3, 'qwerty'),
(2,1, 'qwerty'),(2,2, 'qwerty'),(2,3, 'qwerty'), (2,4, 'qwerty'),(2,5, 'qwerty'),
(3,1, 'qwerty'),(3,4, 'qwerty'),
(4,1, 'qwerty'),(4,2, 'qwerty'),(4,3, 'qwerty'), (4,4, 'qwerty'),
(1,1, 'qwerty'),(1,2, 'qwerty'),(1,3, 'qwerty'),
(2,1, 'qwerty'),(2,2, 'qwerty'),(2,3, 'qwerty'), (2,4, 'qwerty'),(2,5, 'qwerty'),
(3,1, 'qwerty'),(3,4, 'qwerty'),
(4,1, 'qwerty'),(4,2, 'qwerty'),(4,3, 'qwerty'), (4,4, 'qwerty');

CREATE TABLE t3 (f1 INT NOT NULL, f2 INT, f3 VARCHAR(32),
                 PRIMARY KEY(f1), KEY f2_idx(f1), KEY f3_idx(f3));
INSERT INTO t3 VALUES
(1, 1, 'qwerty'), (2, 1, 'ytrewq'),
(3, 2, 'uiop'), (4, 2, 'poiu'), (5, 2, 'lkjh'),
(6, 2, 'uiop'), (7, 2, 'poiu'), (8, 2, 'lkjh'),
(9, 2, 'uiop'), (10, 2, 'poiu'), (11, 2, 'lkjh'),
(12, 2, 'uiop'), (13, 2, 'poiu'), (14, 2, 'lkjh');
INSERT INTO t3 SELECT f1 + 20, f2, f3 FROM t3;
INSERT INTO t3 SELECT f1 + 40, f2, f3 FROM t3;

SELECT /*+ BKA() */ t2.f1, t2.f2, t2.f3 FROM t1,t2
WHERE t1.f1=t2.f1 AND t2.f2 BETWEEN t1.f1 and t1.f2 and t2.f2 + 1 >= t1.f1 + 1;

drop table t1, t2, t3;
set session force_parallel_execute = @saved_force_parallel_execute;

--let $wait_counter= 10000
--source include/restart_mysqld.inc
