--source include/pq_test.inc
--source include/have_debug.inc

--disable_query_log
CALL mtr.add_suppression("[Parallel query]*");
--enable_query_log

CREATE TABLE t1(id int, name varchar(10), primary key(id));
INSERT INTO t1 VALUES(1,'AAAA');
INSERT INTO t1 VALUES(2,'BBBB');
INSERT INTO t1 VALUES(3,'CCCC');

#------------ TEST pq_clone_error1 ------#
EXPLAIN SELECT * FROM t1 WHERE id > 1;
SELECT * FROM t1 WHERE id > 1;

SET session debug="+d, pq_clone_error1";
--error ER_PARALLEL_FAIL_INIT
SELECT * FROM t1 WHERE id > 1;
SET session debug="-d, pq_clone_error1";

#------------ TEST LOCATE_FUNC ------#
SELECT LOCATE("A", name, 2) FROM t1;

#------------ TEST parallel_threads_running ---------#
set @saved_parallel_max_threads = @@parallel_max_threads;
SET GLOBAL parallel_max_threads = 5;

DELIMITER //;
CREATE PROCEDURE pro_insert(cnt int)
BEGIN
DECLARE i int DEFAULT 0;
START TRANSACTION;
WHILE i<cnt
DO
INSERT INTO t1 VALUES(i+4,'Tilay');
set i=i+1;
end WHILE;
COMMIT;
end//
DELIMITER ;//
CALL pro_insert(20000);

connect (con1, localhost, root);
connect (con2, localhost, root);

--connection con1
set session parallel_queue_timeout=1;
--send SELECT sum(id) from t1;

--connection con2
set session parallel_queue_timeout=1;
--send SELECT sum(id) from t1;

--connection con1
--reap

--connection con2
--echo ----con2 parallel query-----
--reap

--connection default
disconnect con1;
disconnect con2;

#----------- TEST pq_gather_error1 ------
SET debug="+d,pq_gather_error1";
--error ER_PARALLEL_FAIL_INIT
SELECT sum(id) from t1;
SET debug="-d,pq_gather_error1";

#----------- TEST pq_gather_error2 ------
SET debug="+d,pq_gather_error2";
--error ER_PARALLEL_FAIL_INIT
SELECT sum(id) from t1;
SET debug="-d,pq_gather_error2";

#----------- TEST pq_gather_error3 -------
SET debug="+d,pq_gather_error3";
--error ER_PARALLEL_FAIL_INIT
SELECT sum(id) from t1;
SET debug="-d,pq_gather_error3";

#----------- TEST simulate_item_clone_attr_copy_error -------
SET debug="+d,skip_pq_clone_check";
SET debug="+d,simulate_item_clone_attr_copy_error";
--error ER_PARALLEL_FAIL_INIT
SELECT id from t1;
--error ER_PARALLEL_FAIL_INIT
SELECT HEX(LTRIM(name)) from t1;
--error ER_PARALLEL_FAIL_INIT
SELECT sum(id+id) from t1;
SET debug="-d,simulate_item_clone_attr_copy_error";

#----------- TEST simulate_item_clone_error -------
SET debug="+d,simulate_item_clone_error";
--error ER_PARALLEL_FAIL_INIT
SELECT id from t1;
--error ER_PARALLEL_FAIL_INIT
SELECT HEX(LTRIM(name)) from t1;
--error ER_PARALLEL_FAIL_INIT
SELECT sum(id+id) from t1;
SET debug="-d,simulate_item_clone_error";

#----------- TEST simulate_no_item_copy_function -------
SET debug="+d,simulate_no_item_copy_function";
--error ER_PARALLEL_FAIL_INIT
SELECT id from t1;
--error ER_PARALLEL_FAIL_INIT
SELECT HEX(LTRIM(name)) from t1;
--error ER_PARALLEL_FAIL_INIT
SELECT sum(id+id) from t1;
SET debug="-d,simulate_no_item_copy_function";

--disable_query_log
CALL mtr.add_suppression("\\[Warning\\] .*deep copy method is not implemented, will not use parallel query, SQL=.*");
--enable_query_log

#----------- TEST simulate_item_type_mismatch -------
SET debug="+d,simulate_item_type_mismatch";
--error ER_PARALLEL_FAIL_INIT
SELECT id from t1;
SET debug="-d,simulate_item_type_mismatch";

--disable_query_log
CALL mtr.add_suppression("\\[Warning\\] .*is not equals to this class type .*, will not use parallel query, SQL=.*");
--enable_query_log

#----------- TEST simulate_item_rebuild_attr_copy_error -------
SET debug="+d,simulate_item_rebuild_attr_copy_error";
--error ER_PARALLEL_FAIL_INIT
SELECT count(id) from t1 group by name;
SET debug="-d,simulate_item_rebuild_attr_copy_error";

#----------- TEST simulate_item_rebuild_error -------
SET debug="+d,simulate_item_rebuild_error";
--error ER_PARALLEL_FAIL_INIT
SELECT count(id) from t1 group by name;
SET debug="-d,simulate_item_rebuild_error";

#----------- TEST simulate_no_item_rebuild_function -------
SET debug="+d,simulate_no_item_rebuild_function";
--error ER_PARALLEL_FAIL_INIT
SELECT count(id) from t1 group by name;
SET debug="-d,simulate_no_item_rebuild_function";

--disable_query_log
CALL mtr.add_suppression("\\[Warning\\] .*rebuild sum method is not implemented, will not use parallel query, SQL=.*");
--enable_query_log
SET debug="-d,skip_pq_clone_check";

#----------- clear -----------
SET GLOBAL parallel_max_threads = @saved_parallel_max_threads;
SET debug="";
DROP PROCEDURE pro_insert;
DROP TABLE t1;

CREATE TABLE t1 (i INT, d1 DECIMAL(9,2), d2 DECIMAL(9,2));
INSERT INTO t1 VALUES (1, 101.40, 21.40), (1, -80.00, 0.00),
(2, 0.00, 0.00), (2, -13.20, 0.00), (2, 59.60, 46.40),
(2, 30.40, 30.40), (3, 37.00, 7.40), (3, -29.60, 0.00),
(4, 60.00, 15.40), (4, -10.60, 0.00), (4, -34.00, 0.00),
(5, 33.00, 0.00), (5, -25.80, 0.00), (5, 0.00, 7.20),
(6, 0.00, 0.00), (6, -51.40, 0.00);

SELECT i, d1 AS a, d2 AS b FROM t1 HAVING a <> b;
SELECT i, SUM(d1) AS a, SUM(d2) AS b FROM t1 GROUP BY i HAVING a <> b;
drop table t1;


