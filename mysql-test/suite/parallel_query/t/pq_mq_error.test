--source include/pq_test.inc
--source include/have_debug.inc

--disable_query_log
CALL mtr.add_suppression("alloc space for exchange_record_pq error*");
CALL mtr.add_suppression("alloc space for exchange_record_reader error*");
CALL mtr.add_suppression("alloc space for sending m_buffer error*");
CALL mtr.add_suppression("not supported field*");
CALL mtr.add_suppression("send message to MQ error*");
CALL mtr.add_suppression("[Parallel query]*");
--enable_query_log

create table t1(id int, a varchar(10));
insert into t1 values(1, 'aa'), (2, 'bb');

set @saved_force_parallel_execute = @@force_parallel_execute;
set session force_parallel_execute = 1;
set session sql_mode = '';

--disable_query_log
let $1=500;
while ($1)
{
	eval INSERT INTO t1 VALUES (MOD($1, 43), 'cc');
	dec $1;
}
--enable_query_log

set session debug="";
set session debug="+d, pq_mq_error1";
--error ER_PARALLEL_EXEC_ERROR
select * from t1;
show status like "PQ_memory_used";

set session debug="";
set session debug="+d, pq_mq_error2";
--error ER_PARALLEL_EXEC_ERROR
select a, sum(a) from t1 group by a order by a desc, id;
show status like "PQ_memory_used";

set session debug="";
set session debug="+d, pq_mq_error3";
--error ER_STD_BAD_ALLOC_ERROR
select a from t1 order by a desc, id;
show status like "PQ_memory_used";

set session debug="";
set session debug="+d, pq_mq_error4";
--error ER_PARALLEL_EXEC_ERROR
select a from t1 order by a desc, id;
show status like "PQ_memory_used";

set session debug="";
set session debug="+d, pq_mq_error5";
--error ER_PARALLEL_EXEC_ERROR
select a from t1 order by a desc, id;
show status like "PQ_memory_used";

set session debug="+d, pq_mq_error6";
--error ER_PARALLEL_EXEC_ERROR
select * from t1 limit 20;
show status like "PQ_memory_used";

set session debug="";
select a, sum(a) from t1 group by a order by a desc, id limit 20;
show status like "PQ_memory_used";

drop table t1;
SET debug= DEFAULT;

--let $wait_counter= 10000
--source include/restart_mysqld.inc
