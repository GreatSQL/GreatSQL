include/group_replication.inc
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
[connection server1]
[connection server1]
include/start_and_bootstrap_group_replication.inc
[connection server2]
SET sql_log_bin=OFF;
CALL mtr.add_suppression("Plugin group_replication reported: 'Fatal error during execution on the Applier process of Group Replication. The server will now leave the group.'");
CALL mtr.add_suppression("Plugin group_replication reported: 'The server was automatically set into read only mode after an error was detected.'");
CALL mtr.add_suppression("Plugin group_replication reported: 'Skipping leave operation: concurrent attempt to leave the group is on-going.'");
CALL mtr.add_suppression("Plugin group_replication reported: 'Timeout while waiting for a view change event during the auto-rejoin procedure'");
SET sql_log_bin=ON;
include/start_group_replication.inc
[connection server1]
CREATE TABLE t1 (c1 INT PRIMARY KEY, c2 INT) ENGINE=InnoDB;
INSERT INTO t1 VALUES (1,1);
INSERT INTO t1 VALUES (2,2);
include/rpl_sync.inc
[connection server2]
SELECT * FROM t1;
c1	c2
1	1
2	2
SET GLOBAL debug='+d,group_replication_recv_binlog_chaos_no_rejoin';
[connection server1]
INSERT INTO t1 VALUES (3,3);
INSERT INTO t1 VALUES (4,4);
[connection server2]
include/gr_wait_for_member_state.inc
SELECT * FROM t1;
c1	c2
1	1
2	2
STOP GROUP_REPLICATION;
SET GLOBAL debug='-d,group_replication_recv_binlog_chaos_no_rejoin';
START GROUP_REPLICATION;
[connection server1]
INSERT INTO t1 VALUES (5,5);
INSERT INTO t1 VALUES (6,6);
include/rpl_sync.inc
[connection server2]
SELECT * FROM t1;
c1	c2
1	1
2	2
3	3
4	4
5	5
6	6
SET GLOBAL debug='+d,group_replication_recv_binlog_chaos';
[connection server1]
INSERT INTO t1 VALUES (7,7);
INSERT INTO t1 VALUES (8,8);
[connection server2]
include/gr_wait_for_member_state.inc
SET GLOBAL debug='-d,group_replication_recv_binlog_chaos';
[connection server1]
INSERT INTO t1 VALUES (9,9);
INSERT INTO t1 VALUES (10,10);
include/rpl_sync.inc
[connection server2]
SELECT * FROM t1;
c1	c2
1	1
2	2
3	3
4	4
5	5
6	6
7	7
8	8
9	9
10	10
[connection server1]
DROP TABLE t1;
include/rpl_sync.inc
STOP GROUP_REPLICATION;
[connection server2]
STOP GROUP_REPLICATION;
include/group_replication_end.inc
