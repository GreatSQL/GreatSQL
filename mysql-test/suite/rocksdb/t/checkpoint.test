--source include/have_rocksdb.inc

# Start from clean slate
#--source include/restart_mysqld.inc

CREATE TABLE t1 (
  a int not null,
  b int not null,
  primary key (a,b) comment 'cfname=cf1',
  key (b) comment 'cfname=rev:cf2'
) ENGINE=ROCKSDB;

CREATE TABLE t2 (
  a int not null,
  b int not null,
  primary key (a,b) comment 'cfname=cf1',
  key (b) comment 'cfname=rev:cf2'
) ENGINE=ROCKSDB;

CREATE TABLE t3 (
  a int not null,
  b int not null,
  primary key (a,b) comment 'cfname=cf1',
  key (b) comment 'cfname=rev:cf2'
) ENGINE=ROCKSDB;

CREATE TABLE t4 (
  a int not null,
  b int not null,
  primary key (a,b) comment 'cfname=cf1',
  key (b) comment 'cfname=rev:cf2'
) ENGINE=ROCKSDB;

# Populate tables
let $max = 1000;
let $table = t1;
--source suite/rocksdb/include/drop_table_repopulate_table.inc
let $table = t2;
--source suite/rocksdb/include/drop_table_repopulate_table.inc
let $table = t3;
--source suite/rocksdb/include/drop_table_repopulate_table.inc
let $table = t4;
--source suite/rocksdb/include/drop_table_repopulate_table.inc

# Make sure new table gets unique indices
CREATE TABLE t5 (
  a int not null,
  b int not null,
  primary key (a,b) comment 'cfname=cf1',
  key (b) comment 'cfname=rev:cf2'
) ENGINE=ROCKSDB;

let $max = 1000;
let $table = t5;
--source suite/rocksdb/include/drop_table_repopulate_table.inc

--source include/parse_rocksdb_fs_uri.inc

if ($rocksdb_zenfs_disabled)
{
  --let $TMP_CHECKPOINT_DIR = $MYSQL_TMP_DIR
}
if (!$rocksdb_zenfs_disabled)
{
  --let $TMP_CHECKPOINT_DIR = .
}

# Create checkpoint without trailing '/'
let $checkpoint = $TMP_CHECKPOINT_DIR/checkpoint;
let $succeeds = 1;
--source suite/rocksdb/include/set_checkpoint.inc

# Create checkpoint with a trailing '/'
let $checkpoint = $TMP_CHECKPOINT_DIR/checkpoint/;
let $succeeds = 1;
--source suite/rocksdb/include/set_checkpoint.inc

# Set checkpoint dir as empty string, which fails
let $checkpoint = ;
let $succeeds = 0;
--source suite/rocksdb/include/set_checkpoint.inc

# Set checkpoint as a directory that does not exist, which fails
let $checkpoint = /does/not/exist;
let $succeeds = 0;
--source suite/rocksdb/include/set_checkpoint.inc

# Set checkpoint as a directory that already exists, which fails
if ($rocksdb_zenfs_disabled)
{
  let $checkpoint = $TMP_CHECKPOINT_DIR/already-existing-directory;
  --mkdir $checkpoint
}
if (!$rocksdb_zenfs_disabled)
{
  #'./.rocksdb' exists in the aux directory of zenfs at this point
  let $checkpoint = $TMP_CHECKPOINT_DIR/.rocksdb;
}
let $succeeds = 0;
--source suite/rocksdb/include/set_checkpoint.inc

if ($rocksdb_zenfs_disabled)
{
  --force-rmdir $checkpoint
}

--disable_result_log
truncate table t1;
optimize table t1;
truncate table t2;
optimize table t2;
truncate table t3;
optimize table t3;
truncate table t4;
optimize table t4;
truncate table t5;
optimize table t5;
drop table if exists t1;
drop table if exists t2;
drop table if exists t3;
drop table if exists t4;
drop table if exists t5;
