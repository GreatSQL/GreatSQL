--source include/master-slave.inc

--connection master
--echo [On Master]
--echo
--echo # Attempting to rotate not existing key should
--echo # result in failure.
--error ER_SYSTEM_KEY_ROTATION_KEY_DOESNT_EXIST
ALTER INSTANCE ROTATE INNODB SYSTEM KEY 0;

CREATE TABLE t0(c1 INT PRIMARY KEY, c2 char(20)) ENCRYPTION="KEYRING";
INSERT INTO t0 VALUES(0, "aaaaa");
INSERT INTO t0 VALUES(1, "bbbbb");
INSERT INTO t0 VALUES(2, "ccccc");
CREATE TABLE t1(c1 INT PRIMARY KEY, c2 char(20));
INSERT INTO t1 VALUES(0, "aaaaa");
INSERT INTO t1 VALUES(1, "bbbbb");
INSERT INTO t1 VALUES(2, "ccccc");
CREATE TABLE t2(c1 INT PRIMARY KEY, c2 char(20)) ENCRYPTION_KEY_ID=1;
INSERT INTO t2 VALUES(0, "aaaaa");
INSERT INTO t2 VALUES(1, "bbbbb");
INSERT INTO t2 VALUES(2, "ccccc");

--echo # Only t1 should be encrypted with key 0 and t2 should be unencrypted
--echo # and have key 1 assigned.
--let $assert_text= Table t0 should get encrypted with key 0, version 1
--let $assert_cond= "[SELECT MIN_KEY_VERSION FROM INFORMATION_SCHEMA.INNODB_TABLESPACES_ENCRYPTION WHERE NAME=\\'test/t0\\' AND CURRENT_KEY_ID=0]" = 1
--source include/assert.inc
--let $assert_text= Table t2 should be unencrypted, but should have key id 1 assigned
--let $assert_cond= "[SELECT MIN_KEY_VERSION FROM INFORMATION_SCHEMA.INNODB_TABLESPACES_ENCRYPTION WHERE NAME=\\'test/t2\\' AND CURRENT_KEY_ID=1]" = 0
--source include/assert.inc

--echo
--source include/sync_slave_sql_with_master.inc
--echo [On Slave]

--echo # Only t1 should be encrypted with key 0 and t2 should be unencrypted
--echo # and have key 1 assigned.
--let $assert_text= Table t0 should get encrypted with key 0, version 1
--let $assert_cond= "[SELECT MIN_KEY_VERSION FROM INFORMATION_SCHEMA.INNODB_TABLESPACES_ENCRYPTION WHERE NAME=\\'test/t0\\' AND CURRENT_KEY_ID=0]" = 1
--source include/assert.inc
--let $assert_text= Table t2 should be unencrypted, but should have key id 1 assigned
--let $assert_cond= "[SELECT MIN_KEY_VERSION FROM INFORMATION_SCHEMA.INNODB_TABLESPACES_ENCRYPTION WHERE NAME=\\'test/t2\\' AND CURRENT_KEY_ID=1]" = 0
--source include/assert.inc

--connection master
--echo [On Master]
SET GLOBAL default_table_encryption=ONLINE_TO_KEYRING;
SET GLOBAL innodb_encryption_threads=4;

--connection slave
--echo [On Slave]
SET GLOBAL default_table_encryption=ONLINE_TO_KEYRING;
SET GLOBAL innodb_encryption_threads=4;

--connection master
--echo [On Master]

#We do not encrypt temporary tablespace
--let tables_count=`select count(*) from INFORMATION_SCHEMA.INNODB_TABLESPACES`
--echo # Wait max 10 min for key encryption threads to encrypt all spaces
--let $wait_timeout= 600
--let $wait_condition=SELECT COUNT(*) = $tables_count - 1 FROM INFORMATION_SCHEMA.INNODB_TABLESPACES_ENCRYPTION WHERE MIN_KEY_VERSION = 1
--source include/wait_condition.inc

--echo # Only t0, t1 should be encrypted with key 0 and t2 should be encrypted
--echo # with key 1.
--let $assert_text= Table t0 should get encrypted with key 0, version 1
--let $assert_cond= "[SELECT MIN_KEY_VERSION FROM INFORMATION_SCHEMA.INNODB_TABLESPACES_ENCRYPTION WHERE NAME=\\'test/t0\\' AND CURRENT_KEY_ID=0]" = 1
--source include/assert.inc
--let $assert_text= Table t1 should get encrypted with key 0, version 1
--let $assert_cond= "[SELECT MIN_KEY_VERSION FROM INFORMATION_SCHEMA.INNODB_TABLESPACES_ENCRYPTION WHERE NAME=\\'test/t1\\' AND CURRENT_KEY_ID=0]" = 1
--source include/assert.inc
--let $assert_text= Table t2 should get encrypted with key 1, version 1
--let $assert_cond= "[SELECT MIN_KEY_VERSION FROM INFORMATION_SCHEMA.INNODB_TABLESPACES_ENCRYPTION WHERE NAME=\\'test/t2\\' AND CURRENT_KEY_ID=1]" = 1
--source include/assert.inc

--source include/sync_slave_sql_with_master.inc
--echo [On Slave]

#We do not encrypt temporary tablespace
--let tables_count=`select count(*) from INFORMATION_SCHEMA.INNODB_TABLESPACES`
--echo # Wait max 10 min for key encryption threads to encrypt all spaces
--let $wait_timeout= 600
--let $wait_condition=SELECT COUNT(*) = $tables_count - 1 FROM INFORMATION_SCHEMA.INNODB_TABLESPACES_ENCRYPTION WHERE MIN_KEY_VERSION = 1
--source include/wait_condition.inc

--echo # Only t0, t1 should be encrypted with key 0 and t2 should be encrypted
--echo # with key 1.
--let $assert_text= Table t0 should get encrypted with key 0, version 1
--let $assert_cond= "[SELECT MIN_KEY_VERSION FROM INFORMATION_SCHEMA.INNODB_TABLESPACES_ENCRYPTION WHERE NAME=\\'test/t0\\' AND CURRENT_KEY_ID=0]" = 1
--source include/assert.inc
--let $assert_text= Table t1 should get encrypted with key 0, version 1
--let $assert_cond= "[SELECT MIN_KEY_VERSION FROM INFORMATION_SCHEMA.INNODB_TABLESPACES_ENCRYPTION WHERE NAME=\\'test/t1\\' AND CURRENT_KEY_ID=0]" = 1
--source include/assert.inc
--let $assert_text= Table t2 should get encrypted with key 1, version 1
--let $assert_cond= "[SELECT MIN_KEY_VERSION FROM INFORMATION_SCHEMA.INNODB_TABLESPACES_ENCRYPTION WHERE NAME=\\'test/t2\\' AND CURRENT_KEY_ID=1]" = 1
--source include/assert.inc

--connection master
--echo [On Master]
--echo # Rotate key 0 to version 2.
ALTER INSTANCE ROTATE INNODB SYSTEM KEY 0;

--echo # Wait max 10 min for key encryption threads to re-encrypt t0 and t1 with version 2 of key 0.
--let $wait_timeout= 600
--let $wait_condition=SELECT MIN(MIN_KEY_VERSION) = 2 FROM INFORMATION_SCHEMA.INNODB_TABLESPACES_ENCRYPTION WHERE CURRENT_KEY_ID = 0 AND name IN ('test/t0','test/t1')
--source include/wait_condition.inc

--let $assert_text= Table t2 should stay encrypted with version 1 of key 1
--let $assert_cond= "[SELECT MIN_KEY_VERSION FROM INFORMATION_SCHEMA.INNODB_TABLESPACES_ENCRYPTION WHERE NAME=\\'test/t2\\' AND CURRENT_KEY_ID=1]" = 1
--source include/assert.inc

--source include/sync_slave_sql_with_master.inc
--echo [On Slave]

--echo # Wait max 10 min for key encryption threads to re-encrypt t0 and t1 with version 2 of key 0.
--let $wait_timeout= 600
--let $wait_condition=SELECT MIN(MIN_KEY_VERSION) = 2 FROM INFORMATION_SCHEMA.INNODB_TABLESPACES_ENCRYPTION WHERE CURRENT_KEY_ID = 0 AND name IN ('test/t0','test/t1')
--source include/wait_condition.inc

--let $assert_text= Table t2 should stay encrypted with version 1 of key 1
--let $assert_cond= "[SELECT MIN_KEY_VERSION FROM INFORMATION_SCHEMA.INNODB_TABLESPACES_ENCRYPTION WHERE NAME=\\'test/t2\\' AND CURRENT_KEY_ID=1]" = 1
--source include/assert.inc

--connection master
--echo [On Master]
--echo # Rotate key 1 to version 2.
ALTER INSTANCE ROTATE INNODB SYSTEM KEY 1;

--echo # Wait max 10 min for key encryption threads to re-encrypt t2 with version 2 of key 1.
--let $wait_timeout= 600
--let $wait_condition=SELECT MIN_KEY_VERSION = 2 FROM INFORMATION_SCHEMA.INNODB_TABLESPACES_ENCRYPTION WHERE CURRENT_KEY_ID = 1 AND name = 'test/t2'
--source include/wait_condition.inc

--source include/sync_slave_sql_with_master.inc
--echo [On Slave]
--echo # Wait max 10 min for key encryption threads to re-encrypt t2 with version 2 of key 1.
--let $wait_timeout= 600
--let $wait_condition=SELECT MIN_KEY_VERSION = 2 FROM INFORMATION_SCHEMA.INNODB_TABLESPACES_ENCRYPTION WHERE CURRENT_KEY_ID = 1 AND name = 'test/t2'
--source include/wait_condition.inc

--echo # Cleanup
--connection master
--echo [On Master]
DROP TABLE t0,t1,t2;
SET GLOBAL innodb_encryption_threads=0;
SET GLOBAL default_table_encryption=OFF;

--source include/sync_slave_sql_with_master.inc
--echo [On Slave]
SET GLOBAL innodb_encryption_threads=0;
SET GLOBAL default_table_encryption=OFF;

--source include/rpl_end.inc
