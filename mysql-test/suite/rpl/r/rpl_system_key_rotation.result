include/master-slave.inc
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
[connection master]
[On Master]

# Attempting to rotate not existing key should
# result in failure.
ALTER INSTANCE ROTATE INNODB SYSTEM KEY 0;
ERROR HY000: InnoDB system key 0 cannot be rotated, because it does not exist.
CREATE TABLE t0(c1 INT PRIMARY KEY, c2 char(20)) ENCRYPTION="KEYRING";
INSERT INTO t0 VALUES(0, "aaaaa");
INSERT INTO t0 VALUES(1, "bbbbb");
INSERT INTO t0 VALUES(2, "ccccc");
CREATE TABLE t1(c1 INT PRIMARY KEY, c2 char(20));
INSERT INTO t1 VALUES(0, "aaaaa");
INSERT INTO t1 VALUES(1, "bbbbb");
INSERT INTO t1 VALUES(2, "ccccc");
CREATE TABLE t2(c1 INT PRIMARY KEY, c2 char(20)) ENCRYPTION_KEY_ID=1;
INSERT INTO t2 VALUES(0, "aaaaa");
INSERT INTO t2 VALUES(1, "bbbbb");
INSERT INTO t2 VALUES(2, "ccccc");
# Only t1 should be encrypted with key 0 and t2 should be unencrypted
# and have key 1 assigned.
include/assert.inc [Table t0 should get encrypted with key 0, version 1]
include/assert.inc [Table t2 should be unencrypted, but should have key id 1 assigned]

include/sync_slave_sql_with_master.inc
[On Slave]
# Only t1 should be encrypted with key 0 and t2 should be unencrypted
# and have key 1 assigned.
include/assert.inc [Table t0 should get encrypted with key 0, version 1]
include/assert.inc [Table t2 should be unencrypted, but should have key id 1 assigned]
[On Master]
SET GLOBAL default_table_encryption=ONLINE_TO_KEYRING;
SET GLOBAL innodb_encryption_threads=4;
[On Slave]
SET GLOBAL default_table_encryption=ONLINE_TO_KEYRING;
SET GLOBAL innodb_encryption_threads=4;
[On Master]
# Wait max 10 min for key encryption threads to encrypt all spaces
# Only t0, t1 should be encrypted with key 0 and t2 should be encrypted
# with key 1.
include/assert.inc [Table t0 should get encrypted with key 0, version 1]
include/assert.inc [Table t1 should get encrypted with key 0, version 1]
include/assert.inc [Table t2 should get encrypted with key 1, version 1]
include/sync_slave_sql_with_master.inc
[On Slave]
# Wait max 10 min for key encryption threads to encrypt all spaces
# Only t0, t1 should be encrypted with key 0 and t2 should be encrypted
# with key 1.
include/assert.inc [Table t0 should get encrypted with key 0, version 1]
include/assert.inc [Table t1 should get encrypted with key 0, version 1]
include/assert.inc [Table t2 should get encrypted with key 1, version 1]
[On Master]
# Rotate key 0 to version 2.
ALTER INSTANCE ROTATE INNODB SYSTEM KEY 0;
# Wait max 10 min for key encryption threads to re-encrypt t0 and t1 with version 2 of key 0.
include/assert.inc [Table t2 should stay encrypted with version 1 of key 1]
include/sync_slave_sql_with_master.inc
[On Slave]
# Wait max 10 min for key encryption threads to re-encrypt t0 and t1 with version 2 of key 0.
include/assert.inc [Table t2 should stay encrypted with version 1 of key 1]
[On Master]
# Rotate key 1 to version 2.
ALTER INSTANCE ROTATE INNODB SYSTEM KEY 1;
# Wait max 10 min for key encryption threads to re-encrypt t2 with version 2 of key 1.
include/sync_slave_sql_with_master.inc
[On Slave]
# Wait max 10 min for key encryption threads to re-encrypt t2 with version 2 of key 1.
# Cleanup
[On Master]
DROP TABLE t0,t1,t2;
SET GLOBAL innodb_encryption_threads=0;
SET GLOBAL default_table_encryption=OFF;
include/sync_slave_sql_with_master.inc
[On Slave]
SET GLOBAL innodb_encryption_threads=0;
SET GLOBAL default_table_encryption=OFF;
include/rpl_end.inc
