# Connection default
RESET MASTER;
CREATE TABLE t1(c1 INT);
INSERT INTO t1 VALUES(1);
INSERT INTO t1 VALUES(2);
FLUSH BINARY LOGS;
SET debug_sync = "process_commit_stage_queue_before_handle_gtid SIGNAL insert_in_sync WAIT_FOR insert_continue";
INSERT INTO t1 VALUES(3);
# Connection 1
SET DEBUG_SYNC= 'now WAIT_FOR insert_in_sync';
SET debug_sync = "log_resource_gtid_lock SIGNAL gtid_in_sync WAIT_FOR gtid_continue";
SELECT REPLACE(LOCAL->"$.gtid_executed", '"', '') INTO @ps_log_status FROM performance_schema.log_status;
# Connection 2
SET DEBUG_SYNC= 'now WAIT_FOR gtid_in_sync';
SET DEBUG_SYNC= 'now SIGNAL gtid_continue';
SET DEBUG_SYNC= 'now SIGNAL insert_continue';
# Connection 1
include/assert.inc [Gtid_executed is updated with GTID 4]
SET debug_sync = "process_commit_stage_queue_before_handle_gtid SIGNAL insert_in_sync WAIT_FOR insert_continue";
INSERT INTO t1 VALUES(4);
# Connection 1
SET DEBUG_SYNC= 'now WAIT_FOR insert_in_sync';
SET debug_sync = "log_resource_gtid_lock SIGNAL gtid_in_sync WAIT_FOR gtid_continue";
SELECT REPLACE(LOCAL->"$.gtid_executed", '"', '') INTO @ps_log_status FROM performance_schema.log_status;
# Connection 2
SET DEBUG_SYNC= 'now WAIT_FOR gtid_in_sync';
SET DEBUG_SYNC= 'now SIGNAL gtid_continue';
include/assert.inc [SELECT is waiting on LOCK_commit]
SET DEBUG_SYNC= 'now SIGNAL insert_continue';
DROP TABLE t1;
