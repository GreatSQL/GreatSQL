--source include/have_tokudb.inc
--source include/have_debug_sync.inc

--echo ### connection default

CREATE TABLE t (a INT PRIMARY KEY, b INT) ENGINE=TokuDB;

INSERT INTO t (a, b) VALUES (1, 1), (2, 2), (3, 3), (4, 4), (5, 5),
                            (6, 6), (7, 7), (8, 8), (9, 9), (10, 10),
                            (11, 11), (12, 12), (13, 13), (14, 14), (15, 15),
                            (16, 16), (17, 17), (18, 18), (19, 19), (20, 20);

--connect(con1, localhost, root)
--connect(con2, localhost, root)

--connection con1
--echo ### connection con1
SET DEBUG_SYNC= 'toku_range_lock_granted_immediately SIGNAL lock_granted WAIT_FOR lock_granted_continue';
--send UPDATE t SET b=1 WHERE a BETWEEN 5 AND 10

--connection default
--echo ### connection default
SET DEBUG_SYNC= 'now WAIT_FOR lock_granted';

--connection con2
--echo ### connection con2
--let $con2_id= `SELECT CONNECTION_ID()`
SET DEBUG_SYNC= 'toku_range_lock_before_wait SIGNAL lock_not_granted WAIT_FOR lock_not_granted_continue';
SET DEBUG_SYNC= 'toku_range_lock_not_granted_after_wait SIGNAL lock_not_granted_after_wait';
--send UPDATE t SET b=1 WHERE a BETWEEN 5 AND 10

--connection default
--echo ### connection default
SET DEBUG_SYNC= 'now SIGNAL lock_not_granted_continue WAIT_FOR lock_not_granted';

--disable_query_log
--eval KILL QUERY $con2_id
--enable_query_log
--echo KILL QUERY con2_id
SET DEBUG_SYNC= 'now SIGNAL lock_granted_continue WAIT_FOR lock_not_granted_after_wait';

--connection con1
--echo ### connection con1
--echo ### reap
--reap

--connection con2
--echo ### connection con2
--echo ### reap
--error ER_QUERY_INTERRUPTED
--reap

--connection default
--echo ### connection default

DROP TABLE t;
