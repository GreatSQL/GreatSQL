set optimizer_switch='remove_useless_outerjoin=on';
create table join_aa(ida int, age int);
create table join_bb(ida int, age int);
insert into join_aa values(1, 2);
insert into join_aa values(1, 3);
insert into join_aa values(null, 4);

insert into join_bb values(1, 1);
insert into join_bb values(1, 2);
insert into join_bb values(4, 3);
insert into join_bb values(null, 7);
insert into join_bb values(null, 7);

select t1.* from join_aa t1 left join join_bb t2 on t1.ida = t2.ida;


select * from join_aa;

create table join_cc(ida int, age int);
alter table join_cc add primary key (ida);
insert into join_cc values(1, 2);
insert into join_cc values(2, 2);
select * from join_cc;
select t1.* from join_aa t1 left join join_cc t2 on t1.ida = t2.ida;
--replace_column 10 #
explain select t1.* from join_aa t1 left join join_cc t2 on t1.ida = t2.ida;

select t1.* from join_aa t1 left join (select ida, count(age) from join_cc group by ida) t2 on t1.ida = t2.ida;
select t1.* from join_aa t1 left join (select age, max(ida), count(*) from join_cc group by age) t2 on t1.ida = t2.age;
--replace_column 10 #
explain select t1.* from join_aa t1 left join (select ida, count(age) from join_cc group by ida) t2 on t1.ida = t2.ida;
--replace_column 10 #
explain select t1.* from join_aa t1 left join (select age, max(ida), count(*) from join_cc group by age) t2 on t1.ida = t2.age;

--replace_column 10 #
explain select t1.* from join_aa t1 left join join_cc t2 on t1.ida = t2.ida join join_bb t3 on t1.ida = t3.ida;
--replace_column 10 #
explain select t1.* from join_aa t1 left join join_bb t2 on t1.ida = t2.ida left join join_cc t3 on t1.ida = t3.ida;
--replace_column 10 #
explain select * from (select t1.* from join_aa t1 left join join_cc t2 on t1.ida = t2.ida);
--replace_column 10 #
explain select * from (select t1.* from join_aa t1 left join join_cc t2 on t1.ida = t2.ida limit 10) t join join_bb tt on t.ida = tt.ida;
--replace_column 10 #
explain select t1.* from join_aa t1 left join join_cc t2 on t1.ida = t2.ida join join_bb t3 on t1.ida = t3.ida and t2.age = t1.age; 

create table join_dd(ida int, age int, score int);
create unique index u_key on join_dd(ida);
create index c_key on join_dd(age);
create unique index u_key2 on join_dd(ida, score);
insert into join_dd values(1, 2, 3);
insert into join_dd values(null, 2, null);
insert into join_dd values(3, null, 3);
select * from join_dd;
select t1.* from join_aa t1 left join join_dd t2 on t1.ida = t2.ida;
--replace_column 10 #
explain select t1.* from join_aa t1 left join join_dd t2 on t1.ida = t2.ida;
select t1.* from join_aa t1 left join join_cc t2 on t1.ida = t2.ida left join join_dd t3 on t2.ida = t3.ida;
--replace_column 10 #
explain select t1.* from join_aa t1 left join join_cc t2 on t1.ida = t2.ida left join join_dd t3 on t2.ida = t3.ida;
--replace_column 10 #
explain select t1.* from join_aa t1 left join (select t2.ida, t2.age from join_cc t2 left join join_dd t3 on t2.ida = t3.ida) t2 on t1.ida = t2.ida;
--replace_column 10 #
explain select t1.* from join_aa t1 left join (select t2.ida, t2.age from join_cc t2 left join join_dd t3 on t2.ida = t3.ida) t3 on t1.ida = t3.ida;
--replace_column 10 #
explain select t1.* from join_aa t1 left join (join_cc t2 left join join_dd t3 on t2.ida = t3.ida) on t1.ida = t2.ida;
create unique index u_key_join_aa on join_aa(ida, age);
--replace_column 10 #
explain select t1.*  from join_aa t1 full  join join_dd t2 on t1.ida = t2.ida;


create table join_ee(ida int, age int);
alter table join_ee add primary key(ida, age);
insert into join_ee values(1, 2);
insert into join_ee values(1, 3);

--replace_column 10 #
explain select t1.* from (join_aa t1 left join join_cc t2 on t1.ida = t2.ida) left join (join_dd t3 join join_ee t4 on t3.ida = t4.ida) on t1.ida = t3.ida;
--replace_column 10 #
explain select t1.* from (join_aa t1 left join join_cc t2 on t1.ida = t2.ida) left join (join_dd t3 join join_ee t4 on t3.ida = t4.ida) on t1.ida = t1.ida;
--replace_column 10 #
explain select t1.* from (join_aa t1 left join join_cc t2 on t1.ida = t2.ida) left join (join_dd t3 left join join_dd t4 on t3.ida = t4.ida) on t1.ida = t1.ida;

## no support not uniquey key.
--replace_column 10 #
explain select t1.* from join_aa t1 left join join_dd t2 on t1.ida = t2.age;
## no support multi columns key optimize.
--replace_column 10 #
explain select t1.* from join_aa t1 left join join_dd t2 on t1.ida = t2.ida and t1.age = t2.age;
--replace_column 10 #
explain select t1.* from join_aa t1 left join join_ee t2 on t1.ida = t2.ida and t1.age = t2.age;
--replace_column 10 #
explain select t1.* from join_aa t1 left join (select ida, age from join_cc group by ida, age) t2 on t1.ida = t2.age;
--replace_column 10 #
explain select t1.* from join_aa t1 left join (select distinct ida, age from join_cc) t2 on t1.ida = t2.age;
drop table join_aa, join_bb, join_cc, join_dd, join_ee;

create table t2(grade int,name varchar2(200));
create unique index idx1 on t2(grade);
insert into t2 values(1, 'test1');
insert into t2 values(2, 'test2');
insert into t2 values(3, 'test3');
insert into t2 values(4, 'test4');
create table s1(id int,grade int);
insert into s1 values(1, -1);
insert into s1 values(2, 1);
insert into s1 values(3, 1);
insert into s1 values(4, 2);

select s1.id , s1.grade  from s1 left join t2 on s1.id = t2.grade connect by prior s1.id = s1.grade;
--replace_column 10 #
explain select s1.id , s1.grade  from s1 left join t2 on s1.id = t2.grade connect by prior s1.id = s1.grade;
create unique index idx2 on s1(id);
--replace_column 10 #
select t2.grade, t2.name from s1 right join t2 on s1.id = t2.grade connect by prior s1.id = s1.grade;
explain select t2.grade, t2.name from s1 right join t2 on s1.id = t2.grade connect by prior s1.id = s1.grade;
drop table t2, s1;

##fixbug7838
set sql_mode=oracle;
drop table if exists x1,x1_rate;
drop table if exists x2;
drop view if exists v1;
create table x1(c1 int, c2 varchar(20));
insert into x1 values(1,'math');
insert into x1 values(2,'english');
insert into x1 values(7,'economic');
create table x1_rate(c1 int ,c2 double);
create unique index idx1 on x1_rate(c1);
insert into x1_rate values(3,'3');
insert into x1_rate values(2,'2');
insert into x1_rate values(5,'5');
create table x2 as select x1.c1, ratio_to_report(x1.c1) over(partition by x1.c1) c2 from x1 left join x1_rate on x1.c1 = x1_rate.c1;
insert into x2 values(10,100);
create unique index idx2 on x2(c1);
update x2 ,(select x1_rate.c1, ratio_to_report(x1_rate.c1) over() c2 from x1_rate left join x2 on x1_rate.c1=x2.c1 ) tmp set x2.c2=tmp.c2 where x2.c1=tmp.c1;
--replace_column 10 #
explain update x2 ,(select x1_rate.c1, ratio_to_report(x1_rate.c1) over() c2 from x1_rate left join x2 on x1_rate.c1=x2.c1 ) tmp set x2.c2=tmp.c2 where x2.c1=tmp.c1;
select * from x2 order by 1,2;
delete from x2 where c2 in (select ratio_to_report(x1.c1) over() c2 from x1 left join x1_rate on x1_rate.c1=x1.c1 );
--replace_column 10 #
explain delete from x2 where c2 in (select ratio_to_report(x1.c1) over() c2 from x1 left join x1_rate on x1_rate.c1=x1.c1 );
select * from x2 order by 1,2;
drop table x1;
drop table x2;
drop table x1_rate;

set sql_mode='';
create table x1(s1 int , s2 varchar(20)) comment 'shard=sd3';
insert into x1 values(4000,'0.2');
insert into x1 values(6000,'0.1');
insert into x1 values(4000,'0.8');
insert into x1 values(6000,'0.9');
create table x2(s1 int primary key , s2 varchar(20)) comment 'shard=sd3';
insert into x2 values(4000,'0.1');
insert into x2 values(6000,'0.9');
insert into x2 values(7000,'1');
create table x3(c1 int primary key , c2 varchar(20)) comment 'shard=sd3';
insert into x3 values(4000,'0.1');
insert into x3 values(6000,'0.9');
insert into x3 values(7000,'1');
select x1.*,dt.* from x1 left join (select s1, sum(s1) as s1_sum, s2, max(s2) as s2_max from x2 left join x3 on x2.s1=x3.c1) dt on x1.s2=dt.s1_sum;
--replace_column 10 #
explain select x1.*,dt.* from x1 left join (select s1, sum(s1) as s1_sum, s2, max(s2) as s2_max from x2 left join x3 on x2.s1=x3.c1) dt on x1.s2=dt.s1_sum;
drop table x1, x2, x3;

##bug7837
create table x1 (
    id1 int  primary key,
    id2 int ,
    id3 int ,
    name varchar(30),
    name2 varchar(30) 
);
insert into x1(id1, id2, id3, name, name2) values(1, 2, 3, 'test1', 'test1');
insert into x1(id1, id2, id3, name, name2) values(4, 5, 6, 'test2', 'test2');

create table x2 (
    id1 int  primary key,
    id2 int ,
    id3 int ,
    name varchar(30),
    name2 varchar(30) 
);
insert into x2(id1, id2, id3, name, name2) values(1, 2, 3, 'test1', 'test1');
insert into x2(id1, id2, id3, name, name2) values(4, 5, 6, 'test2', 'test2');
select sum(1) over() as tmp, d.*
from (select x1.* from x1) d left join (select x2.* from x2) q on d.id1=q.id1 order by d.name;
--replace_column 10 #
EXPLAIN select sum(1) over() as tmp, d.*
from (select x1.* from x1) d left join (select x2.* from x2) q on d.id1=q.id1 order by d.name;

EXPLAIN select sum(1) over() as tmp, d.*
from (select x1.* from x1) d left join (select x2.* from x2 join x1 on x2.id2 = x1.id2) q on d.id1=q.id1 order by d.name;

drop table x1, x2;

##bug7836
drop table if exists x1,x2,x3;
create table x1(id int primary key,a int,b int);
insert into x1 values(1,1,1);
insert into x1 values(2,2,2);

create table x2(id int primary key,a int,b int);
insert into x2 values(1,1,1);
insert into x2 values(3,3,3);

create table x3 as select * from x1;
--replace_regex /cost=\d+.\d+/cost=***/  /rows=\d+/rows=***/
EXPLAIN format=tree update x3 set a=a+200 where a in (select x1.a from x1 left join x2 on x1.id=x2.id);
--replace_regex /cost=\d+.\d+/cost=***/  /rows=\d+/rows=***/
EXPLAIN format=tree delete from  x3 where a in (select x1.a from x1 left join x2 on x1.id=x2.id);
--replace_regex /cost=\d+.\d+/cost=***/  /rows=\d+/rows=***/
EXPLAIN format=tree select * from  x3 where a in (select x1.a from x1 left join x2 on x1.id=x2.id);
--replace_regex /cost=\d+.\d+/cost=***/  /rows=\d+/rows=***/
EXPLAIN format=tree insert into x3 select * from x1 where a in (select x1.a from x1 left join x2 on x1.id=x2.id);
--replace_regex /cost=\d+.\d+/cost=***/  /rows=\d+/rows=***/
EXPLAIN format=tree select x1.a from x1 left join x2 on x1.id=x2.id;

drop table x1, x2, x3;
